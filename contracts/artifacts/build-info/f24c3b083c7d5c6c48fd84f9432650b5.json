{
	"id": "f24c3b083c7d5c6c48fd84f9432650b5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/USDM.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport \"./ERC20.sol\";\n\ncontract USDM is ERC20UpgradeSafe {\n    constructor() ERC20UpgradeSafe(\"USD Moonlab\", \"USDM1\") {\n        \n    }\n}\n"
			},
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport \"./Context.sol\";\nimport \"./IERC20.sol\";\nimport \"./SafeMath.sol\";\nimport \"./Address.sol\";\nimport \"./Initializable.sol\";\n\ncontract ERC20UpgradeSafe is Initializable, ContextUpgradeSafe, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n\n    constructor(string memory tokenName, string memory tokenSymbol) initializer {\n        __Context_init_unchained();\n        _name = tokenName;\n        _symbol = tokenSymbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            _msgSender(),\n            _allowances[sender][_msgSender()].sub(\n                amount,\n                \"ERC20: transfer amount exceeds allowance\"\n            )\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender].add(addedValue)\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender].sub(\n                subtractedValue,\n                \"ERC20: decreased allowance below zero\"\n            )\n        );\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(\n            amount,\n            \"ERC20: transfer amount exceeds balance\"\n        );\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(\n            amount,\n            \"ERC20: burn amount exceeds balance\"\n        );\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    uint256[44] private __gap;\n}\n"
			},
			"contracts/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\ncontract Initializable {\r\n\r\n  /**\r\n   * @dev Indicates that the contract has been initialized.\r\n   */\r\n  bool private initialized;\r\n\r\n  /**\r\n   * @dev Indicates that the contract is in the process of being initialized.\r\n   */\r\n  bool private initializing;\r\n\r\n  /**\r\n   * @dev Modifier to use in the initializer function of a contract.\r\n   */\r\n  modifier initializer() {\r\n    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\r\n\r\n    bool isTopLevelCall = !initializing;\r\n    if (isTopLevelCall) {\r\n      initializing = true;\r\n      initialized = true;\r\n    }\r\n\r\n    _;\r\n\r\n    if (isTopLevelCall) {\r\n      initializing = false;\r\n    }\r\n  }\r\n\r\n  /// @dev Returns true if and only if the function is running in the constructor\r\n  function isConstructor() private view returns (bool) {\r\n    // extcodesize checks the size of the code stored in an address, and\r\n    // address returns the current address. Since the code is still not\r\n    // deployed when running a constructor, any checks on its code size will\r\n    // yield zero, making it an effective way to detect if a contract is\r\n    // under construction or not.\r\n    address self = address(this);\r\n    uint256 cs;\r\n    assembly { cs := extcodesize(self) }\r\n    return cs == 0;\r\n  }\r\n\r\n  // Reserved storage space to allow for layout changes in the future.\r\n  uint256[50] private ______gap;\r\n}"
			},
			"contracts/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n}\r\n"
			},
			"contracts/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\nimport \"./Initializable.sol\";\n\ncontract ContextUpgradeSafe is Initializable {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n\n    function __Context_init() internal initializer {\n        __Context_init_unchained();\n    }\n\n    function __Context_init_unchained() internal initializer {}\n\n    function _msgSender() internal view virtual returns (address payable) {\n        return payable(msg.sender);\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n\n    uint256[50] private __gap;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Address.sol\":60:2624  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Address.sol\":60:2624  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122063a4c89d6a62b5e8af03ef9f9e6b3d329cd8796ce0ac2d3d4c183c62cde8942c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122063a4c89d6a62b5e8af03ef9f9e6b3d329cd8796ce0ac2d3d4c183c62cde8942c64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xA4C89D6A PUSH3 0xB5E8AF SUB 0xEF SWAP16 SWAP15 PUSH12 0x3D329CD8796CE0AC2D3D4C18 EXTCODECOPY PUSH3 0xCDE894 0x2C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "60:2564:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;60:2564:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122063a4c89d6a62b5e8af03ef9f9e6b3d329cd8796ce0ac2d3d4c183c62cde8942c64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xA4C89D6A PUSH3 0xB5E8AF SUB 0xEF SWAP16 SWAP15 PUSH12 0x3D329CD8796CE0AC2D3D4C18 EXTCODECOPY PUSH3 0xCDE894 0x2C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "60:2564:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 2624,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063a4c89d6a62b5e8af03ef9f9e6b3d329cd8796ce0ac2d3d4c183c62cde8942c64736f6c63430008110033",
									".code": [
										{
											"begin": 60,
											"end": 2624,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2624,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 2624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 2624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 2624,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Address.sol",
								"contracts/Context.sol",
								"contracts/ERC20.sol",
								"contracts/IERC20.sol",
								"contracts/Initializable.sol",
								"contracts/SafeMath.sol",
								"contracts/USDM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xf0079f7d951de77767005886e2fadacaf9192688e06090325f004a4346d49383\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bece5b11a4e62e1846173386ecf480910a10af6b019a86ab2a59e1b660aef2f8\",\"dweb:/ipfs/QmbstfaSgJ2Q46YcFudkZ5SFUAtHXoiCxDiZnN8FWXzHqX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Context.sol": {
				"ContextUpgradeSafe": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Context.sol\":87:837  contract ContextUpgradeSafe is Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Context.sol\":87:837  contract ContextUpgradeSafe is Initializable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220727018402aa4b9a5ad26f9233b9d16871e5053553e285242684286301698595464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220727018402aa4b9a5ad26f9233b9d16871e5053553e285242684286301698595464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x7018402AA4B9A5AD26F9233B9D16871E505355 RETURNDATACOPY 0x28 MSTORE TIMESTAMP PUSH9 0x428630169859546473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "87:750:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220727018402aa4b9a5ad26f9233b9d16871e5053553e285242684286301698595464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x7018402AA4B9A5AD26F9233B9D16871E505355 RETURNDATACOPY 0x28 MSTORE TIMESTAMP PUSH9 0x428630169859546473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "87:750:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"__Context_init()": "infinite",
								"__Context_init_unchained()": "infinite",
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 87,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 87,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 87,
									"end": 837,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 87,
									"end": 837,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 87,
									"end": 837,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 87,
									"end": 837,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 87,
									"end": 837,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 87,
									"end": 837,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 87,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 837,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 87,
									"end": 837,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 87,
									"end": 837,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 87,
									"end": 837,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 87,
									"end": 837,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 87,
									"end": 837,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 87,
									"end": 837,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 87,
									"end": 837,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 87,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 837,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 87,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 837,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220727018402aa4b9a5ad26f9233b9d16871e5053553e285242684286301698595464736f6c63430008110033",
									".code": [
										{
											"begin": 87,
											"end": 837,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 87,
											"end": 837,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 87,
											"end": 837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 87,
											"end": 837,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Address.sol",
								"contracts/Context.sol",
								"contracts/ERC20.sol",
								"contracts/IERC20.sol",
								"contracts/Initializable.sol",
								"contracts/SafeMath.sol",
								"contracts/USDM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Context.sol\":\"ContextUpgradeSafe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0x406fa0cfc58f5baf9f8a910d28bfb8ac4615d29369df677c833cfe511a293480\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3766fa5419c9e50c0ee79841b5d3404910851005c2a41c86bb2879beb291d147\",\"dweb:/ipfs/Qmb1bvvnFPijJD1oocq34eK3yM8RGGU8GzhgRxAzAXY4a4\"]},\"contracts/Initializable.sol\":{\"keccak256\":\"0x7baf0ed980d789497ecea609b7459e3c7c8045772aa3805bab4e9730cf2c1ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40ba8fc2453da882540d1a31a02c3ef9796e1a8bbfaa349d407bc6045d7efa6d\",\"dweb:/ipfs/QmVw28aviekGV9NifK2PzWrBtCxM2rbq8CLhNsrH6LYVNQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 710,
								"contract": "contracts/Context.sol:ContextUpgradeSafe",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 713,
								"contract": "contracts/Context.sol:ContextUpgradeSafe",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 778,
								"contract": "contracts/Context.sol:ContextUpgradeSafe",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 109,
								"contract": "contracts/Context.sol:ContextUpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20.sol": {
				"ERC20UpgradeSafe": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":184:10346  contract ERC20UpgradeSafe is Initializable, ContextUpgradeSafe, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20.sol\":887:1088  constructor(string memory tokenName, string memory tokenSymbol) initializer {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Initializable.sol\":443:455  initializing */\n  sload(0x00)\n  0x0100\n  swap1\n  div\n  0xff\n  and\n  dup1\n    /* \"contracts/Initializable.sol\":443:474  initializing || isConstructor() */\n  tag_7\n  jumpi\n  pop\n    /* \"contracts/Initializable.sol\":1261:1265  this */\n  address\n    /* \"contracts/Initializable.sol\":1307:1324  extcodesize(self) */\n  extcodesize\n    /* \"contracts/Initializable.sol\":1339:1346  cs == 0 */\n  iszero\n    /* \"contracts/Initializable.sol\":459:474  isConstructor() */\ntag_7:\n    /* \"contracts/Initializable.sol\":443:490  initializing || isConstructor() || !initialized */\n  dup1\n  tag_9\n  jumpi\n  pop\n    /* \"contracts/Initializable.sol\":479:490  initialized */\n  and(0xff, sload(0x00))\n    /* \"contracts/Initializable.sol\":478:490  !initialized */\n  iszero\n    /* \"contracts/Initializable.sol\":443:490  initializing || isConstructor() || !initialized */\ntag_9:\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n  tag_10\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1760:1762   */\n  0x20\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1742:1763   */\n  mstore\n    /* \"#utility.yul\":1799:1801   */\n  0x2e\n    /* \"#utility.yul\":1779:1797   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1772:1802   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_dc12ae8220c8de7014142805a332ae4e2e45dfffa340e9d79b20c86951735405\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":1818:1836   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1811:1873   */\n  mstore\n  shl(0x92, 0x195b881a5b9a5d1a585b1a5e9959)\n    /* \"#utility.yul\":1889:1907   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1882:1926   */\n  mstore\n    /* \"#utility.yul\":1943:1962   */\n  0x84\n  add\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_10:\n    /* \"contracts/Initializable.sol\":550:569  bool isTopLevelCall */\n  0x00\n    /* \"contracts/Initializable.sol\":573:585  initializing */\n  sload\n  0x0100\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/Initializable.sol\":572:585  !initializing */\n  iszero\n    /* \"contracts/Initializable.sol\":592:675  if (isTopLevelCall) {... */\n  dup1\n  iszero\n  tag_13\n  jumpi\n    /* \"contracts/Initializable.sol\":621:633  initializing */\n  0x00\n    /* \"contracts/Initializable.sol\":621:640  initializing = true */\n  dup1\n  sload\n  not(0xffff)\n    /* \"contracts/Initializable.sol\":649:667  initialized = true */\n  and\n  0x0101\n  or\n  swap1\n  sstore\n    /* \"contracts/Initializable.sol\":592:675  if (isTopLevelCall) {... */\ntag_13:\n    /* \"contracts/ERC20.sol\":973:999  __Context_init_unchained() */\n  tag_15\n    /* \"contracts/ERC20.sol\":973:997  __Context_init_unchained */\n  tag_16\n    /* \"contracts/ERC20.sol\":973:999  __Context_init_unchained() */\n  jump\t// in\ntag_15:\n    /* \"contracts/ERC20.sol\":1009:1014  _name */\n  0x68\n    /* \"contracts/ERC20.sol\":1009:1026  _name = tokenName */\n  tag_17\n    /* \"contracts/ERC20.sol\":1017:1026  tokenName */\n  dup5\n    /* \"contracts/ERC20.sol\":1009:1014  _name */\n  dup3\n    /* \"contracts/ERC20.sol\":1009:1026  _name = tokenName */\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/ERC20.sol\":1036:1043  _symbol */\n  0x69\n    /* \"contracts/ERC20.sol\":1036:1057  _symbol = tokenSymbol */\n  tag_19\n    /* \"contracts/ERC20.sol\":1046:1057  tokenSymbol */\n  dup4\n    /* \"contracts/ERC20.sol\":1036:1043  _symbol */\n  dup3\n    /* \"contracts/ERC20.sol\":1036:1057  _symbol = tokenSymbol */\n  tag_18\n  jump\t// in\ntag_19:\n  pop\n    /* \"contracts/ERC20.sol\":1067:1076  _decimals */\n  0x6a\n    /* \"contracts/ERC20.sol\":1067:1081  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/ERC20.sol\":1079:1081  18 */\n  0x12\n    /* \"contracts/ERC20.sol\":1067:1081  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/Initializable.sol\":693:750  if (isTopLevelCall) {... */\n  dup1\n  iszero\n  tag_20\n  jumpi\n    /* \"contracts/Initializable.sol\":737:742  false */\n  0x00\n    /* \"contracts/Initializable.sol\":722:742  initializing = false */\n  dup1\n  sload\n  not(0xff00)\n  and\n  swap1\n  sstore\n    /* \"contracts/Initializable.sol\":693:750  if (isTopLevelCall) {... */\ntag_20:\n    /* \"contracts/Initializable.sol\":428:755  {... */\n  pop\n    /* \"contracts/ERC20.sol\":887:1088  constructor(string memory tokenName, string memory tokenSymbol) initializer {... */\n  pop\n  pop\n    /* \"contracts/ERC20.sol\":184:10346  contract ERC20UpgradeSafe is Initializable, ContextUpgradeSafe, IERC20 {... */\n  jump(tag_38)\n    /* \"contracts/Context.sol\":389:448  function __Context_init_unchained() internal initializer {} */\ntag_16:\n    /* \"contracts/Initializable.sol\":443:455  initializing */\n  sload(0x00)\n  0x0100\n  swap1\n  div\n  0xff\n  and\n  dup1\n    /* \"contracts/Initializable.sol\":443:474  initializing || isConstructor() */\n  tag_25\n  jumpi\n  pop\n    /* \"contracts/Initializable.sol\":1261:1265  this */\n  address\n    /* \"contracts/Initializable.sol\":1307:1324  extcodesize(self) */\n  extcodesize\n    /* \"contracts/Initializable.sol\":1339:1346  cs == 0 */\n  iszero\n    /* \"contracts/Initializable.sol\":459:474  isConstructor() */\ntag_25:\n    /* \"contracts/Initializable.sol\":443:490  initializing || isConstructor() || !initialized */\n  dup1\n  tag_26\n  jumpi\n  pop\n    /* \"contracts/Initializable.sol\":479:490  initialized */\n  and(0xff, sload(0x00))\n    /* \"contracts/Initializable.sol\":478:490  !initialized */\n  iszero\n    /* \"contracts/Initializable.sol\":443:490  initializing || isConstructor() || !initialized */\ntag_26:\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n  tag_27\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1760:1762   */\n  0x20\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1742:1763   */\n  mstore\n    /* \"#utility.yul\":1799:1801   */\n  0x2e\n    /* \"#utility.yul\":1779:1797   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1772:1802   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_dc12ae8220c8de7014142805a332ae4e2e45dfffa340e9d79b20c86951735405\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":1818:1836   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1811:1873   */\n  mstore\n  shl(0x92, 0x195b881a5b9a5d1a585b1a5e9959)\n    /* \"#utility.yul\":1889:1907   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1882:1926   */\n  mstore\n    /* \"#utility.yul\":1943:1962   */\n  0x84\n  add\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n  tag_11\n    /* \"#utility.yul\":1558:1968   */\n  jump\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\ntag_27:\n    /* \"contracts/Initializable.sol\":550:569  bool isTopLevelCall */\n  0x00\n    /* \"contracts/Initializable.sol\":573:585  initializing */\n  sload\n  0x0100\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/Initializable.sol\":572:585  !initializing */\n  iszero\n    /* \"contracts/Initializable.sol\":592:675  if (isTopLevelCall) {... */\n  dup1\n  iszero\n  tag_29\n  jumpi\n    /* \"contracts/Initializable.sol\":621:633  initializing */\n  0x00\n    /* \"contracts/Initializable.sol\":621:640  initializing = true */\n  dup1\n  sload\n  not(0xffff)\n    /* \"contracts/Initializable.sol\":649:667  initialized = true */\n  and\n  0x0101\n  or\n  swap1\n  sstore\n    /* \"contracts/Initializable.sol\":592:675  if (isTopLevelCall) {... */\ntag_29:\n    /* \"contracts/Initializable.sol\":697:711  isTopLevelCall */\n  dup1\n    /* \"contracts/Initializable.sol\":693:750  if (isTopLevelCall) {... */\n  iszero\n  tag_31\n  jumpi\n    /* \"contracts/Initializable.sol\":737:742  false */\n  0x00\n    /* \"contracts/Initializable.sol\":722:742  initializing = false */\n  dup1\n  sload\n  not(0xff00)\n  and\n  swap1\n  sstore\n    /* \"contracts/Initializable.sol\":693:750  if (isTopLevelCall) {... */\ntag_31:\n    /* \"contracts/Initializable.sol\":428:755  {... */\n  pop\n    /* \"contracts/Context.sol\":389:448  function __Context_init_unchained() internal initializer {} */\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_32:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_33:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_41:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_43\n  tag_32\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_45\n  tag_32\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_46:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_47:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_47)\ntag_49:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_51:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_52:\n    /* \"#utility.yul\":1309:1370   */\n  tag_53\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_33\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_54:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_55\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1973:2353   */\ntag_34:\n    /* \"#utility.yul\":2052:2053   */\n  0x01\n    /* \"#utility.yul\":2048:2060   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2095:2107   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2116:2177   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2170:2174   */\n  0x7f\n    /* \"#utility.yul\":2162:2168   */\n  dup3\n    /* \"#utility.yul\":2158:2175   */\n  and\n    /* \"#utility.yul\":2148:2175   */\n  swap2\n  pop\n    /* \"#utility.yul\":2116:2177   */\ntag_58:\n    /* \"#utility.yul\":2223:2225   */\n  0x20\n    /* \"#utility.yul\":2215:2221   */\n  dup3\n    /* \"#utility.yul\":2212:2226   */\n  lt\n    /* \"#utility.yul\":2192:2210   */\n  dup2\n    /* \"#utility.yul\":2189:2227   */\n  sub\n    /* \"#utility.yul\":2186:2347   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":2269:2279   */\n  0x4e487b71\n    /* \"#utility.yul\":2264:2267   */\n  0xe0\n    /* \"#utility.yul\":2260:2280   */\n  shl\n    /* \"#utility.yul\":2257:2258   */\n  0x00\n    /* \"#utility.yul\":2250:2281   */\n  mstore\n    /* \"#utility.yul\":2304:2308   */\n  0x22\n    /* \"#utility.yul\":2301:2302   */\n  0x04\n    /* \"#utility.yul\":2294:2309   */\n  mstore\n    /* \"#utility.yul\":2332:2336   */\n  0x24\n    /* \"#utility.yul\":2329:2330   */\n  0x00\n    /* \"#utility.yul\":2322:2337   */\n  revert\n    /* \"#utility.yul\":2186:2347   */\ntag_59:\n  pop\n    /* \"#utility.yul\":1973:2353   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2484:3029   */\ntag_36:\n    /* \"#utility.yul\":2586:2588   */\n  0x1f\n    /* \"#utility.yul\":2581:2584   */\n  dup3\n    /* \"#utility.yul\":2578:2589   */\n  gt\n    /* \"#utility.yul\":2575:3023   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2622:2623   */\n  0x00\n    /* \"#utility.yul\":2647:2652   */\n  dup2\n    /* \"#utility.yul\":2643:2645   */\n  dup2\n    /* \"#utility.yul\":2636:2653   */\n  mstore\n    /* \"#utility.yul\":2692:2696   */\n  0x20\n    /* \"#utility.yul\":2688:2690   */\n  dup2\n    /* \"#utility.yul\":2678:2697   */\n  keccak256\n    /* \"#utility.yul\":2762:2764   */\n  0x1f\n    /* \"#utility.yul\":2750:2760   */\n  dup6\n    /* \"#utility.yul\":2746:2765   */\n  add\n    /* \"#utility.yul\":2743:2744   */\n  0x05\n    /* \"#utility.yul\":2739:2766   */\n  shr\n    /* \"#utility.yul\":2733:2737   */\n  dup2\n    /* \"#utility.yul\":2729:2767   */\n  add\n    /* \"#utility.yul\":2798:2802   */\n  0x20\n    /* \"#utility.yul\":2786:2796   */\n  dup7\n    /* \"#utility.yul\":2783:2803   */\n  lt\n    /* \"#utility.yul\":2780:2827   */\n  iszero\n  tag_63\n  jumpi\n  pop\n    /* \"#utility.yul\":2821:2825   */\n  dup1\n    /* \"#utility.yul\":2780:2827   */\ntag_63:\n    /* \"#utility.yul\":2876:2878   */\n  0x1f\n    /* \"#utility.yul\":2871:2874   */\n  dup6\n    /* \"#utility.yul\":2867:2879   */\n  add\n    /* \"#utility.yul\":2864:2865   */\n  0x05\n    /* \"#utility.yul\":2860:2880   */\n  shr\n    /* \"#utility.yul\":2854:2858   */\n  dup3\n    /* \"#utility.yul\":2850:2881   */\n  add\n    /* \"#utility.yul\":2840:2881   */\n  swap2\n  pop\n    /* \"#utility.yul\":2931:3013   */\ntag_64:\n    /* \"#utility.yul\":2949:2951   */\n  dup2\n    /* \"#utility.yul\":2942:2947   */\n  dup2\n    /* \"#utility.yul\":2939:2952   */\n  lt\n    /* \"#utility.yul\":2931:3013   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2994:3011   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2975:2976   */\n  0x01\n    /* \"#utility.yul\":2964:2977   */\n  add\n    /* \"#utility.yul\":2931:3013   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":2935:2938   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2575:3023   */\ntag_62:\n    /* \"#utility.yul\":2484:3029   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3205:4557   */\ntag_18:\n    /* \"#utility.yul\":3325:3335   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3347:3377   */\n  dup2\n  gt\n    /* \"#utility.yul\":3344:3400   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3380:3398   */\n  tag_70\n  tag_32\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3409:3506   */\n  tag_71\n    /* \"#utility.yul\":3499:3505   */\n  dup2\n    /* \"#utility.yul\":3459:3497   */\n  tag_72\n    /* \"#utility.yul\":3491:3495   */\n  dup5\n    /* \"#utility.yul\":3485:3496   */\n  sload\n    /* \"#utility.yul\":3459:3497   */\n  tag_34\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3453:3457   */\n  dup5\n    /* \"#utility.yul\":3409:3506   */\n  tag_36\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3561:3565   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3625:3627   */\n  0x1f\n    /* \"#utility.yul\":3614:3628   */\n  dup4\n  gt\n    /* \"#utility.yul\":3642:3643   */\n  0x01\n    /* \"#utility.yul\":3637:4300   */\n  dup2\n  eq\n  tag_74\n  jumpi\n    /* \"#utility.yul\":4344:4345   */\n  0x00\n    /* \"#utility.yul\":4361:4367   */\n  dup5\n    /* \"#utility.yul\":4358:4447   */\n  iszero\n  tag_75\n  jumpi\n  pop\n    /* \"#utility.yul\":4413:4432   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4407:4433   */\n  mload\n    /* \"#utility.yul\":4358:4447   */\ntag_75:\n  not(0x00)\n    /* \"#utility.yul\":3162:3163   */\n  0x03\n    /* \"#utility.yul\":3158:3169   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":3154:3178   */\n  shr\n    /* \"#utility.yul\":3150:3179   */\n  not\n    /* \"#utility.yul\":3140:3180   */\n  and\n    /* \"#utility.yul\":3186:3187   */\n  0x01\n    /* \"#utility.yul\":3182:3193   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3137:3194   */\n  or\n    /* \"#utility.yul\":4460:4541   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3607:4551   */\n  jump(tag_66)\n    /* \"#utility.yul\":3637:4300   */\ntag_74:\n    /* \"#utility.yul\":2431:2432   */\n  0x00\n    /* \"#utility.yul\":2424:2438   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2468:2472   */\n  0x20\n    /* \"#utility.yul\":2455:2473   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3673:3693   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3791:4027   */\ntag_78:\n    /* \"#utility.yul\":3805:3812   */\n  dup3\n    /* \"#utility.yul\":3802:3803   */\n  dup2\n    /* \"#utility.yul\":3799:3813   */\n  lt\n    /* \"#utility.yul\":3791:4027   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3894:3913   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3888:3914   */\n  mload\n    /* \"#utility.yul\":3873:3915   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3986:4013   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3954:3955   */\n  0x01\n    /* \"#utility.yul\":3942:3956   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3821:3840   */\n  dup5\n  add\n    /* \"#utility.yul\":3791:4027   */\n  jump(tag_78)\ntag_80:\n    /* \"#utility.yul\":3795:3798   */\n  pop\n    /* \"#utility.yul\":4055:4061   */\n  dup6\n    /* \"#utility.yul\":4046:4053   */\n  dup3\n    /* \"#utility.yul\":4043:4062   */\n  lt\n    /* \"#utility.yul\":4040:4241   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":4116:4135   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":4110:4136   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4199:4200   */\n  0x03\n    /* \"#utility.yul\":4195:4209   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4211:4214   */\n  0xf8\n    /* \"#utility.yul\":4191:4215   */\n  and\n    /* \"#utility.yul\":4187:4224   */\n  shr\n    /* \"#utility.yul\":4183:4225   */\n  not\n    /* \"#utility.yul\":4168:4226   */\n  and\n    /* \"#utility.yul\":4153:4227   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4040:4241   */\ntag_81:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4287:4288   */\n  0x01\n    /* \"#utility.yul\":4271:4285   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4267:4289   */\n  add\n    /* \"#utility.yul\":4254:4290   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3205:4557   */\n  jump\t// out\ntag_38:\n    /* \"contracts/ERC20.sol\":184:10346  contract ERC20UpgradeSafe is Initializable, ContextUpgradeSafe, IERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_dc12ae8220c8de7014142805a332ae4e2e45dfffa340e9d79b20c86951735405 436f6e747261637420696e7374616e63652068617320616c7265616479206265\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":184:10346  contract ERC20UpgradeSafe is Initializable, ContextUpgradeSafe, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20.sol\":1153:1234  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3269:3471  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/ERC20.sol\":3269:3471  function approve(address spender, uint256 amount)... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/ERC20.sol\":2196:2294  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/ERC20.sol\":2275:2287  _totalSupply */\n      sload(0x67)\n        /* \"contracts/ERC20.sol\":2196:2294  function totalSupply() public view override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/ERC20.sol\":2196:2294  function totalSupply() public view override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/ERC20.sol\":3931:4370  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/ERC20.sol\":2055:2136  function decimals() public view returns (uint8) {... */\n    tag_7:\n        /* \"contracts/ERC20.sol\":2120:2129  _decimals */\n      sload(0x6a)\n        /* \"contracts/ERC20.sol\":2055:2136  function decimals() public view returns (uint8) {... */\n      mload(0x40)\n        /* \"contracts/ERC20.sol\":2120:2129  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/ERC20.sol\":2055:2136  function decimals() public view returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/ERC20.sol\":4765:5054  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/ERC20.sol\":2352:2469  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":2444:2462  _balances[account] */\n      and\n        /* \"contracts/ERC20.sol\":2418:2425  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":2444:2462  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":2444:2453  _balances */\n      0x65\n        /* \"contracts/ERC20.sol\":2444:2462  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC20.sol\":2352:2469  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/ERC20.sol\":1347:1432  function symbol() public view returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/ERC20.sol\":5541:5927  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/ERC20.sol\":2672:2880  function transfer(address recipient, uint256 amount)... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/ERC20.sol\":2938:3131  function allowance(address owner, address spender)... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":3097:3115  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC20.sol\":3067:3074  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":3097:3115  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":3097:3108  _allowances */\n      0x66\n        /* \"contracts/ERC20.sol\":3097:3115  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC20.sol\":3097:3124  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC20.sol\":2938:3131  function allowance(address owner, address spender)... */\n      jump\n        /* \"contracts/ERC20.sol\":1153:1234  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \"contracts/ERC20.sol\":1190:1203  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":1222:1227  _name */\n      0x68\n        /* \"contracts/ERC20.sol\":1215:1227  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1153:1234  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3269:3471  function approve(address spender, uint256 amount)... */\n    tag_22:\n        /* \"contracts/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3404:3443  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":3427:3434  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":3436:3442  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":3404:3412  _approve */\n      tag_74\n        /* \"contracts/ERC20.sol\":3404:3443  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"contracts/ERC20.sol\":3460:3464  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3269:3471  function approve(address spender, uint256 amount)... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3931:4370  function transferFrom(... */\n    tag_32:\n        /* \"contracts/ERC20.sol\":4067:4071  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4083:4119  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"contracts/ERC20.sol\":4093:4099  sender */\n      dup5\n        /* \"contracts/ERC20.sol\":4101:4110  recipient */\n      dup5\n        /* \"contracts/ERC20.sol\":4112:4118  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":4083:4092  _transfer */\n      tag_78\n        /* \"contracts/ERC20.sol\":4083:4119  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n        /* \"contracts/ERC20.sol\":4129:4342  _approve(... */\n      tag_79\n        /* \"contracts/ERC20.sol\":4151:4157  sender */\n      dup5\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":4197:4332  _allowances[sender][_msgSender()].sub(... */\n      tag_81\n        /* \"contracts/ERC20.sol\":4252:4258  amount */\n      dup6\n        /* \"contracts/ERC20.sol\":4197:4332  _allowances[sender][_msgSender()].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":4197:4216  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":4197:4208  _allowances */\n      0x66\n        /* \"contracts/ERC20.sol\":4197:4216  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":4197:4230  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/ERC20.sol\":4197:4234  _allowances[sender][_msgSender()].sub */\n      tag_83\n        /* \"contracts/ERC20.sol\":4197:4332  _allowances[sender][_msgSender()].sub(... */\n      jump\t// in\n    tag_81:\n        /* \"contracts/ERC20.sol\":4129:4137  _approve */\n      tag_74\n        /* \"contracts/ERC20.sol\":4129:4342  _approve(... */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"contracts/ERC20.sol\":4359:4363  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3931:4370  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":4765:5054  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_40:\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":4877:4881  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4966:4991  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":4966:4977  _allowances */\n      0x66\n        /* \"contracts/ERC20.sol\":4966:4991  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":4966:5000  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4877:4881  bool */\n      swap1\n      swap2\n        /* \"contracts/ERC20.sol\":4897:5026  _approve(... */\n      tag_71\n      swap2\n        /* \"contracts/ERC20.sol\":4945:4952  spender */\n      dup6\n      swap1\n        /* \"contracts/ERC20.sol\":4966:5016  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_81\n      swap1\n        /* \"contracts/ERC20.sol\":5005:5015  addedValue */\n      dup7\n        /* \"contracts/ERC20.sol\":4966:5004  _allowances[_msgSender()][spender].add */\n      tag_90\n        /* \"contracts/ERC20.sol\":4966:5016  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1347:1432  function symbol() public view returns (string memory) {... */\n    tag_48:\n        /* \"contracts/ERC20.sol\":1386:1399  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":1418:1425  _symbol */\n      0x69\n        /* \"contracts/ERC20.sol\":1411:1425  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"contracts/ERC20.sol\":5541:5927  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_52:\n        /* \"contracts/ERC20.sol\":5658:5662  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":5678:5899  _approve(... */\n      tag_71\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":5726:5733  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":5747:5889  _allowances[_msgSender()][spender].sub(... */\n      tag_81\n        /* \"contracts/ERC20.sol\":5803:5818  subtractedValue */\n      dup6\n        /* \"contracts/ERC20.sol\":5747:5889  _allowances[_msgSender()][spender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":5747:5772  _allowances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":5747:5758  _allowances */\n      0x66\n        /* \"contracts/ERC20.sol\":5747:5772  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":5747:5781  _allowances[_msgSender()][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/ERC20.sol\":5747:5785  _allowances[_msgSender()][spender].sub */\n      tag_83\n        /* \"contracts/ERC20.sol\":5747:5889  _allowances[_msgSender()][spender].sub(... */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":2672:2880  function transfer(address recipient, uint256 amount)... */\n    tag_56:\n        /* \"contracts/ERC20.sol\":2790:2794  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":2810:2852  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":2834:2843  recipient */\n      dup5\n        /* \"contracts/ERC20.sol\":2845:2851  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":2810:2819  _transfer */\n      tag_78\n        /* \"contracts/ERC20.sol\":2810:2852  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":8823:9193  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":8954:8973  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC20.sol\":8946:9014  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2943:2945   */\n      0x20\n        /* \"contracts/ERC20.sol\":8946:9014  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2925:2946   */\n      mstore\n        /* \"#utility.yul\":2982:2984   */\n      0x24\n        /* \"#utility.yul\":2962:2980   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2955:2985   */\n      mstore\n        /* \"#utility.yul\":3021:3055   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3001:3019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2994:3056   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3072:3090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3065:3099   */\n      mstore\n        /* \"#utility.yul\":3116:3135   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":8946:9014  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":9032:9053  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/ERC20.sol\":9024:9092  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3348:3350   */\n      0x20\n        /* \"contracts/ERC20.sol\":9024:9092  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3330:3351   */\n      mstore\n        /* \"#utility.yul\":3387:3389   */\n      0x22\n        /* \"#utility.yul\":3367:3385   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3360:3390   */\n      mstore\n        /* \"#utility.yul\":3426:3460   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3406:3424   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3399:3461   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3477:3495   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3470:3502   */\n      mstore\n        /* \"#utility.yul\":3519:3538   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":9024:9092  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_110\n        /* \"#utility.yul\":3146:3544   */\n      jump\n        /* \"contracts/ERC20.sol\":9024:9092  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":9103:9121  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":9103:9114  _allowances */\n      0x66\n        /* \"contracts/ERC20.sol\":9103:9121  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC20.sol\":9103:9130  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ERC20.sol\":9103:9139  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/ERC20.sol\":9154:9186  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":9154:9186  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/ERC20.sol\":9154:9186  Approval(owner, spender, amount) */\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":8823:9193  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":6401:6995  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":6536:6556  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC20.sol\":6528:6598  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3751:3753   */\n      0x20\n        /* \"contracts/ERC20.sol\":6528:6598  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3733:3754   */\n      mstore\n        /* \"#utility.yul\":3790:3792   */\n      0x25\n        /* \"#utility.yul\":3770:3788   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3763:3793   */\n      mstore\n        /* \"#utility.yul\":3829:3863   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3809:3827   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3802:3864   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3880:3898   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3873:3908   */\n      mstore\n        /* \"#utility.yul\":3925:3944   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":6528:6598  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_110\n        /* \"#utility.yul\":3549:3950   */\n      jump\n        /* \"contracts/ERC20.sol\":6528:6598  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":6616:6639  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/ERC20.sol\":6608:6679  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4157:4159   */\n      0x20\n        /* \"contracts/ERC20.sol\":6608:6679  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4139:4160   */\n      mstore\n        /* \"#utility.yul\":4196:4198   */\n      0x23\n        /* \"#utility.yul\":4176:4194   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4169:4199   */\n      mstore\n        /* \"#utility.yul\":4235:4269   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":4215:4233   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4208:4270   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":4286:4304   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4279:4312   */\n      mstore\n        /* \"#utility.yul\":4329:4348   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":6608:6679  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_110\n        /* \"#utility.yul\":3955:4354   */\n      jump\n        /* \"contracts/ERC20.sol\":6608:6679  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_120:\n        /* \"contracts/ERC20.sol\":6768:6873  _balances[sender].sub(... */\n      tag_125\n        /* \"contracts/ERC20.sol\":6803:6809  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":6768:6873  _balances[sender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":6768:6785  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":6768:6777  _balances */\n      0x65\n        /* \"contracts/ERC20.sol\":6768:6785  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/ERC20.sol\":6768:6873  _balances[sender].sub(... */\n      swap1\n        /* \"contracts/ERC20.sol\":6768:6789  _balances[sender].sub */\n      tag_83\n        /* \"contracts/ERC20.sol\":6768:6873  _balances[sender].sub(... */\n      jump\t// in\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":6748:6765  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":6748:6757  _balances */\n      0x65\n        /* \"contracts/ERC20.sol\":6748:6765  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC20.sol\":6748:6873  _balances[sender] = _balances[sender].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ERC20.sol\":6906:6926  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":6906:6938  _balances[recipient].add(amount) */\n      tag_126\n      swap1\n        /* \"contracts/ERC20.sol\":6931:6937  amount */\n      dup3\n        /* \"contracts/ERC20.sol\":6906:6930  _balances[recipient].add */\n      tag_90\n        /* \"contracts/ERC20.sol\":6906:6938  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":6883:6903  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":6883:6892  _balances */\n      0x65\n        /* \"contracts/ERC20.sol\":6883:6903  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC20.sol\":6883:6938  _balances[recipient] = _balances[recipient].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ERC20.sol\":6953:6988  Transfer(sender, recipient, amount) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_115\n      swap1\n        /* \"contracts/ERC20.sol\":6981:6987  amount */\n      dup6\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/SafeMath.sol\":1202:1394  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_83:\n        /* \"contracts/SafeMath.sol\":1288:1295  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":1324:1336  errorMessage */\n      dup2\n        /* \"contracts/SafeMath.sol\":1316:1322  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":1308:1337  require(b <= a, errorMessage) */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_129:\n      pop\n        /* \"contracts/SafeMath.sol\":1348:1357  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":1360:1365  a - b */\n      tag_131\n        /* \"contracts/SafeMath.sol\":1364:1365  b */\n      dup5\n        /* \"contracts/SafeMath.sol\":1360:1361  a */\n      dup7\n        /* \"contracts/SafeMath.sol\":1360:1365  a - b */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/SafeMath.sol\":1348:1365  uint256 c = a - b */\n      swap6\n        /* \"contracts/SafeMath.sol\":1202:1394  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":315:496  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_90:\n        /* \"contracts/SafeMath.sol\":373:380  uint256 */\n      0x00\n      dup1\n        /* \"contracts/SafeMath.sol\":405:410  a + b */\n      tag_134\n        /* \"contracts/SafeMath.sol\":409:410  b */\n      dup4\n        /* \"contracts/SafeMath.sol\":405:406  a */\n      dup6\n        /* \"contracts/SafeMath.sol\":405:410  a + b */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/SafeMath.sol\":393:410  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":434:435  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":429:430  c */\n      dup2\n        /* \"contracts/SafeMath.sol\":429:435  c >= a */\n      lt\n      iszero\n        /* \"contracts/SafeMath.sol\":421:467  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4956:4958   */\n      0x20\n        /* \"contracts/SafeMath.sol\":421:467  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4938:4959   */\n      mstore\n        /* \"#utility.yul\":4995:4997   */\n      0x1b\n        /* \"#utility.yul\":4975:4993   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4968:4998   */\n      mstore\n        /* \"#utility.yul\":5034:5063   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":5014:5032   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5007:5064   */\n      mstore\n        /* \"#utility.yul\":5081:5099   */\n      0x64\n      add\n        /* \"contracts/SafeMath.sol\":421:467  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_110\n        /* \"#utility.yul\":4754:5105   */\n      jump\n        /* \"contracts/SafeMath.sol\":421:467  require(c >= a, \"SafeMath: addition overflow\") */\n    tag_136:\n        /* \"contracts/SafeMath.sol\":487:488  c */\n      swap4\n        /* \"contracts/SafeMath.sol\":315:496  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_148:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_150:\n        /* \"#utility.yul\":913:942   */\n      tag_151\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_155:\n        /* \"#utility.yul\":1563:1592   */\n      tag_156\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_157\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_160:\n        /* \"#utility.yul\":2051:2080   */\n      tag_136\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_163:\n        /* \"#utility.yul\":2259:2288   */\n      tag_164\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_165\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_167:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4359:4486   */\n    tag_141:\n        /* \"#utility.yul\":4420:4430   */\n      0x4e487b71\n        /* \"#utility.yul\":4415:4418   */\n      0xe0\n        /* \"#utility.yul\":4411:4431   */\n      shl\n        /* \"#utility.yul\":4408:4409   */\n      0x00\n        /* \"#utility.yul\":4401:4432   */\n      mstore\n        /* \"#utility.yul\":4451:4455   */\n      0x11\n        /* \"#utility.yul\":4448:4449   */\n      0x04\n        /* \"#utility.yul\":4441:4456   */\n      mstore\n        /* \"#utility.yul\":4475:4479   */\n      0x24\n        /* \"#utility.yul\":4472:4473   */\n      0x00\n        /* \"#utility.yul\":4465:4480   */\n      revert\n        /* \"#utility.yul\":4491:4619   */\n    tag_132:\n        /* \"#utility.yul\":4558:4567   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4579:4590   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4576:4613   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":4593:4611   */\n      tag_70\n      tag_141\n      jump\t// in\n        /* \"#utility.yul\":4624:4749   */\n    tag_135:\n        /* \"#utility.yul\":4689:4698   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4710:4720   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4707:4743   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":4723:4741   */\n      tag_70\n      tag_141\n      jump\t// in\n    stop\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220926ecbd166b2d3735d22d8abf340fcb46869631d87e5d1a40cd15d9adb49f67864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_173": {
									"entryPoint": null,
									"id": 173,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Context_init_unchained_82": {
									"entryPoint": 293,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isConstructor_774": {
									"entryPoint": null,
									"id": 774,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4559:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:7"
															},
															"nodeType": "YulIf",
															"src": "698:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:7",
																"statements": []
															},
															"src": "779:133:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:840:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:7"
															},
															"nodeType": "YulIf",
															"src": "1119:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:7"
															},
															"nodeType": "YulIf",
															"src": "1256:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:7"
															},
															"nodeType": "YulIf",
															"src": "1429:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:7",
														"type": ""
													}
												],
												"src": "991:562:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1732:236:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1749:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1742:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1783:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1794:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1779:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1779:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1799:2:7",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1772:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1772:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1822:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1833:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1818:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:18:7"
																	},
																	{
																		"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1838:34:7",
																		"type": "",
																		"value": "Contract instance has already be"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1811:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1811:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1893:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1904:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1889:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1889:18:7"
																	},
																	{
																		"hexValue": "656e20696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1909:16:7",
																		"type": "",
																		"value": "en initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1882:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1882:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1882:44:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1935:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1947:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1958:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1943:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1943:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1935:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1709:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1723:4:7",
														"type": ""
													}
												],
												"src": "1558:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2028:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2038:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2052:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2055:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2048:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2048:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2038:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2069:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2099:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2095:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2073:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2148:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2162:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2170:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2158:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2158:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2148:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2126:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2119:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2119:26:7"
															},
															"nodeType": "YulIf",
															"src": "2116:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2236:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2257:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2264:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2269:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2260:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2260:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2250:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2250:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2250:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2301:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2304:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2294:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2294:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2294:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2329:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2332:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2322:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2322:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2192:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2215:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2223:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2212:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2212:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2189:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:38:7"
															},
															"nodeType": "YulIf",
															"src": "2186:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2008:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2017:6:7",
														"type": ""
													}
												],
												"src": "1973:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2414:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2431:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2434:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2424:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2424:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2424:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2447:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2465:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2468:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2455:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2455:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2447:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2397:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2405:4:7",
														"type": ""
													}
												],
												"src": "2358:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2565:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2598:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2612:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2622:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2616:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2643:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2647:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2636:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2636:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2636:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2666:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2688:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2692:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2678:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2678:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2670:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2710:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2733:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2743:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2750:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2762:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2746:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2746:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2739:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2739:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2729:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2729:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2714:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2804:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2806:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2821:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2806:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2786:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2798:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2783:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2783:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2780:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2840:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2854:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2864:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2871:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2876:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2867:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2867:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2860:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2860:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2850:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2850:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2844:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2894:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2907:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2898:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2992:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "3001:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3008:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2994:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2994:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2994:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2942:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2949:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2939:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2939:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2953:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2955:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2968:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2975:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2964:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2964:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2955:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2935:3:7",
																			"statements": []
																		},
																		"src": "2931:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2581:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2586:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2578:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2578:11:7"
															},
															"nodeType": "YulIf",
															"src": "2575:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2537:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2544:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2549:10:7",
														"type": ""
													}
												],
												"src": "2484:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3119:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3129:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "3144:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3162:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "3165:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3158:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3158:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3175:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "3171:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3171:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "3154:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3154:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3150:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3150:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3140:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3140:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3186:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3189:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3137:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3137:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3129:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3096:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3102:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3110:4:7",
														"type": ""
													}
												],
												"src": "3034:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3301:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3311:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3331:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3325:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3325:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3315:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3378:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3380:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3380:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3350:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3366:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3370:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3362:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3362:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3374:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3358:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3358:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3347:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:30:7"
															},
															"nodeType": "YulIf",
															"src": "3344:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3453:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3491:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3485:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3485:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3459:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3499:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3409:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3409:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3515:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3532:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3519:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3542:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3561:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3546:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3574:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3587:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3574:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3644:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3658:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3677:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3689:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3685:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3685:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3673:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3673:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3662:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3706:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3750:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3720:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3720:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3710:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3768:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3777:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3772:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3855:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3880:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3898:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3903:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3894:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3894:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3888:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3888:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3873:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3873:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3873:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3932:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3946:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3954:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3942:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3942:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3932:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3973:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3990:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "4001:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3986:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3986:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3973:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3802:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3805:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3799:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3799:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3814:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3816:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3825:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3828:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3821:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3821:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3816:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3795:3:7",
																					"statements": []
																				},
																				"src": "3791:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4075:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4093:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4120:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4125:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4116:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4116:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4110:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4110:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4097:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4160:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4172:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "4199:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "4202:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "4195:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "4195:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4211:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "4191:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4191:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4221:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "4217:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4217:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "4187:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "4187:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "4183:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4183:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "4168:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4168:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4153:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4153:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4153:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4046:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4055:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4043:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4043:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "4040:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4261:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4275:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4278:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4271:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4271:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4287:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4267:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4267:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4254:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4254:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4254:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3637:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4317:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4331:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4344:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "4335:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4380:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4398:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4417:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4422:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4413:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4413:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4407:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4407:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4398:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "4361:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "4358:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4467:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4526:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4533:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4473:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4473:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4460:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4460:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4460:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4309:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3617:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3625:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3614:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "3607:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3286:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3292:3:7",
														"type": ""
													}
												],
												"src": "3205:1352:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Contract instance has already be\")\n        mstore(add(headStart, 96), \"en initialized\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000d9d38038062000d9d83398101604081905262000034916200029c565b600054610100900460ff16806200004a5750303b155b8062000059575060005460ff16155b620000b15760405162461bcd60e51b815260206004820152602e602482015260008051602062000d7d83398151915260448201526d195b881a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015620000d4576000805461ffff19166101011790555b620000de62000125565b6068620000ec848262000395565b506069620000fb838262000395565b50606a805460ff1916601217905580156200011c576000805461ff00191690555b50505062000461565b600054610100900460ff16806200013b5750303b155b806200014a575060005460ff16155b6200019e5760405162461bcd60e51b815260206004820152602e602482015260008051602062000d7d83398151915260448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401620000a8565b600054610100900460ff16158015620001c1576000805461ffff19166101011790555b8015620001d4576000805461ff00191690555b50565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ff57600080fd5b81516001600160401b03808211156200021c576200021c620001d7565b604051601f8301601f19908116603f01168101908282118183101715620002475762000247620001d7565b816040528381526020925086838588010111156200026457600080fd5b600091505b8382101562000288578582018301518183018401529082019062000269565b600093810190920192909252949350505050565b60008060408385031215620002b057600080fd5b82516001600160401b0380821115620002c857600080fd5b620002d686838701620001ed565b93506020850151915080821115620002ed57600080fd5b50620002fc85828601620001ed565b9150509250929050565b600181811c908216806200031b57607f821691505b6020821081036200033c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039057600081815260208120601f850160051c810160208610156200036b5750805b601f850160051c820191505b818110156200038c5782815560010162000377565b5050505b505050565b81516001600160401b03811115620003b157620003b1620001d7565b620003c981620003c2845462000306565b8462000342565b602080601f831160018114620004015760008415620003e85750858301515b600019600386901b1c1916600185901b1785556200038c565b600085815260208120601f198616915b82811015620004325788860151825594840194600190910190840162000411565b5085821015620004515787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61090c80620004716000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b4114610165578063a457c2d71461016d578063a9059cbb14610180578063dd62ed3e1461019357600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101cc565b6040516100c391906106cf565b60405180910390f35b6100df6100da366004610739565b61025e565b60405190151581526020016100c3565b6067545b6040519081526020016100c3565b6100df61010f366004610763565b610275565b606a5460405160ff90911681526020016100c3565b6100df610137366004610739565b6102de565b6100f361014a36600461079f565b6001600160a01b031660009081526065602052604090205490565b6100b6610314565b6100df61017b366004610739565b610323565b6100df61018e366004610739565b610372565b6100f36101a13660046107ba565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6060606880546101db906107ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610207906107ed565b80156102545780601f1061022957610100808354040283529160200191610254565b820191906000526020600020905b81548152906001019060200180831161023757829003601f168201915b5050505050905090565b600061026b33848461037f565b5060015b92915050565b60006102828484846104a9565b6102d484336102cf8560405180606001604052806028815260200161088a602891396001600160a01b038a166000908152606660209081526040808320338452909152902054919061062f565b61037f565b5060019392505050565b3360008181526066602090815260408083206001600160a01b0387168452909152812054909161026b9185906102cf9086610669565b6060606980546101db906107ed565b600061026b33846102cf856040518060600160405280602581526020016108b2602591393360009081526066602090815260408083206001600160a01b038d168452909152902054919061062f565b600061026b3384846104a9565b6001600160a01b0383166103e65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166104475760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661050d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b03821661056f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6105ac81604051806060016040528060268152602001610864602691396001600160a01b038616600090815260656020526040902054919061062f565b6001600160a01b0380851660009081526065602052604080822093909355908416815220546105db9082610669565b6001600160a01b0380841660008181526065602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061049c9085815260200190565b600081848411156106535760405162461bcd60e51b81526004016103dd91906106cf565b506000610660848661083d565b95945050505050565b6000806106768385610850565b9050838110156106c85760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103dd565b9392505050565b600060208083528351808285015260005b818110156106fc578581018301518582016040015282016106e0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461073457600080fd5b919050565b6000806040838503121561074c57600080fd5b6107558361071d565b946020939093013593505050565b60008060006060848603121561077857600080fd5b6107818461071d565b925061078f6020850161071d565b9150604084013590509250925092565b6000602082840312156107b157600080fd5b6106c88261071d565b600080604083850312156107cd57600080fd5b6107d68361071d565b91506107e46020840161071d565b90509250929050565b600181811c9082168061080157607f821691505b60208210810361082157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561026f5761026f610827565b8082018082111561026f5761026f61082756fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220926ecbd166b2d3735d22d8abf340fcb46869631d87e5d1a40cd15d9adb49f67864736f6c63430008110033436f6e747261637420696e7374616e63652068617320616c7265616479206265",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD9D CODESIZE SUB DUP1 PUSH3 0xD9D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x29C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH3 0x4A JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST DUP1 PUSH3 0x59 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH3 0xB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xD7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195B881A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0xD4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH3 0xDE PUSH3 0x125 JUMP JUMPDEST PUSH1 0x68 PUSH3 0xEC DUP5 DUP3 PUSH3 0x395 JUMP JUMPDEST POP PUSH1 0x69 PUSH3 0xFB DUP4 DUP3 PUSH3 0x395 JUMP JUMPDEST POP PUSH1 0x6A DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE DUP1 ISZERO PUSH3 0x11C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP PUSH3 0x461 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH3 0x13B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST DUP1 PUSH3 0x14A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH3 0x19E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xD7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195B881A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xA8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0x1C1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST DUP1 ISZERO PUSH3 0x1D4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x21C JUMPI PUSH3 0x21C PUSH3 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x247 JUMPI PUSH3 0x247 PUSH3 0x1D7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x288 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x269 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2D6 DUP7 DUP4 DUP8 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2FC DUP6 DUP3 DUP7 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x31B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x33C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x390 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x36B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x38C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x377 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3B1 JUMPI PUSH3 0x3B1 PUSH3 0x1D7 JUMP JUMPDEST PUSH3 0x3C9 DUP2 PUSH3 0x3C2 DUP5 SLOAD PUSH3 0x306 JUMP JUMPDEST DUP5 PUSH3 0x342 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x401 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3E8 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x38C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x432 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x411 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x451 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x90C DUP1 PUSH3 0x471 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x67 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x314 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x68 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x207 SWAP1 PUSH2 0x7ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x254 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x229 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x254 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x237 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 DUP5 PUSH2 0x37F JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282 DUP5 DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x2D4 DUP5 CALLER PUSH2 0x2CF DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x88A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x26B SWAP2 DUP6 SWAP1 PUSH2 0x2CF SWAP1 DUP7 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x69 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 PUSH2 0x2CF DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B2 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x5AC DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x864 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5DB SWAP1 DUP3 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x49C SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x6CF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x660 DUP5 DUP7 PUSH2 0x83D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x676 DUP4 DUP6 PUSH2 0x850 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6FC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x755 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x781 DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP3 POP PUSH2 0x78F PUSH1 0x20 DUP6 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C8 DUP3 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D6 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH2 0x7E4 PUSH1 0x20 DUP5 ADD PUSH2 0x71D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x801 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x821 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x26F JUMPI PUSH2 0x26F PUSH2 0x827 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26F JUMPI PUSH2 0x26F PUSH2 0x827 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220926E 0xCB 0xD1 PUSH7 0xB2D3735D22D8AB RETURN BLOCKHASH 0xFC 0xB4 PUSH9 0x69631D87E5D1A40CD1 0x5D SWAP11 0xDB 0x49 0xF6 PUSH25 0x64736F6C63430008110033436F6E747261637420696E737461 PUSH15 0x63652068617320616C726561647920 PUSH3 0x650000 ",
							"sourceMap": "184:10162:2:-:0;;;887:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;443:12:4;;;;;;;;:31;;-1:-1:-1;1261:4:4;1307:17;1339:7;459:15;443:47;;;-1:-1:-1;479:11:4;;;;478:12;443:47;435:106;;;;-1:-1:-1;;;435:106:4;;1760:2:7;435:106:4;;;1742:21:7;1799:2;1779:18;;;1772:30;-1:-1:-1;;;;;;;;;;;1818:18:7;;;1811:62;-1:-1:-1;;;1889:18:7;;;1882:44;1943:19;;435:106:4;;;;;;;;;550:19;573:12;;;;;;572:13;592:83;;;;621:12;:19;;-1:-1:-1;;649:18:4;;;;;592:83;973:26:2::1;:24;:26::i;:::-;1009:5;:17;1017:9:::0;1009:5;:17:::1;:::i;:::-;-1:-1:-1::0;1036:7:2::1;:21;1046:11:::0;1036:7;:21:::1;:::i;:::-;-1:-1:-1::0;1067:9:2::1;:14:::0;;-1:-1:-1;;1067:14:2::1;1079:2;1067:14;::::0;;693:57:4;;;;737:5;722:20;;-1:-1:-1;;722:20:4;;;693:57;428:327;887:201:2;;184:10162;;389:59:1;443:12:4;;;;;;;;:31;;-1:-1:-1;1261:4:4;1307:17;1339:7;459:15;443:47;;;-1:-1:-1;479:11:4;;;;478:12;443:47;435:106;;;;-1:-1:-1;;;435:106:4;;1760:2:7;435:106:4;;;1742:21:7;1799:2;1779:18;;;1772:30;-1:-1:-1;;;;;;;;;;;1818:18:7;;;1811:62;-1:-1:-1;;;1889:18:7;;;1882:44;1943:19;;435:106:4;1558:410:7;435:106:4;550:19;573:12;;;;;;572:13;592:83;;;;621:12;:19;;-1:-1:-1;;649:18:4;;;;;592:83;697:14;693:57;;;737:5;722:20;;-1:-1:-1;;722:20:4;;;693:57;428:327;389:59:1:o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:7:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:7;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1973:380::-;2052:1;2048:12;;;;2095;;;2116:61;;2170:4;2162:6;2158:17;2148:27;;2116:61;2223:2;2215:6;2212:14;2192:18;2189:38;2186:161;;2269:10;2264:3;2260:20;2257:1;2250:31;2304:4;2301:1;2294:15;2332:4;2329:1;2322:15;2186:161;;1973:380;;;:::o;2484:545::-;2586:2;2581:3;2578:11;2575:448;;;2622:1;2647:5;2643:2;2636:17;2692:4;2688:2;2678:19;2762:2;2750:10;2746:19;2743:1;2739:27;2733:4;2729:38;2798:4;2786:10;2783:20;2780:47;;;-1:-1:-1;2821:4:7;2780:47;2876:2;2871:3;2867:12;2864:1;2860:20;2854:4;2850:31;2840:41;;2931:82;2949:2;2942:5;2939:13;2931:82;;;2994:17;;;2975:1;2964:13;2931:82;;;2935:3;;;2575:448;2484:545;;;:::o;3205:1352::-;3325:10;;-1:-1:-1;;;;;3347:30:7;;3344:56;;;3380:18;;:::i;:::-;3409:97;3499:6;3459:38;3491:4;3485:11;3459:38;:::i;:::-;3453:4;3409:97;:::i;:::-;3561:4;;3625:2;3614:14;;3642:1;3637:663;;;;4344:1;4361:6;4358:89;;;-1:-1:-1;4413:19:7;;;4407:26;4358:89;-1:-1:-1;;3162:1:7;3158:11;;;3154:24;3150:29;3140:40;3186:1;3182:11;;;3137:57;4460:81;;3607:944;;3637:663;2431:1;2424:14;;;2468:4;2455:18;;-1:-1:-1;;3673:20:7;;;3791:236;3805:7;3802:1;3799:14;3791:236;;;3894:19;;;3888:26;3873:42;;3986:27;;;;3954:1;3942:14;;;;3821:19;;3791:236;;;3795:3;4055:6;4046:7;4043:19;4040:201;;;4116:19;;;4110:26;-1:-1:-1;;4199:1:7;4195:14;;;4211:3;4191:24;4187:37;4183:42;4168:58;4153:74;;4040:201;-1:-1:-1;;;;;4287:1:7;4271:14;;;4267:22;4254:36;;-1:-1:-1;3205:1352:7:o;:::-;184:10162:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_601": {
									"entryPoint": 895,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_623": {
									"entryPoint": null,
									"id": 623,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_94": {
									"entryPoint": null,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_445": {
									"entryPoint": 1193,
									"id": 445,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_807": {
									"entryPoint": 1641,
									"id": 807,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_263": {
									"entryPoint": null,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_284": {
									"entryPoint": 606,
									"id": 284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_379": {
									"entryPoint": 803,
									"id": 379,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_350": {
									"entryPoint": 734,
									"id": 350,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_182": {
									"entryPoint": 460,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_852": {
									"entryPoint": 1583,
									"id": 852,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_191": {
									"entryPoint": 788,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_210": {
									"entryPoint": null,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_322": {
									"entryPoint": 629,
									"id": 322,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_245": {
									"entryPoint": 882,
									"id": 245,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2087,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5107:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:548:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:7"
															},
															"nodeType": "YulIf",
															"src": "664:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:7",
														"type": ""
													}
												],
												"src": "567:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:7"
															},
															"nodeType": "YulIf",
															"src": "842:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:7",
														"type": ""
													}
												],
												"src": "745:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:7",
														"type": ""
													}
												],
												"src": "1004:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:7",
														"type": ""
													}
												],
												"src": "1196:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:7"
															},
															"nodeType": "YulIf",
															"src": "1492:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:7",
														"type": ""
													}
												],
												"src": "1378:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:7",
														"type": ""
													}
												],
												"src": "1711:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:7"
															},
															"nodeType": "YulIf",
															"src": "1980:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:7",
														"type": ""
													}
												],
												"src": "1900:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:7"
															},
															"nodeType": "YulIf",
															"src": "2188:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:7",
														"type": ""
													}
												],
												"src": "2091:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:7"
															},
															"nodeType": "YulIf",
															"src": "2499:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:7"
															},
															"nodeType": "YulIf",
															"src": "2569:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:7",
														"type": ""
													}
												],
												"src": "2356:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2915:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2925:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2925:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2925:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2966:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2962:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2962:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3021:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3076:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3087:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3072:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3092:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3108:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3120:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3131:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3116:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3108:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2892:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2906:4:7",
														"type": ""
													}
												],
												"src": "2741:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3320:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3337:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3348:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3330:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3330:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3371:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3382:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3360:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3410:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3421:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3406:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3426:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3399:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3399:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3481:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3492:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3477:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3477:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3497:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3470:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3470:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3470:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3511:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3523:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3534:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3519:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3519:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3511:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3297:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3311:4:7",
														"type": ""
													}
												],
												"src": "3146:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3723:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3740:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3751:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3733:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3733:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3733:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3774:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3785:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3790:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3763:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3763:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3813:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3824:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3829:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3802:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3802:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3884:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3895:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3880:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3880:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3900:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3873:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3873:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3917:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3929:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3925:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3925:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3917:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3700:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3714:4:7",
														"type": ""
													}
												],
												"src": "3549:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4129:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4146:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4157:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4139:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4139:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4139:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4180:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4191:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4176:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4196:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4169:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4169:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4169:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4219:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4230:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4215:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4215:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4235:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4208:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4290:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4301:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4306:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4279:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4279:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4279:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4321:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4333:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4344:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4329:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4329:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4321:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4106:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4120:4:7",
														"type": ""
													}
												],
												"src": "3955:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4391:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4408:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4415:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4420:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4411:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4411:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4401:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4401:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4451:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4441:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4441:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4441:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4472:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4465:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4359:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4540:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4550:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4562:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4565:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4550:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4591:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4593:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4593:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4593:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4582:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4588:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4579:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4579:11:7"
															},
															"nodeType": "YulIf",
															"src": "4576:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4522:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4525:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4531:4:7",
														"type": ""
													}
												],
												"src": "4491:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4672:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4682:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4693:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4696:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4689:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4689:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4682:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4721:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4723:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4723:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4723:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4713:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4716:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4710:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4710:10:7"
															},
															"nodeType": "YulIf",
															"src": "4707:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4655:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4658:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4664:3:7",
														"type": ""
													}
												],
												"src": "4624:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4928:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4945:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4956:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4938:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4938:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4979:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4990:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4975:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4995:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4968:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5018:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5029:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5014:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5014:18:7"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5034:29:7",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5007:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5007:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5007:57:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5073:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5085:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5096:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5081:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5073:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4905:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4919:4:7",
														"type": ""
													}
												],
												"src": "4754:351:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b4114610165578063a457c2d71461016d578063a9059cbb14610180578063dd62ed3e1461019357600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101cc565b6040516100c391906106cf565b60405180910390f35b6100df6100da366004610739565b61025e565b60405190151581526020016100c3565b6067545b6040519081526020016100c3565b6100df61010f366004610763565b610275565b606a5460405160ff90911681526020016100c3565b6100df610137366004610739565b6102de565b6100f361014a36600461079f565b6001600160a01b031660009081526065602052604090205490565b6100b6610314565b6100df61017b366004610739565b610323565b6100df61018e366004610739565b610372565b6100f36101a13660046107ba565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6060606880546101db906107ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610207906107ed565b80156102545780601f1061022957610100808354040283529160200191610254565b820191906000526020600020905b81548152906001019060200180831161023757829003601f168201915b5050505050905090565b600061026b33848461037f565b5060015b92915050565b60006102828484846104a9565b6102d484336102cf8560405180606001604052806028815260200161088a602891396001600160a01b038a166000908152606660209081526040808320338452909152902054919061062f565b61037f565b5060019392505050565b3360008181526066602090815260408083206001600160a01b0387168452909152812054909161026b9185906102cf9086610669565b6060606980546101db906107ed565b600061026b33846102cf856040518060600160405280602581526020016108b2602591393360009081526066602090815260408083206001600160a01b038d168452909152902054919061062f565b600061026b3384846104a9565b6001600160a01b0383166103e65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166104475760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661050d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b03821661056f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6105ac81604051806060016040528060268152602001610864602691396001600160a01b038616600090815260656020526040902054919061062f565b6001600160a01b0380851660009081526065602052604080822093909355908416815220546105db9082610669565b6001600160a01b0380841660008181526065602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061049c9085815260200190565b600081848411156106535760405162461bcd60e51b81526004016103dd91906106cf565b506000610660848661083d565b95945050505050565b6000806106768385610850565b9050838110156106c85760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103dd565b9392505050565b600060208083528351808285015260005b818110156106fc578581018301518582016040015282016106e0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461073457600080fd5b919050565b6000806040838503121561074c57600080fd5b6107558361071d565b946020939093013593505050565b60008060006060848603121561077857600080fd5b6107818461071d565b925061078f6020850161071d565b9150604084013590509250925092565b6000602082840312156107b157600080fd5b6106c88261071d565b600080604083850312156107cd57600080fd5b6107d68361071d565b91506107e46020840161071d565b90509250929050565b600181811c9082168061080157607f821691505b60208210810361082157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561026f5761026f610827565b8082018082111561026f5761026f61082756fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220926ecbd166b2d3735d22d8abf340fcb46869631d87e5d1a40cd15d9adb49f67864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x67 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x314 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x68 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x207 SWAP1 PUSH2 0x7ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x254 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x229 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x254 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x237 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 DUP5 PUSH2 0x37F JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282 DUP5 DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x2D4 DUP5 CALLER PUSH2 0x2CF DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x88A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x26B SWAP2 DUP6 SWAP1 PUSH2 0x2CF SWAP1 DUP7 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x69 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 PUSH2 0x2CF DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B2 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x5AC DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x864 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5DB SWAP1 DUP3 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x49C SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x6CF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x660 DUP5 DUP7 PUSH2 0x83D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x676 DUP4 DUP6 PUSH2 0x850 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6FC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x755 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x781 DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP3 POP PUSH2 0x78F PUSH1 0x20 DUP6 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C8 DUP3 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D6 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH2 0x7E4 PUSH1 0x20 DUP5 ADD PUSH2 0x71D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x801 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x821 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x26F JUMPI PUSH2 0x26F PUSH2 0x827 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26F JUMPI PUSH2 0x26F PUSH2 0x827 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220926E 0xCB 0xD1 PUSH7 0xB2D3735D22D8AB RETURN BLOCKHASH 0xFC 0xB4 PUSH9 0x69631D87E5D1A40CD1 0x5D SWAP11 0xDB 0x49 0xF6 PUSH25 0x64736F6C634300081100330000000000000000000000000000 ",
							"sourceMap": "184:10162:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3269:202;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:7;;1162:22;1144:41;;1132:2;1117:18;3269:202:2;1004:187:7;2196:98:2;2275:12;;2196:98;;;1342:25:7;;;1330:2;1315:18;2196:98:2;1196:177:7;3931:439:2;;;;;;:::i;:::-;;:::i;2055:81::-;2120:9;;2055:81;;2120:9;;;;1853:36:7;;1841:2;1826:18;2055:81:2;1711:184:7;4765:289:2;;;;;;:::i;:::-;;:::i;2352:117::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2444:18:2;2418:7;2444:18;;;:9;:18;;;;;;;2352:117;1347:85;;;:::i;5541:386::-;;;;;;:::i;:::-;;:::i;2672:208::-;;;;;;:::i;:::-;;:::i;2938:193::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3097:18:2;;;3067:7;3097:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2938:193;1153:81;1190:13;1222:5;1215:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:81;:::o;3269:202::-;3384:4;3404:39;549:10:1;3427:7:2;3436:6;3404:8;:39::i;:::-;-1:-1:-1;3460:4:2;3269:202;;;;;:::o;3931:439::-;4067:4;4083:36;4093:6;4101:9;4112:6;4083:9;:36::i;:::-;4129:213;4151:6;549:10:1;4197:135:2;4252:6;4197:135;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4197:19:2;;;;;;:11;:19;;;;;;;;549:10:1;4197:33:2;;;;;;;;;;:37;:135::i;:::-;4129:8;:213::i;:::-;-1:-1:-1;4359:4:2;3931:439;;;;;:::o;4765:289::-;549:10:1;4877:4:2;4966:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4966:34:2;;;;;;;;;;4877:4;;4897:129;;4945:7;;4966:50;;5005:10;4966:38;:50::i;1347:85::-;1386:13;1418:7;1411:14;;;;;:::i;5541:386::-;5658:4;5678:221;549:10:1;5726:7:2;5747:142;5803:15;5747:142;;;;;;;;;;;;;;;;;549:10:1;5747:25:2;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5747:34:2;;;;;;;;;;;;:38;:142::i;2672:208::-;2790:4;2810:42;549:10:1;2834:9:2;2845:6;2810:9;:42::i;8823:370::-;-1:-1:-1;;;;;8954:19:2;;8946:68;;;;-1:-1:-1;;;8946:68:2;;2943:2:7;8946:68:2;;;2925:21:7;2982:2;2962:18;;;2955:30;3021:34;3001:18;;;2994:62;-1:-1:-1;;;3072:18:7;;;3065:34;3116:19;;8946:68:2;;;;;;;;;-1:-1:-1;;;;;9032:21:2;;9024:68;;;;-1:-1:-1;;;9024:68:2;;3348:2:7;9024:68:2;;;3330:21:7;3387:2;3367:18;;;3360:30;3426:34;3406:18;;;3399:62;-1:-1:-1;;;3477:18:7;;;3470:32;3519:19;;9024:68:2;3146:398:7;9024:68:2;-1:-1:-1;;;;;9103:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9154:32;;1342:25:7;;;9154:32:2;;1315:18:7;9154:32:2;;;;;;;;8823:370;;;:::o;6401:594::-;-1:-1:-1;;;;;6536:20:2;;6528:70;;;;-1:-1:-1;;;6528:70:2;;3751:2:7;6528:70:2;;;3733:21:7;3790:2;3770:18;;;3763:30;3829:34;3809:18;;;3802:62;-1:-1:-1;;;3880:18:7;;;3873:35;3925:19;;6528:70:2;3549:401:7;6528:70:2;-1:-1:-1;;;;;6616:23:2;;6608:71;;;;-1:-1:-1;;;6608:71:2;;4157:2:7;6608:71:2;;;4139:21:7;4196:2;4176:18;;;4169:30;4235:34;4215:18;;;4208:62;-1:-1:-1;;;4286:18:7;;;4279:33;4329:19;;6608:71:2;3955:399:7;6608:71:2;6768:105;6803:6;6768:105;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6768:17:2;;;;;;:9;:17;;;;;;;:105;:21;:105::i;:::-;-1:-1:-1;;;;;6748:17:2;;;;;;;:9;:17;;;;;;:125;;;;6906:20;;;;;;;:32;;6931:6;6906:24;:32::i;:::-;-1:-1:-1;;;;;6883:20:2;;;;;;;:9;:20;;;;;;;:55;;;;6953:35;;;;;;;;;;6981:6;1342:25:7;;1330:2;1315:18;;1196:177;1202:192:5;1288:7;1324:12;1316:6;;;;1308:29;;;;-1:-1:-1;;;1308:29:5;;;;;;;;:::i;:::-;-1:-1:-1;1348:9:5;1360:5;1364:1;1360;:5;:::i;:::-;1348:17;1202:192;-1:-1:-1;;;;;1202:192:5:o;315:181::-;373:7;;405:5;409:1;405;:5;:::i;:::-;393:17;;434:1;429;:6;;421:46;;;;-1:-1:-1;;;421:46:5;;4956:2:7;421:46:5;;;4938:21:7;4995:2;4975:18;;;4968:30;5034:29;5014:18;;;5007:57;5081:18;;421:46:5;4754:351:7;421:46:5;487:1;315:181;-1:-1:-1;;;315:181:5:o;14:548:7:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:7;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:7:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;4359:127::-;4420:10;4415:3;4411:20;4408:1;4401:31;4451:4;4448:1;4441:15;4475:4;4472:1;4465:15;4491:128;4558:9;;;4579:11;;;4576:37;;;4593:18;;:::i;4624:125::-;4689:9;;;4710:10;;;4707:36;;;4723:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "463200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24621",
								"balanceOf(address)": "2559",
								"decimals()": "2378",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 184,
									"end": 10346,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 184,
									"end": 10346,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 184,
									"end": 10346,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 887,
									"end": 1088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 443,
									"end": 474,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1324,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1346,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 459,
									"end": 474,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 459,
									"end": 474,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 443,
									"end": 490,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 479,
									"end": 490,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 490,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 479,
									"end": 490,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 479,
									"end": 490,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 478,
									"end": 490,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 443,
									"end": 490,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 435,
									"end": 541,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1760,
									"end": 1762,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1742,
									"end": 1763,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1799,
									"end": 1801,
									"name": "PUSH",
									"source": 7,
									"value": "2E"
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1772,
									"end": 1802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "DC12AE8220C8DE7014142805A332AE4E2E45DFFFA340E9D79B20C86951735405"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1818,
									"end": 1836,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1818,
									"end": 1836,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1836,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1873,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "195B881A5B9A5D1A585B1A5E9959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "92"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1889,
									"end": 1907,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1889,
									"end": 1907,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1889,
									"end": 1907,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1882,
									"end": 1926,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 1962,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 1943,
									"end": 1962,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 435,
									"end": 541,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 550,
									"end": 569,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 572,
									"end": 585,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 592,
									"end": 675,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 621,
									"end": 633,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 621,
									"end": 640,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 649,
									"end": 667,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "PUSH",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 649,
									"end": 667,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 592,
									"end": 675,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 973,
									"end": 999,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 973,
									"end": 997,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 973,
									"end": 999,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 973,
									"end": 999,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 973,
									"end": 999,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1009,
									"end": 1014,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 1009,
									"end": 1026,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1017,
									"end": 1026,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1009,
									"end": 1014,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1009,
									"end": 1026,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1009,
									"end": 1026,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1009,
									"end": 1026,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1009,
									"end": 1026,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1036,
									"end": 1043,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 1036,
									"end": 1057,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1057,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1036,
									"end": 1057,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1057,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1036,
									"end": 1057,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1067,
									"end": 1076,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "6A"
								},
								{
									"begin": 1067,
									"end": 1081,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1067,
									"end": 1081,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1067,
									"end": 1081,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1079,
									"end": 1081,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1067,
									"end": 1081,
									"modifierDepth": 1,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1067,
									"end": 1081,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1067,
									"end": 1081,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 693,
									"end": 750,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 693,
									"end": 750,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 737,
									"end": 742,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 742,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 742,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 693,
									"end": 750,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 428,
									"end": 755,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 184,
									"end": 10346,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 184,
									"end": 10346,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 389,
									"end": 448,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 389,
									"end": 448,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 443,
									"end": 474,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1324,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1346,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 459,
									"end": 474,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 459,
									"end": 474,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 443,
									"end": 490,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 479,
									"end": 490,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 490,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 479,
									"end": 490,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 479,
									"end": 490,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 478,
									"end": 490,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 443,
									"end": 490,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 435,
									"end": 541,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1760,
									"end": 1762,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1742,
									"end": 1763,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1799,
									"end": 1801,
									"name": "PUSH",
									"source": 7,
									"value": "2E"
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1772,
									"end": 1802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "DC12AE8220C8DE7014142805A332AE4E2E45DFFFA340E9D79B20C86951735405"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1818,
									"end": 1836,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1818,
									"end": 1836,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1836,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1873,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "195B881A5B9A5D1A585B1A5E9959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "92"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1889,
									"end": 1907,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1889,
									"end": 1907,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1889,
									"end": 1907,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1882,
									"end": 1926,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 1962,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 1943,
									"end": 1962,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1558,
									"end": 1968,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 435,
									"end": 541,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 550,
									"end": 569,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 572,
									"end": 585,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 592,
									"end": 675,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 621,
									"end": 633,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 621,
									"end": 640,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 649,
									"end": 667,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "PUSH",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 649,
									"end": 667,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 592,
									"end": 675,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 697,
									"end": 711,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 693,
									"end": 750,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 737,
									"end": 742,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 742,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 742,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 693,
									"end": 750,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 428,
									"end": 755,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 389,
									"end": 448,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 2353,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1973,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2052,
									"end": 2053,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2095,
									"end": 2107,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2095,
									"end": 2107,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2095,
									"end": 2107,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2116,
									"end": 2177,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2116,
									"end": 2177,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2170,
									"end": 2174,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2162,
									"end": 2168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2175,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2175,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2175,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2116,
									"end": 2177,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2116,
									"end": 2177,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2223,
									"end": 2225,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2215,
									"end": 2221,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2212,
									"end": 2226,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2210,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2189,
									"end": 2227,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2186,
									"end": 2347,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2269,
									"end": 2279,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 2264,
									"end": 2267,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2257,
									"end": 2258,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2250,
									"end": 2281,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2301,
									"end": 2302,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2294,
									"end": 2309,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2332,
									"end": 2336,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2329,
									"end": 2330,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2322,
									"end": 2337,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2347,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2186,
									"end": 2347,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2347,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 2353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 2353,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 2353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 2353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 3029,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2484,
									"end": 3029,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2586,
									"end": 2588,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2581,
									"end": 2584,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2578,
									"end": 2589,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2575,
									"end": 3023,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2575,
									"end": 3023,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2575,
									"end": 3023,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2622,
									"end": 2623,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2652,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2643,
									"end": 2645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2653,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2692,
									"end": 2696,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2688,
									"end": 2690,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2697,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2762,
									"end": 2764,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2750,
									"end": 2760,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2746,
									"end": 2765,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2744,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2739,
									"end": 2766,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2733,
									"end": 2737,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2729,
									"end": 2767,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2798,
									"end": 2802,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2786,
									"end": 2796,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2783,
									"end": 2803,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2827,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2827,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2780,
									"end": 2827,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2821,
									"end": 2825,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2827,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2780,
									"end": 2827,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2876,
									"end": 2878,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2871,
									"end": 2874,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2867,
									"end": 2879,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2864,
									"end": 2865,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2860,
									"end": 2880,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2854,
									"end": 2858,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2850,
									"end": 2881,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2840,
									"end": 2881,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2840,
									"end": 2881,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3013,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2931,
									"end": 3013,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 2951,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2942,
									"end": 2947,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2939,
									"end": 2952,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3013,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3013,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2931,
									"end": 3013,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3011,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3011,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3011,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2975,
									"end": 2976,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2964,
									"end": 2977,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3013,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2931,
									"end": 3013,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3013,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2931,
									"end": 3013,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2935,
									"end": 2938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2935,
									"end": 2938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2935,
									"end": 2938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2575,
									"end": 3023,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2575,
									"end": 3023,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 3029,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 3029,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 3029,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 3029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3205,
									"end": 4557,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 3205,
									"end": 4557,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3325,
									"end": 3335,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3325,
									"end": 3335,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3347,
									"end": 3377,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3347,
									"end": 3377,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3344,
									"end": 3400,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3344,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3344,
									"end": 3400,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3380,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3380,
									"end": 3398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3398,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3380,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3409,
									"end": 3506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3499,
									"end": 3505,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3459,
									"end": 3497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3491,
									"end": 3495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3485,
									"end": 3496,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3459,
									"end": 3497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 3459,
									"end": 3497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3459,
									"end": 3497,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3459,
									"end": 3497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3457,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3409,
									"end": 3506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 3409,
									"end": 3506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3409,
									"end": 3506,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3409,
									"end": 3506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3561,
									"end": 3565,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3627,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3614,
									"end": 3628,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3614,
									"end": 3628,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3642,
									"end": 3643,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3637,
									"end": 4300,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 4300,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 4300,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3637,
									"end": 4300,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4344,
									"end": 4345,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4361,
									"end": 4367,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4358,
									"end": 4447,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4358,
									"end": 4447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 4358,
									"end": 4447,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4413,
									"end": 4432,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4413,
									"end": 4432,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4413,
									"end": 4432,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4407,
									"end": 4433,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4358,
									"end": 4447,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 4358,
									"end": 4447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3162,
									"end": 3163,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3158,
									"end": 3169,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3169,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3169,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3154,
									"end": 3178,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3150,
									"end": 3179,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3140,
									"end": 3180,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3186,
									"end": 3187,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3182,
									"end": 3193,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3193,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3193,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3137,
									"end": 3194,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4460,
									"end": 4541,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4460,
									"end": 4541,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3607,
									"end": 4551,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3607,
									"end": 4551,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 4300,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3637,
									"end": 4300,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2431,
									"end": 2432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2424,
									"end": 2438,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2424,
									"end": 2438,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2424,
									"end": 2438,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2472,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2455,
									"end": 2473,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2455,
									"end": 2473,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3673,
									"end": 3693,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3693,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3693,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3791,
									"end": 4027,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3791,
									"end": 4027,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3805,
									"end": 3812,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 3803,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3799,
									"end": 3813,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3791,
									"end": 4027,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3791,
									"end": 4027,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3791,
									"end": 4027,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3913,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3913,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3913,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3888,
									"end": 3914,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3873,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3873,
									"end": 3915,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3986,
									"end": 4013,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3986,
									"end": 4013,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3986,
									"end": 4013,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3986,
									"end": 4013,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3954,
									"end": 3955,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3942,
									"end": 3956,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3942,
									"end": 3956,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3942,
									"end": 3956,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3942,
									"end": 3956,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3840,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3840,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3791,
									"end": 4027,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3791,
									"end": 4027,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3791,
									"end": 4027,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3791,
									"end": 4027,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3795,
									"end": 3798,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4055,
									"end": 4061,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4053,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4040,
									"end": 4241,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4040,
									"end": 4241,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4040,
									"end": 4241,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4116,
									"end": 4135,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4116,
									"end": 4135,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4116,
									"end": 4135,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4110,
									"end": 4136,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4199,
									"end": 4200,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 4195,
									"end": 4209,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4195,
									"end": 4209,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4195,
									"end": 4209,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4211,
									"end": 4214,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 4191,
									"end": 4215,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4187,
									"end": 4224,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4225,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4168,
									"end": 4226,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4153,
									"end": 4227,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4153,
									"end": 4227,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4040,
									"end": 4241,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4040,
									"end": 4241,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4287,
									"end": 4288,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4271,
									"end": 4285,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4271,
									"end": 4285,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4271,
									"end": 4285,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4267,
									"end": 4289,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4254,
									"end": 4290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4254,
									"end": 4290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3205,
									"end": 4557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3205,
									"end": 4557,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 3205,
									"end": 4557,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 184,
									"end": 10346,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 10346,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 10346,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 10346,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 10346,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 184,
									"end": 10346,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 10346,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220926ecbd166b2d3735d22d8abf340fcb46869631d87e5d1a40cd15d9adb49f67864736f6c63430008110033",
									".code": [
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 10346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1153,
											"end": 1234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1153,
											"end": 1234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3269,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3269,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3931,
											"end": 4370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3931,
											"end": 4370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2136,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2055,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "6A"
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4765,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4765,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2352,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1347,
											"end": 1432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5541,
											"end": 5927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5541,
											"end": 5927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2672,
											"end": 2880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2672,
											"end": 2880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2938,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3067,
											"end": 3074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3108,
											"name": "PUSH",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1215,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1215,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3427,
											"end": 3434,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3404,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3443,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3404,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3460,
											"end": 3464,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4101,
											"end": 4110,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4083,
											"end": 4119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4083,
											"end": 4119,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4083,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4252,
											"end": 4258,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH data",
											"source": 2,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4208,
											"name": "PUSH",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4197,
											"end": 4332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4129,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4342,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4129,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4977,
											"name": "PUSH",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 4881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 4881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4897,
											"end": 5026,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4945,
											"end": 4952,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4945,
											"end": 4952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4966,
											"end": 5016,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5005,
											"end": 5015,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4966,
											"end": 5016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1399,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1418,
											"end": 1425,
											"name": "PUSH",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1411,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5733,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH data",
											"source": 2,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5747,
											"end": 5889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2851,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2810,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 9193,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 8823,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8954,
											"end": 8973,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8954,
											"end": 8973,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 2946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2984,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3135,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3116,
											"end": 3135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9032,
											"end": 9053,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9032,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3350,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3351,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3367,
											"end": 3385,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3367,
											"end": 3385,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3367,
											"end": 3385,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3460,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3461,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3495,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3477,
											"end": 3495,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3495,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3502,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3146,
											"end": 3544,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9114,
											"name": "PUSH",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9139,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9139,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 9193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 9193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 9193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 9193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6995,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6401,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6536,
											"end": 6556,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6556,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3753,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3792,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3863,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3908,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3944,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3925,
											"end": 3944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3549,
											"end": 3950,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6616,
											"end": 6639,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6616,
											"end": 6639,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4157,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4176,
											"end": 4194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4176,
											"end": 4194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4169,
											"end": 4199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4269,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4270,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4312,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4348,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4329,
											"end": 4348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3955,
											"end": 4354,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6803,
											"end": 6809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH data",
											"source": 2,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6768,
											"end": 6873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6757,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6873,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6873,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6873,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6906,
											"end": 6938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6892,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6938,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6938,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6938,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6981,
											"end": 6987,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1394,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1202,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1308,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1360,
											"end": 1365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1365,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1394,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 315,
											"end": 496,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 315,
											"end": 496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 405,
											"end": 406,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 405,
											"end": 410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 405,
											"end": 410,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 393,
											"end": 410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 393,
											"end": 410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 434,
											"end": 435,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 429,
											"end": 430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 435,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 429,
											"end": 435,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 421,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 421,
											"end": 467,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 421,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 421,
											"end": 467,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4958,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 421,
											"end": 467,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 4959,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 4997,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 4998,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5063,
											"name": "PUSH",
											"source": 7,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 5014,
											"end": 5032,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5014,
											"end": 5032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5007,
											"end": 5064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5099,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5081,
											"end": 5099,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 421,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4754,
											"end": 5105,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 421,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 421,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 488,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 315,
											"end": 496,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 315,
											"end": 496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4359,
											"end": 4486,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4359,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4420,
											"end": 4430,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4415,
											"end": 4418,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4455,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4448,
											"end": 4449,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4441,
											"end": 4456,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4475,
											"end": 4479,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4472,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4619,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4491,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4576,
											"end": 4613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4576,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4576,
											"end": 4613,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4593,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4593,
											"end": 4611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 4749,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4624,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4698,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4710,
											"end": 4720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4710,
											"end": 4720,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4710,
											"end": 4720,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4743,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4707,
											"end": 4743,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4723,
											"end": 4741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									],
									".data": {
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								},
								"DC12AE8220C8DE7014142805A332AE4E2E45DFFFA340E9D79B20C86951735405": "436f6e747261637420696e7374616e63652068617320616c7265616479206265"
							},
							"sourceList": [
								"contracts/Address.sol",
								"contracts/Context.sol",
								"contracts/ERC20.sol",
								"contracts/IERC20.sol",
								"contracts/Initializable.sol",
								"contracts/SafeMath.sol",
								"contracts/USDM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20UpgradeSafe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xf0079f7d951de77767005886e2fadacaf9192688e06090325f004a4346d49383\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bece5b11a4e62e1846173386ecf480910a10af6b019a86ab2a59e1b660aef2f8\",\"dweb:/ipfs/QmbstfaSgJ2Q46YcFudkZ5SFUAtHXoiCxDiZnN8FWXzHqX\"]},\"contracts/Context.sol\":{\"keccak256\":\"0x406fa0cfc58f5baf9f8a910d28bfb8ac4615d29369df677c833cfe511a293480\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3766fa5419c9e50c0ee79841b5d3404910851005c2a41c86bb2879beb291d147\",\"dweb:/ipfs/Qmb1bvvnFPijJD1oocq34eK3yM8RGGU8GzhgRxAzAXY4a4\"]},\"contracts/ERC20.sol\":{\"keccak256\":\"0x8165d16059d99a3b514ee131900d7a2e7caf0d05af7ef1a06a2680e2a522ff16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db8ae4347b67aeb309ee9fe25c6d1f051d5be1d6f0fecc6e192c57071756ceba\",\"dweb:/ipfs/QmVkwu5KNXyozFywMgXA38hzmbAyqbokBwjMCDNf3pVdks\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x4439427b57900ab539f5045ddaf003705222f59471aa0d6c8a068778672605ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e093160c78c1c21cdf32cc7099aa2ff08f1c2658107a3870497f1a2311d26f82\",\"dweb:/ipfs/QmXSRBTqm8UrBADZEPmPBZ37YPuM77kpgQyPYMvZTVQdNX\"]},\"contracts/Initializable.sol\":{\"keccak256\":\"0x7baf0ed980d789497ecea609b7459e3c7c8045772aa3805bab4e9730cf2c1ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40ba8fc2453da882540d1a31a02c3ef9796e1a8bbfaa349d407bc6045d7efa6d\",\"dweb:/ipfs/QmVw28aviekGV9NifK2PzWrBtCxM2rbq8CLhNsrH6LYVNQ\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0xc3410fa5d48057da2b67aa8e84828bb0efd96c3ec79b3fdf1adda3752b39d9b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef432098b5ae79ceefe86d0ae8c4f2751354e6d98d22d38cf54f8c3314dee4dd\",\"dweb:/ipfs/QmQ4eR4fBSemx97LP1VabXt2bpGcPJ7g3i4r4NLs5Xa4VF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 710,
								"contract": "contracts/ERC20.sol:ERC20UpgradeSafe",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 713,
								"contract": "contracts/ERC20.sol:ERC20UpgradeSafe",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 778,
								"contract": "contracts/ERC20.sol:ERC20UpgradeSafe",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 109,
								"contract": "contracts/ERC20.sol:ERC20UpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 133,
								"contract": "contracts/ERC20.sol:ERC20UpgradeSafe",
								"label": "_balances",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "contracts/ERC20.sol:ERC20UpgradeSafe",
								"label": "_allowances",
								"offset": 0,
								"slot": "102",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "contracts/ERC20.sol:ERC20UpgradeSafe",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "103",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/ERC20.sol:ERC20UpgradeSafe",
								"label": "_name",
								"offset": 0,
								"slot": "104",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "contracts/ERC20.sol:ERC20UpgradeSafe",
								"label": "_symbol",
								"offset": 0,
								"slot": "105",
								"type": "t_string_storage"
							},
							{
								"astId": 147,
								"contract": "contracts/ERC20.sol:ERC20UpgradeSafe",
								"label": "_decimals",
								"offset": 0,
								"slot": "106",
								"type": "t_uint8"
							},
							{
								"astId": 627,
								"contract": "contracts/ERC20.sol:ERC20UpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "107",
								"type": "t_array(t_uint256)44_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)44_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[44]",
								"numberOfBytes": "1408"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x4439427b57900ab539f5045ddaf003705222f59471aa0d6c8a068778672605ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e093160c78c1c21cdf32cc7099aa2ff08f1c2658107a3870497f1a2311d26f82\",\"dweb:/ipfs/QmXSRBTqm8UrBADZEPmPBZ37YPuM77kpgQyPYMvZTVQdNX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Initializable.sol\":60:1463  contract Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Initializable.sol\":60:1463  contract Initializable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122085e80e0a116ef62a4a76e350fa58a732ca7cde7de342e951980698af5ab50c4964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122085e80e0a116ef62a4a76e350fa58a732ca7cde7de342e951980698af5ab50c4964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xE8 0xE EXP GT PUSH15 0xF62A4A76E350FA58A732CA7CDE7DE3 TIMESTAMP 0xE9 MLOAD SWAP9 MOD SWAP9 0xAF GAS 0xB5 0xC 0x49 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "60:1403:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122085e80e0a116ef62a4a76e350fa58a732ca7cde7de342e951980698af5ab50c4964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xE8 0xE EXP GT PUSH15 0xF62A4A76E350FA58A732CA7CDE7DE3 TIMESTAMP 0xE9 MLOAD SWAP9 MOD SWAP9 0xAF GAS 0xB5 0xC 0x49 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "60:1403:4:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"isConstructor()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 1463,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1463,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122085e80e0a116ef62a4a76e350fa58a732ca7cde7de342e951980698af5ab50c4964736f6c63430008110033",
									".code": [
										{
											"begin": 60,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 1463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 60,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 60,
											"end": 1463,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/Address.sol",
								"contracts/Context.sol",
								"contracts/ERC20.sol",
								"contracts/IERC20.sol",
								"contracts/Initializable.sol",
								"contracts/SafeMath.sol",
								"contracts/USDM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Initializable.sol\":{\"keccak256\":\"0x7baf0ed980d789497ecea609b7459e3c7c8045772aa3805bab4e9730cf2c1ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40ba8fc2453da882540d1a31a02c3ef9796e1a8bbfaa349d407bc6045d7efa6d\",\"dweb:/ipfs/QmVw28aviekGV9NifK2PzWrBtCxM2rbq8CLhNsrH6LYVNQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 710,
								"contract": "contracts/Initializable.sol:Initializable",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 713,
								"contract": "contracts/Initializable.sol:Initializable",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 778,
								"contract": "contracts/Initializable.sol:Initializable",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":60:4782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":60:4782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201ba80d958e5334ddbbda43b4b13062f18252992409d244860b0a2b37741c6b6464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ba80d958e5334ddbbda43b4b13062f18252992409d244860b0a2b37741c6b6464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xA8 0xD SWAP6 DUP15 MSTORE8 CALLVALUE 0xDD 0xBB 0xDA NUMBER 0xB4 0xB1 ADDRESS PUSH3 0xF18252 SWAP10 0x24 MULMOD 0xD2 DIFFICULTY DUP7 SIGNEXTEND EXP 0x2B CALLDATACOPY PUSH21 0x1C6B6464736F6C6343000811003300000000000000 ",
							"sourceMap": "60:4722:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;60:4722:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ba80d958e5334ddbbda43b4b13062f18252992409d244860b0a2b37741c6b6464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xA8 0xD SWAP6 DUP15 MSTORE8 CALLVALUE 0xDD 0xBB 0xDA NUMBER 0xB4 0xB1 ADDRESS PUSH3 0xF18252 SWAP10 0x24 MULMOD 0xD2 DIFFICULTY DUP7 SIGNEXTEND EXP 0x2B CALLDATACOPY PUSH21 0x1C6B6464736F6C6343000811003300000000000000 ",
							"sourceMap": "60:4722:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 60,
									"end": 4782,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ba80d958e5334ddbbda43b4b13062f18252992409d244860b0a2b37741c6b6464736f6c63430008110033",
									".code": [
										{
											"begin": 60,
											"end": 4782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 60,
											"end": 4782,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 60,
											"end": 4782,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 60,
											"end": 4782,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 4782,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 4782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 60,
											"end": 4782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 4782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 60,
											"end": 4782,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/Address.sol",
								"contracts/Context.sol",
								"contracts/ERC20.sol",
								"contracts/IERC20.sol",
								"contracts/Initializable.sol",
								"contracts/SafeMath.sol",
								"contracts/USDM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0xc3410fa5d48057da2b67aa8e84828bb0efd96c3ec79b3fdf1adda3752b39d9b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef432098b5ae79ceefe86d0ae8c4f2751354e6d98d22d38cf54f8c3314dee4dd\",\"dweb:/ipfs/QmQ4eR4fBSemx97LP1VabXt2bpGcPJ7g3i4r4NLs5Xa4VF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/USDM.sol": {
				"USDM": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/USDM.sol\":80:193  contract USDM is ERC20UpgradeSafe {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/USDM.sol\":120:191  constructor() ERC20UpgradeSafe(\"USD Moonlab\", \"USDM1\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ERC20.sol\":887:1088  constructor(string memory tokenName, string memory tokenSymbol) initializer {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa9, 0x2aa9a21026b7b7b73630b1)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x5553444d31)\n  dup2\n  mstore\n  pop\n    /* \"contracts/Initializable.sol\":443:455  initializing */\n  0x00\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/Initializable.sol\":443:474  initializing || isConstructor() */\n  dup1\n  tag_6\n  jumpi\n  pop\n    /* \"contracts/Initializable.sol\":1261:1265  this */\n  address\n    /* \"contracts/Initializable.sol\":1307:1324  extcodesize(self) */\n  extcodesize\n    /* \"contracts/Initializable.sol\":1339:1346  cs == 0 */\n  iszero\n    /* \"contracts/Initializable.sol\":459:474  isConstructor() */\ntag_6:\n    /* \"contracts/Initializable.sol\":443:490  initializing || isConstructor() || !initialized */\n  dup1\n  tag_8\n  jumpi\n  pop\n    /* \"contracts/Initializable.sol\":479:490  initialized */\n  and(0xff, sload(0x00))\n    /* \"contracts/Initializable.sol\":478:490  !initialized */\n  iszero\n    /* \"contracts/Initializable.sol\":443:490  initializing || isConstructor() || !initialized */\ntag_8:\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x2e\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_dc12ae8220c8de7014142805a332ae4e2e45dfffa340e9d79b20c86951735405\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:329   */\n  mstore\n  shl(0x92, 0x195b881a5b9a5d1a585b1a5e9959)\n    /* \"#utility.yul\":345:363   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":338:382   */\n  mstore\n    /* \"#utility.yul\":399:418   */\n  0x84\n  add\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"contracts/Initializable.sol\":550:569  bool isTopLevelCall */\n  0x00\n    /* \"contracts/Initializable.sol\":573:585  initializing */\n  sload\n  0x0100\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/Initializable.sol\":572:585  !initializing */\n  iszero\n    /* \"contracts/Initializable.sol\":592:675  if (isTopLevelCall) {... */\n  dup1\n  iszero\n  tag_12\n  jumpi\n    /* \"contracts/Initializable.sol\":621:633  initializing */\n  0x00\n    /* \"contracts/Initializable.sol\":621:640  initializing = true */\n  dup1\n  sload\n  not(0xffff)\n    /* \"contracts/Initializable.sol\":649:667  initialized = true */\n  and\n  0x0101\n  or\n  swap1\n  sstore\n    /* \"contracts/Initializable.sol\":592:675  if (isTopLevelCall) {... */\ntag_12:\n    /* \"contracts/ERC20.sol\":973:999  __Context_init_unchained() */\n  tag_14\n    /* \"contracts/ERC20.sol\":973:997  __Context_init_unchained */\n  tag_15\n    /* \"contracts/ERC20.sol\":973:999  __Context_init_unchained() */\n  jump\t// in\ntag_14:\n    /* \"contracts/ERC20.sol\":1009:1014  _name */\n  0x68\n    /* \"contracts/ERC20.sol\":1009:1026  _name = tokenName */\n  tag_16\n    /* \"contracts/ERC20.sol\":1017:1026  tokenName */\n  dup5\n    /* \"contracts/ERC20.sol\":1009:1014  _name */\n  dup3\n    /* \"contracts/ERC20.sol\":1009:1026  _name = tokenName */\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n    /* \"contracts/ERC20.sol\":1036:1043  _symbol */\n  0x69\n    /* \"contracts/ERC20.sol\":1036:1057  _symbol = tokenSymbol */\n  tag_18\n    /* \"contracts/ERC20.sol\":1046:1057  tokenSymbol */\n  dup4\n    /* \"contracts/ERC20.sol\":1036:1043  _symbol */\n  dup3\n    /* \"contracts/ERC20.sol\":1036:1057  _symbol = tokenSymbol */\n  tag_17\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/ERC20.sol\":1067:1076  _decimals */\n  0x6a\n    /* \"contracts/ERC20.sol\":1067:1081  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/ERC20.sol\":1079:1081  18 */\n  0x12\n    /* \"contracts/ERC20.sol\":1067:1081  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/Initializable.sol\":693:750  if (isTopLevelCall) {... */\n  dup1\n  iszero\n  tag_19\n  jumpi\n    /* \"contracts/Initializable.sol\":737:742  false */\n  0x00\n    /* \"contracts/Initializable.sol\":722:742  initializing = false */\n  dup1\n  sload\n  not(0xff00)\n  and\n  swap1\n  sstore\n    /* \"contracts/Initializable.sol\":693:750  if (isTopLevelCall) {... */\ntag_19:\n    /* \"contracts/Initializable.sol\":428:755  {... */\n  pop\n    /* \"contracts/ERC20.sol\":887:1088  constructor(string memory tokenName, string memory tokenSymbol) initializer {... */\n  pop\n  pop\n    /* \"contracts/USDM.sol\":80:193  contract USDM is ERC20UpgradeSafe {... */\n  jump(tag_37)\n    /* \"contracts/Context.sol\":389:448  function __Context_init_unchained() internal initializer {} */\ntag_15:\n    /* \"contracts/Initializable.sol\":443:455  initializing */\n  sload(0x00)\n  0x0100\n  swap1\n  div\n  0xff\n  and\n  dup1\n    /* \"contracts/Initializable.sol\":443:474  initializing || isConstructor() */\n  tag_25\n  jumpi\n  pop\n    /* \"contracts/Initializable.sol\":1261:1265  this */\n  address\n    /* \"contracts/Initializable.sol\":1307:1324  extcodesize(self) */\n  extcodesize\n    /* \"contracts/Initializable.sol\":1339:1346  cs == 0 */\n  iszero\n    /* \"contracts/Initializable.sol\":459:474  isConstructor() */\ntag_25:\n    /* \"contracts/Initializable.sol\":443:490  initializing || isConstructor() || !initialized */\n  dup1\n  tag_26\n  jumpi\n  pop\n    /* \"contracts/Initializable.sol\":479:490  initialized */\n  and(0xff, sload(0x00))\n    /* \"contracts/Initializable.sol\":478:490  !initialized */\n  iszero\n    /* \"contracts/Initializable.sol\":443:490  initializing || isConstructor() || !initialized */\ntag_26:\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n  tag_27\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x2e\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_dc12ae8220c8de7014142805a332ae4e2e45dfffa340e9d79b20c86951735405\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:329   */\n  mstore\n  shl(0x92, 0x195b881a5b9a5d1a585b1a5e9959)\n    /* \"#utility.yul\":345:363   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":338:382   */\n  mstore\n    /* \"#utility.yul\":399:418   */\n  0x84\n  add\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n  tag_10\n    /* \"#utility.yul\":14:424   */\n  jump\n    /* \"contracts/Initializable.sol\":435:541  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\ntag_27:\n    /* \"contracts/Initializable.sol\":550:569  bool isTopLevelCall */\n  0x00\n    /* \"contracts/Initializable.sol\":573:585  initializing */\n  sload\n  0x0100\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/Initializable.sol\":572:585  !initializing */\n  iszero\n    /* \"contracts/Initializable.sol\":592:675  if (isTopLevelCall) {... */\n  dup1\n  iszero\n  tag_29\n  jumpi\n    /* \"contracts/Initializable.sol\":621:633  initializing */\n  0x00\n    /* \"contracts/Initializable.sol\":621:640  initializing = true */\n  dup1\n  sload\n  not(0xffff)\n    /* \"contracts/Initializable.sol\":649:667  initialized = true */\n  and\n  0x0101\n  or\n  swap1\n  sstore\n    /* \"contracts/Initializable.sol\":592:675  if (isTopLevelCall) {... */\ntag_29:\n    /* \"contracts/Initializable.sol\":697:711  isTopLevelCall */\n  dup1\n    /* \"contracts/Initializable.sol\":693:750  if (isTopLevelCall) {... */\n  iszero\n  tag_31\n  jumpi\n    /* \"contracts/Initializable.sol\":737:742  false */\n  0x00\n    /* \"contracts/Initializable.sol\":722:742  initializing = false */\n  dup1\n  sload\n  not(0xff00)\n  and\n  swap1\n  sstore\n    /* \"contracts/Initializable.sol\":693:750  if (isTopLevelCall) {... */\ntag_31:\n    /* \"contracts/Initializable.sol\":428:755  {... */\n  pop\n    /* \"contracts/Context.sol\":389:448  function __Context_init_unchained() internal initializer {} */\n  jump\t// out\n    /* \"#utility.yul\":429:556   */\ntag_32:\n    /* \"#utility.yul\":490:500   */\n  0x4e487b71\n    /* \"#utility.yul\":485:488   */\n  0xe0\n    /* \"#utility.yul\":481:501   */\n  shl\n    /* \"#utility.yul\":478:479   */\n  0x00\n    /* \"#utility.yul\":471:502   */\n  mstore\n    /* \"#utility.yul\":521:525   */\n  0x41\n    /* \"#utility.yul\":518:519   */\n  0x04\n    /* \"#utility.yul\":511:526   */\n  mstore\n    /* \"#utility.yul\":545:549   */\n  0x24\n    /* \"#utility.yul\":542:543   */\n  0x00\n    /* \"#utility.yul\":535:550   */\n  revert\n    /* \"#utility.yul\":561:941   */\ntag_33:\n    /* \"#utility.yul\":640:641   */\n  0x01\n    /* \"#utility.yul\":636:648   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":683:695   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":704:765   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":758:762   */\n  0x7f\n    /* \"#utility.yul\":750:756   */\n  dup3\n    /* \"#utility.yul\":746:763   */\n  and\n    /* \"#utility.yul\":736:763   */\n  swap2\n  pop\n    /* \"#utility.yul\":704:765   */\ntag_41:\n    /* \"#utility.yul\":811:813   */\n  0x20\n    /* \"#utility.yul\":803:809   */\n  dup3\n    /* \"#utility.yul\":800:814   */\n  lt\n    /* \"#utility.yul\":780:798   */\n  dup2\n    /* \"#utility.yul\":777:815   */\n  sub\n    /* \"#utility.yul\":774:935   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":857:867   */\n  0x4e487b71\n    /* \"#utility.yul\":852:855   */\n  0xe0\n    /* \"#utility.yul\":848:868   */\n  shl\n    /* \"#utility.yul\":845:846   */\n  0x00\n    /* \"#utility.yul\":838:869   */\n  mstore\n    /* \"#utility.yul\":892:896   */\n  0x22\n    /* \"#utility.yul\":889:890   */\n  0x04\n    /* \"#utility.yul\":882:897   */\n  mstore\n    /* \"#utility.yul\":920:924   */\n  0x24\n    /* \"#utility.yul\":917:918   */\n  0x00\n    /* \"#utility.yul\":910:925   */\n  revert\n    /* \"#utility.yul\":774:935   */\ntag_42:\n  pop\n    /* \"#utility.yul\":561:941   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1072:1617   */\ntag_35:\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1169:1172   */\n  dup3\n    /* \"#utility.yul\":1166:1177   */\n  gt\n    /* \"#utility.yul\":1163:1611   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1210:1211   */\n  0x00\n    /* \"#utility.yul\":1235:1240   */\n  dup2\n    /* \"#utility.yul\":1231:1233   */\n  dup2\n    /* \"#utility.yul\":1224:1241   */\n  mstore\n    /* \"#utility.yul\":1280:1284   */\n  0x20\n    /* \"#utility.yul\":1276:1278   */\n  dup2\n    /* \"#utility.yul\":1266:1285   */\n  keccak256\n    /* \"#utility.yul\":1350:1352   */\n  0x1f\n    /* \"#utility.yul\":1338:1348   */\n  dup6\n    /* \"#utility.yul\":1334:1353   */\n  add\n    /* \"#utility.yul\":1331:1332   */\n  0x05\n    /* \"#utility.yul\":1327:1354   */\n  shr\n    /* \"#utility.yul\":1321:1325   */\n  dup2\n    /* \"#utility.yul\":1317:1355   */\n  add\n    /* \"#utility.yul\":1386:1390   */\n  0x20\n    /* \"#utility.yul\":1374:1384   */\n  dup7\n    /* \"#utility.yul\":1371:1391   */\n  lt\n    /* \"#utility.yul\":1368:1415   */\n  iszero\n  tag_46\n  jumpi\n  pop\n    /* \"#utility.yul\":1409:1413   */\n  dup1\n    /* \"#utility.yul\":1368:1415   */\ntag_46:\n    /* \"#utility.yul\":1464:1466   */\n  0x1f\n    /* \"#utility.yul\":1459:1462   */\n  dup6\n    /* \"#utility.yul\":1455:1467   */\n  add\n    /* \"#utility.yul\":1452:1453   */\n  0x05\n    /* \"#utility.yul\":1448:1468   */\n  shr\n    /* \"#utility.yul\":1442:1446   */\n  dup3\n    /* \"#utility.yul\":1438:1469   */\n  add\n    /* \"#utility.yul\":1428:1469   */\n  swap2\n  pop\n    /* \"#utility.yul\":1519:1601   */\ntag_47:\n    /* \"#utility.yul\":1537:1539   */\n  dup2\n    /* \"#utility.yul\":1530:1535   */\n  dup2\n    /* \"#utility.yul\":1527:1540   */\n  lt\n    /* \"#utility.yul\":1519:1601   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1582:1599   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1563:1564   */\n  0x01\n    /* \"#utility.yul\":1552:1565   */\n  add\n    /* \"#utility.yul\":1519:1601   */\n  jump(tag_47)\ntag_49:\n    /* \"#utility.yul\":1523:1526   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1163:1611   */\ntag_45:\n    /* \"#utility.yul\":1072:1617   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1793:3145   */\ntag_17:\n    /* \"#utility.yul\":1913:1923   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1935:1965   */\n  dup2\n  gt\n    /* \"#utility.yul\":1932:1988   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1968:1986   */\n  tag_53\n  tag_32\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1997:2094   */\n  tag_54\n    /* \"#utility.yul\":2087:2093   */\n  dup2\n    /* \"#utility.yul\":2047:2085   */\n  tag_55\n    /* \"#utility.yul\":2079:2083   */\n  dup5\n    /* \"#utility.yul\":2073:2084   */\n  sload\n    /* \"#utility.yul\":2047:2085   */\n  tag_33\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2041:2045   */\n  dup5\n    /* \"#utility.yul\":1997:2094   */\n  tag_35\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2149:2153   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2213:2215   */\n  0x1f\n    /* \"#utility.yul\":2202:2216   */\n  dup4\n  gt\n    /* \"#utility.yul\":2230:2231   */\n  0x01\n    /* \"#utility.yul\":2225:2888   */\n  dup2\n  eq\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2932:2933   */\n  0x00\n    /* \"#utility.yul\":2949:2955   */\n  dup5\n    /* \"#utility.yul\":2946:3035   */\n  iszero\n  tag_58\n  jumpi\n  pop\n    /* \"#utility.yul\":3001:3020   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2995:3021   */\n  mload\n    /* \"#utility.yul\":2946:3035   */\ntag_58:\n  not(0x00)\n    /* \"#utility.yul\":1750:1751   */\n  0x03\n    /* \"#utility.yul\":1746:1757   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1742:1766   */\n  shr\n    /* \"#utility.yul\":1738:1767   */\n  not\n    /* \"#utility.yul\":1728:1768   */\n  and\n    /* \"#utility.yul\":1774:1775   */\n  0x01\n    /* \"#utility.yul\":1770:1781   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1725:1782   */\n  or\n    /* \"#utility.yul\":3048:3129   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2195:3139   */\n  jump(tag_49)\n    /* \"#utility.yul\":2225:2888   */\ntag_57:\n    /* \"#utility.yul\":1019:1020   */\n  0x00\n    /* \"#utility.yul\":1012:1026   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1056:1060   */\n  0x20\n    /* \"#utility.yul\":1043:1061   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2261:2281   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2379:2615   */\ntag_61:\n    /* \"#utility.yul\":2393:2400   */\n  dup3\n    /* \"#utility.yul\":2390:2391   */\n  dup2\n    /* \"#utility.yul\":2387:2401   */\n  lt\n    /* \"#utility.yul\":2379:2615   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2482:2501   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2476:2502   */\n  mload\n    /* \"#utility.yul\":2461:2503   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2574:2601   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2542:2543   */\n  0x01\n    /* \"#utility.yul\":2530:2544   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2409:2428   */\n  dup5\n  add\n    /* \"#utility.yul\":2379:2615   */\n  jump(tag_61)\ntag_63:\n    /* \"#utility.yul\":2383:2386   */\n  pop\n    /* \"#utility.yul\":2643:2649   */\n  dup6\n    /* \"#utility.yul\":2634:2641   */\n  dup3\n    /* \"#utility.yul\":2631:2650   */\n  lt\n    /* \"#utility.yul\":2628:2829   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2704:2723   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2698:2724   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2787:2788   */\n  0x03\n    /* \"#utility.yul\":2783:2797   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2799:2802   */\n  0xf8\n    /* \"#utility.yul\":2779:2803   */\n  and\n    /* \"#utility.yul\":2775:2812   */\n  shr\n    /* \"#utility.yul\":2771:2813   */\n  not\n    /* \"#utility.yul\":2756:2814   */\n  and\n    /* \"#utility.yul\":2741:2815   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2628:2829   */\ntag_64:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2875:2876   */\n  0x01\n    /* \"#utility.yul\":2859:2873   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2855:2877   */\n  add\n    /* \"#utility.yul\":2842:2878   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1793:3145   */\n  jump\t// out\ntag_37:\n    /* \"contracts/USDM.sol\":80:193  contract USDM is ERC20UpgradeSafe {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_dc12ae8220c8de7014142805a332ae4e2e45dfffa340e9d79b20c86951735405 436f6e747261637420696e7374616e63652068617320616c7265616479206265\n\nsub_0: assembly {\n        /* \"contracts/USDM.sol\":80:193  contract USDM is ERC20UpgradeSafe {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20.sol\":1153:1234  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3269:3471  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/ERC20.sol\":3269:3471  function approve(address spender, uint256 amount)... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/ERC20.sol\":2196:2294  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/ERC20.sol\":2275:2287  _totalSupply */\n      sload(0x67)\n        /* \"contracts/ERC20.sol\":2196:2294  function totalSupply() public view override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/ERC20.sol\":2196:2294  function totalSupply() public view override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/ERC20.sol\":3931:4370  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/ERC20.sol\":2055:2136  function decimals() public view returns (uint8) {... */\n    tag_7:\n        /* \"contracts/ERC20.sol\":2120:2129  _decimals */\n      sload(0x6a)\n        /* \"contracts/ERC20.sol\":2055:2136  function decimals() public view returns (uint8) {... */\n      mload(0x40)\n        /* \"contracts/ERC20.sol\":2120:2129  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/ERC20.sol\":2055:2136  function decimals() public view returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/ERC20.sol\":4765:5054  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/ERC20.sol\":2352:2469  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":2444:2462  _balances[account] */\n      and\n        /* \"contracts/ERC20.sol\":2418:2425  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":2444:2462  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":2444:2453  _balances */\n      0x65\n        /* \"contracts/ERC20.sol\":2444:2462  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC20.sol\":2352:2469  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/ERC20.sol\":1347:1432  function symbol() public view returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/ERC20.sol\":5541:5927  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/ERC20.sol\":2672:2880  function transfer(address recipient, uint256 amount)... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/ERC20.sol\":2938:3131  function allowance(address owner, address spender)... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":3097:3115  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC20.sol\":3067:3074  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":3097:3115  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":3097:3108  _allowances */\n      0x66\n        /* \"contracts/ERC20.sol\":3097:3115  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC20.sol\":3097:3124  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC20.sol\":2938:3131  function allowance(address owner, address spender)... */\n      jump\n        /* \"contracts/ERC20.sol\":1153:1234  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \"contracts/ERC20.sol\":1190:1203  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":1222:1227  _name */\n      0x68\n        /* \"contracts/ERC20.sol\":1215:1227  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1153:1234  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3269:3471  function approve(address spender, uint256 amount)... */\n    tag_22:\n        /* \"contracts/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3404:3443  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":3427:3434  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":3436:3442  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":3404:3412  _approve */\n      tag_74\n        /* \"contracts/ERC20.sol\":3404:3443  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"contracts/ERC20.sol\":3460:3464  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3269:3471  function approve(address spender, uint256 amount)... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3931:4370  function transferFrom(... */\n    tag_32:\n        /* \"contracts/ERC20.sol\":4067:4071  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4083:4119  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"contracts/ERC20.sol\":4093:4099  sender */\n      dup5\n        /* \"contracts/ERC20.sol\":4101:4110  recipient */\n      dup5\n        /* \"contracts/ERC20.sol\":4112:4118  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":4083:4092  _transfer */\n      tag_78\n        /* \"contracts/ERC20.sol\":4083:4119  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n        /* \"contracts/ERC20.sol\":4129:4342  _approve(... */\n      tag_79\n        /* \"contracts/ERC20.sol\":4151:4157  sender */\n      dup5\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":4197:4332  _allowances[sender][_msgSender()].sub(... */\n      tag_81\n        /* \"contracts/ERC20.sol\":4252:4258  amount */\n      dup6\n        /* \"contracts/ERC20.sol\":4197:4332  _allowances[sender][_msgSender()].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":4197:4216  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":4197:4208  _allowances */\n      0x66\n        /* \"contracts/ERC20.sol\":4197:4216  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":4197:4230  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/ERC20.sol\":4197:4234  _allowances[sender][_msgSender()].sub */\n      tag_83\n        /* \"contracts/ERC20.sol\":4197:4332  _allowances[sender][_msgSender()].sub(... */\n      jump\t// in\n    tag_81:\n        /* \"contracts/ERC20.sol\":4129:4137  _approve */\n      tag_74\n        /* \"contracts/ERC20.sol\":4129:4342  _approve(... */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"contracts/ERC20.sol\":4359:4363  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3931:4370  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":4765:5054  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_40:\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":4877:4881  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4966:4991  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":4966:4977  _allowances */\n      0x66\n        /* \"contracts/ERC20.sol\":4966:4991  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":4966:5000  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4877:4881  bool */\n      swap1\n      swap2\n        /* \"contracts/ERC20.sol\":4897:5026  _approve(... */\n      tag_71\n      swap2\n        /* \"contracts/ERC20.sol\":4945:4952  spender */\n      dup6\n      swap1\n        /* \"contracts/ERC20.sol\":4966:5016  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_81\n      swap1\n        /* \"contracts/ERC20.sol\":5005:5015  addedValue */\n      dup7\n        /* \"contracts/ERC20.sol\":4966:5004  _allowances[_msgSender()][spender].add */\n      tag_90\n        /* \"contracts/ERC20.sol\":4966:5016  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1347:1432  function symbol() public view returns (string memory) {... */\n    tag_48:\n        /* \"contracts/ERC20.sol\":1386:1399  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":1418:1425  _symbol */\n      0x69\n        /* \"contracts/ERC20.sol\":1411:1425  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"contracts/ERC20.sol\":5541:5927  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_52:\n        /* \"contracts/ERC20.sol\":5658:5662  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":5678:5899  _approve(... */\n      tag_71\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":5726:5733  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":5747:5889  _allowances[_msgSender()][spender].sub(... */\n      tag_81\n        /* \"contracts/ERC20.sol\":5803:5818  subtractedValue */\n      dup6\n        /* \"contracts/ERC20.sol\":5747:5889  _allowances[_msgSender()][spender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":5747:5772  _allowances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":5747:5758  _allowances */\n      0x66\n        /* \"contracts/ERC20.sol\":5747:5772  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":5747:5781  _allowances[_msgSender()][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/ERC20.sol\":5747:5785  _allowances[_msgSender()][spender].sub */\n      tag_83\n        /* \"contracts/ERC20.sol\":5747:5889  _allowances[_msgSender()][spender].sub(... */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":2672:2880  function transfer(address recipient, uint256 amount)... */\n    tag_56:\n        /* \"contracts/ERC20.sol\":2790:2794  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":2810:2852  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"contracts/Context.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":2834:2843  recipient */\n      dup5\n        /* \"contracts/ERC20.sol\":2845:2851  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":2810:2819  _transfer */\n      tag_78\n        /* \"contracts/ERC20.sol\":2810:2852  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":8823:9193  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":8954:8973  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC20.sol\":8946:9014  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2943:2945   */\n      0x20\n        /* \"contracts/ERC20.sol\":8946:9014  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2925:2946   */\n      mstore\n        /* \"#utility.yul\":2982:2984   */\n      0x24\n        /* \"#utility.yul\":2962:2980   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2955:2985   */\n      mstore\n        /* \"#utility.yul\":3021:3055   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3001:3019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2994:3056   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3072:3090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3065:3099   */\n      mstore\n        /* \"#utility.yul\":3116:3135   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":8946:9014  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":9032:9053  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/ERC20.sol\":9024:9092  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3348:3350   */\n      0x20\n        /* \"contracts/ERC20.sol\":9024:9092  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3330:3351   */\n      mstore\n        /* \"#utility.yul\":3387:3389   */\n      0x22\n        /* \"#utility.yul\":3367:3385   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3360:3390   */\n      mstore\n        /* \"#utility.yul\":3426:3460   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3406:3424   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3399:3461   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3477:3495   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3470:3502   */\n      mstore\n        /* \"#utility.yul\":3519:3538   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":9024:9092  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_110\n        /* \"#utility.yul\":3146:3544   */\n      jump\n        /* \"contracts/ERC20.sol\":9024:9092  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":9103:9121  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":9103:9114  _allowances */\n      0x66\n        /* \"contracts/ERC20.sol\":9103:9121  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC20.sol\":9103:9130  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ERC20.sol\":9103:9139  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/ERC20.sol\":9154:9186  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":9154:9186  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/ERC20.sol\":9154:9186  Approval(owner, spender, amount) */\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":8823:9193  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":6401:6995  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":6536:6556  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC20.sol\":6528:6598  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3751:3753   */\n      0x20\n        /* \"contracts/ERC20.sol\":6528:6598  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3733:3754   */\n      mstore\n        /* \"#utility.yul\":3790:3792   */\n      0x25\n        /* \"#utility.yul\":3770:3788   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3763:3793   */\n      mstore\n        /* \"#utility.yul\":3829:3863   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3809:3827   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3802:3864   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3880:3898   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3873:3908   */\n      mstore\n        /* \"#utility.yul\":3925:3944   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":6528:6598  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_110\n        /* \"#utility.yul\":3549:3950   */\n      jump\n        /* \"contracts/ERC20.sol\":6528:6598  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":6616:6639  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/ERC20.sol\":6608:6679  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4157:4159   */\n      0x20\n        /* \"contracts/ERC20.sol\":6608:6679  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4139:4160   */\n      mstore\n        /* \"#utility.yul\":4196:4198   */\n      0x23\n        /* \"#utility.yul\":4176:4194   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4169:4199   */\n      mstore\n        /* \"#utility.yul\":4235:4269   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":4215:4233   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4208:4270   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":4286:4304   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4279:4312   */\n      mstore\n        /* \"#utility.yul\":4329:4348   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":6608:6679  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_110\n        /* \"#utility.yul\":3955:4354   */\n      jump\n        /* \"contracts/ERC20.sol\":6608:6679  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_120:\n        /* \"contracts/ERC20.sol\":6768:6873  _balances[sender].sub(... */\n      tag_125\n        /* \"contracts/ERC20.sol\":6803:6809  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":6768:6873  _balances[sender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":6768:6785  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":6768:6777  _balances */\n      0x65\n        /* \"contracts/ERC20.sol\":6768:6785  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/ERC20.sol\":6768:6873  _balances[sender].sub(... */\n      swap1\n        /* \"contracts/ERC20.sol\":6768:6789  _balances[sender].sub */\n      tag_83\n        /* \"contracts/ERC20.sol\":6768:6873  _balances[sender].sub(... */\n      jump\t// in\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":6748:6765  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":6748:6757  _balances */\n      0x65\n        /* \"contracts/ERC20.sol\":6748:6765  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC20.sol\":6748:6873  _balances[sender] = _balances[sender].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ERC20.sol\":6906:6926  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":6906:6938  _balances[recipient].add(amount) */\n      tag_126\n      swap1\n        /* \"contracts/ERC20.sol\":6931:6937  amount */\n      dup3\n        /* \"contracts/ERC20.sol\":6906:6930  _balances[recipient].add */\n      tag_90\n        /* \"contracts/ERC20.sol\":6906:6938  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":6883:6903  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":6883:6892  _balances */\n      0x65\n        /* \"contracts/ERC20.sol\":6883:6903  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC20.sol\":6883:6938  _balances[recipient] = _balances[recipient].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ERC20.sol\":6953:6988  Transfer(sender, recipient, amount) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_115\n      swap1\n        /* \"contracts/ERC20.sol\":6981:6987  amount */\n      dup6\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/SafeMath.sol\":1202:1394  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_83:\n        /* \"contracts/SafeMath.sol\":1288:1295  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":1324:1336  errorMessage */\n      dup2\n        /* \"contracts/SafeMath.sol\":1316:1322  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":1308:1337  require(b <= a, errorMessage) */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_129:\n      pop\n        /* \"contracts/SafeMath.sol\":1348:1357  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":1360:1365  a - b */\n      tag_131\n        /* \"contracts/SafeMath.sol\":1364:1365  b */\n      dup5\n        /* \"contracts/SafeMath.sol\":1360:1361  a */\n      dup7\n        /* \"contracts/SafeMath.sol\":1360:1365  a - b */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/SafeMath.sol\":1348:1365  uint256 c = a - b */\n      swap6\n        /* \"contracts/SafeMath.sol\":1202:1394  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":315:496  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_90:\n        /* \"contracts/SafeMath.sol\":373:380  uint256 */\n      0x00\n      dup1\n        /* \"contracts/SafeMath.sol\":405:410  a + b */\n      tag_134\n        /* \"contracts/SafeMath.sol\":409:410  b */\n      dup4\n        /* \"contracts/SafeMath.sol\":405:406  a */\n      dup6\n        /* \"contracts/SafeMath.sol\":405:410  a + b */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/SafeMath.sol\":393:410  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":434:435  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":429:430  c */\n      dup2\n        /* \"contracts/SafeMath.sol\":429:435  c >= a */\n      lt\n      iszero\n        /* \"contracts/SafeMath.sol\":421:467  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4956:4958   */\n      0x20\n        /* \"contracts/SafeMath.sol\":421:467  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4938:4959   */\n      mstore\n        /* \"#utility.yul\":4995:4997   */\n      0x1b\n        /* \"#utility.yul\":4975:4993   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4968:4998   */\n      mstore\n        /* \"#utility.yul\":5034:5063   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":5014:5032   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5007:5064   */\n      mstore\n        /* \"#utility.yul\":5081:5099   */\n      0x64\n      add\n        /* \"contracts/SafeMath.sol\":421:467  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_110\n        /* \"#utility.yul\":4754:5105   */\n      jump\n        /* \"contracts/SafeMath.sol\":421:467  require(c >= a, \"SafeMath: addition overflow\") */\n    tag_136:\n        /* \"contracts/SafeMath.sol\":487:488  c */\n      swap4\n        /* \"contracts/SafeMath.sol\":315:496  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_148:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_150:\n        /* \"#utility.yul\":913:942   */\n      tag_151\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_155:\n        /* \"#utility.yul\":1563:1592   */\n      tag_156\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_157\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_160:\n        /* \"#utility.yul\":2051:2080   */\n      tag_136\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_163:\n        /* \"#utility.yul\":2259:2288   */\n      tag_164\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_165\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_167:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4359:4486   */\n    tag_141:\n        /* \"#utility.yul\":4420:4430   */\n      0x4e487b71\n        /* \"#utility.yul\":4415:4418   */\n      0xe0\n        /* \"#utility.yul\":4411:4431   */\n      shl\n        /* \"#utility.yul\":4408:4409   */\n      0x00\n        /* \"#utility.yul\":4401:4432   */\n      mstore\n        /* \"#utility.yul\":4451:4455   */\n      0x11\n        /* \"#utility.yul\":4448:4449   */\n      0x04\n        /* \"#utility.yul\":4441:4456   */\n      mstore\n        /* \"#utility.yul\":4475:4479   */\n      0x24\n        /* \"#utility.yul\":4472:4473   */\n      0x00\n        /* \"#utility.yul\":4465:4480   */\n      revert\n        /* \"#utility.yul\":4491:4619   */\n    tag_132:\n        /* \"#utility.yul\":4558:4567   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4579:4590   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4576:4613   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":4593:4611   */\n      tag_70\n      tag_141\n      jump\t// in\n        /* \"#utility.yul\":4624:4749   */\n    tag_135:\n        /* \"#utility.yul\":4689:4698   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4710:4720   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4707:4743   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":4723:4741   */\n      tag_70\n      tag_141\n      jump\t// in\n    stop\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122065e368b1cd24e42148eaf117cc272f0190910abebfe08831ec36517a992b757564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_173": {
									"entryPoint": null,
									"id": 173,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_987": {
									"entryPoint": null,
									"id": 987,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Context_init_unchained_82": {
									"entryPoint": 330,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isConstructor_774": {
									"entryPoint": null,
									"id": 774,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3147:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:236:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:7",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:7"
																	},
																	{
																		"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:34:7",
																		"type": "",
																		"value": "Contract instance has already be"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "360:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:18:7"
																	},
																	{
																		"hexValue": "656e20696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "365:16:7",
																		"type": "",
																		"value": "en initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "338:44:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "391:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "403:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "414:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "391:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:7",
														"type": ""
													}
												],
												"src": "14:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "461:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "478:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "485:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "490:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "481:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "471:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "518:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "521:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "511:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "511:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "511:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "542:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "545:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "535:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "535:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "429:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "643:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "657:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "687:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "693:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "683:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "661:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "734:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "736:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "750:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "758:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "746:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "746:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "736:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "714:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "707:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:26:7"
															},
															"nodeType": "YulIf",
															"src": "704:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "824:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "845:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "852:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "857:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "848:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "838:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "838:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "838:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "889:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "892:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "882:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "882:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "882:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "917:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "920:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "910:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "910:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "910:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "780:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "803:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "811:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "800:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "800:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "777:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:38:7"
															},
															"nodeType": "YulIf",
															"src": "774:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "596:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "605:6:7",
														"type": ""
													}
												],
												"src": "561:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1002:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1019:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1022:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1012:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1012:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1012:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1035:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1053:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1056:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1043:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1035:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "985:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "993:4:7",
														"type": ""
													}
												],
												"src": "946:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1153:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1186:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1200:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1210:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1204:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1231:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1235:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1224:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1224:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1224:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1254:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1276:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1280:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1266:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1266:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1258:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1298:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1321:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1331:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "1338:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1350:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1334:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1334:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1327:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1327:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1317:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1317:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1302:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1392:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1394:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "1409:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "1394:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "1374:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1386:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1371:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1371:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "1368:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1428:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1442:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1452:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1459:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1464:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1455:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1455:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1448:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1448:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1438:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1438:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1432:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1482:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1495:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1486:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1580:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1589:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1596:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1582:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1582:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1582:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1530:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1537:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1527:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1527:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1541:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1543:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1556:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1563:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1552:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1552:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1543:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1523:3:7",
																			"statements": []
																		},
																		"src": "1519:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1169:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1166:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:11:7"
															},
															"nodeType": "YulIf",
															"src": "1163:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1125:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1132:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1137:10:7",
														"type": ""
													}
												],
												"src": "1072:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1707:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1717:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1732:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1750:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1753:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1746:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1746:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1763:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1759:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1759:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1742:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1742:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1738:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1738:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1728:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1774:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1777:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1770:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1770:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1725:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1717:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1684:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1690:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1698:4:7",
														"type": ""
													}
												],
												"src": "1622:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1889:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1899:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1919:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1913:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1913:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1903:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1966:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1968:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1968:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1968:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1938:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1954:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1958:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1950:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1950:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1962:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1946:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1935:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:30:7"
															},
															"nodeType": "YulIf",
															"src": "1932:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2041:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2079:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2073:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2073:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "2047:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2047:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2087:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1997:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1997:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2103:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2120:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "2107:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2130:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2149:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2134:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2175:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2162:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2232:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2246:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2265:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2277:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2273:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2273:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2261:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2261:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2250:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2294:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2338:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2308:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2308:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2298:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2356:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2365:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2360:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2443:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2468:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2486:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2491:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2482:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2482:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2476:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2476:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2461:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2461:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2461:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2520:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2534:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2542:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2530:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2530:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2520:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2561:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2578:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2589:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2574:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2574:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2561:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2390:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2393:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2387:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2387:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "2402:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2404:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "2413:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2416:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2409:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2409:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2404:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "2383:3:7",
																					"statements": []
																				},
																				"src": "2379:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2663:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2681:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2708:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2713:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2704:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2704:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2698:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2698:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2685:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2748:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2760:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2787:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2790:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2783:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2783:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2799:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2779:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2779:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2809:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2805:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2805:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2775:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2775:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2771:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2771:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2756:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2756:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2741:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2741:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2741:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2634:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2643:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2631:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2631:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "2628:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2849:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2863:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2866:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2859:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2859:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2875:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2855:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2855:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2842:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2842:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2842:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2225:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2230:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2905:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2919:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2932:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2923:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2968:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2986:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3005:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3010:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3001:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3001:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2995:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2995:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2986:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2949:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "2946:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3055:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3114:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3121:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "3061:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3061:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3048:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3048:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3048:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2897:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2205:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2213:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2202:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2202:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "2195:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1874:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1880:3:7",
														"type": ""
													}
												],
												"src": "1793:1352:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Contract instance has already be\")\n        mstore(add(headStart, 96), \"en initialized\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a2aa9a21026b7b7b73630b160a91b815250604051806040016040528060058152602001645553444d3160d81b815250600060019054906101000a900460ff16806200006f5750303b155b806200007e575060005460ff16155b620000d65760405162461bcd60e51b815260206004820152602e602482015260008051602062000c8983398151915260448201526d195b881a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015620000f9576000805461ffff19166101011790555b620001036200014a565b6068620001118482620002a1565b506069620001208382620002a1565b50606a805460ff19166012179055801562000141576000805461ff00191690555b5050506200036d565b600054610100900460ff1680620001605750303b155b806200016f575060005460ff16155b620001c35760405162461bcd60e51b815260206004820152602e602482015260008051602062000c8983398151915260448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401620000cd565b600054610100900460ff16158015620001e6576000805461ffff19166101011790555b8015620001f9576000805461ff00191690555b50565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200022757607f821691505b6020821081036200024857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200029c57600081815260208120601f850160051c81016020861015620002775750805b601f850160051c820191505b81811015620002985782815560010162000283565b5050505b505050565b81516001600160401b03811115620002bd57620002bd620001fc565b620002d581620002ce845462000212565b846200024e565b602080601f8311600181146200030d5760008415620002f45750858301515b600019600386901b1c1916600185901b17855562000298565b600085815260208120601f198616915b828110156200033e578886015182559484019460019091019084016200031d565b50858210156200035d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61090c806200037d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b4114610165578063a457c2d71461016d578063a9059cbb14610180578063dd62ed3e1461019357600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101cc565b6040516100c391906106cf565b60405180910390f35b6100df6100da366004610739565b61025e565b60405190151581526020016100c3565b6067545b6040519081526020016100c3565b6100df61010f366004610763565b610275565b606a5460405160ff90911681526020016100c3565b6100df610137366004610739565b6102de565b6100f361014a36600461079f565b6001600160a01b031660009081526065602052604090205490565b6100b6610314565b6100df61017b366004610739565b610323565b6100df61018e366004610739565b610372565b6100f36101a13660046107ba565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6060606880546101db906107ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610207906107ed565b80156102545780601f1061022957610100808354040283529160200191610254565b820191906000526020600020905b81548152906001019060200180831161023757829003601f168201915b5050505050905090565b600061026b33848461037f565b5060015b92915050565b60006102828484846104a9565b6102d484336102cf8560405180606001604052806028815260200161088a602891396001600160a01b038a166000908152606660209081526040808320338452909152902054919061062f565b61037f565b5060019392505050565b3360008181526066602090815260408083206001600160a01b0387168452909152812054909161026b9185906102cf9086610669565b6060606980546101db906107ed565b600061026b33846102cf856040518060600160405280602581526020016108b2602591393360009081526066602090815260408083206001600160a01b038d168452909152902054919061062f565b600061026b3384846104a9565b6001600160a01b0383166103e65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166104475760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661050d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b03821661056f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6105ac81604051806060016040528060268152602001610864602691396001600160a01b038616600090815260656020526040902054919061062f565b6001600160a01b0380851660009081526065602052604080822093909355908416815220546105db9082610669565b6001600160a01b0380841660008181526065602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061049c9085815260200190565b600081848411156106535760405162461bcd60e51b81526004016103dd91906106cf565b506000610660848661083d565b95945050505050565b6000806106768385610850565b9050838110156106c85760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103dd565b9392505050565b600060208083528351808285015260005b818110156106fc578581018301518582016040015282016106e0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461073457600080fd5b919050565b6000806040838503121561074c57600080fd5b6107558361071d565b946020939093013593505050565b60008060006060848603121561077857600080fd5b6107818461071d565b925061078f6020850161071d565b9150604084013590509250925092565b6000602082840312156107b157600080fd5b6106c88261071d565b600080604083850312156107cd57600080fd5b6107d68361071d565b91506107e46020840161071d565b90509250929050565b600181811c9082168061080157607f821691505b60208210810361082157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561026f5761026f610827565b8082018082111561026f5761026f61082756fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122065e368b1cd24e42148eaf117cc272f0190910abebfe08831ec36517a992b757564736f6c63430008110033436f6e747261637420696e7374616e63652068617320616c7265616479206265",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x2AA9A21026B7B7B73630B1 PUSH1 0xA9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x5553444D31 PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH3 0x6F JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST DUP1 PUSH3 0x7E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH3 0xD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xC89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195B881A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0xF9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH3 0x103 PUSH3 0x14A JUMP JUMPDEST PUSH1 0x68 PUSH3 0x111 DUP5 DUP3 PUSH3 0x2A1 JUMP JUMPDEST POP PUSH1 0x69 PUSH3 0x120 DUP4 DUP3 PUSH3 0x2A1 JUMP JUMPDEST POP PUSH1 0x6A DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE DUP1 ISZERO PUSH3 0x141 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP PUSH3 0x36D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH3 0x160 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST DUP1 PUSH3 0x16F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH3 0x1C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xC89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195B881A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xCD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0x1E6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST DUP1 ISZERO PUSH3 0x1F9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x227 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x248 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x29C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x277 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x298 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x283 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2BD JUMPI PUSH3 0x2BD PUSH3 0x1FC JUMP JUMPDEST PUSH3 0x2D5 DUP2 PUSH3 0x2CE DUP5 SLOAD PUSH3 0x212 JUMP JUMPDEST DUP5 PUSH3 0x24E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x30D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2F4 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x298 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x33E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x31D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x35D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x90C DUP1 PUSH3 0x37D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x67 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x314 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x68 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x207 SWAP1 PUSH2 0x7ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x254 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x229 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x254 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x237 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 DUP5 PUSH2 0x37F JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282 DUP5 DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x2D4 DUP5 CALLER PUSH2 0x2CF DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x88A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x26B SWAP2 DUP6 SWAP1 PUSH2 0x2CF SWAP1 DUP7 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x69 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 PUSH2 0x2CF DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B2 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x5AC DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x864 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5DB SWAP1 DUP3 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x49C SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x6CF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x660 DUP5 DUP7 PUSH2 0x83D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x676 DUP4 DUP6 PUSH2 0x850 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6FC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x755 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x781 DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP3 POP PUSH2 0x78F PUSH1 0x20 DUP6 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C8 DUP3 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D6 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH2 0x7E4 PUSH1 0x20 DUP5 ADD PUSH2 0x71D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x801 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x821 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x26F JUMPI PUSH2 0x26F PUSH2 0x827 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26F JUMPI PUSH2 0x26F PUSH2 0x827 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122065E3 PUSH9 0xB1CD24E42148EAF117 0xCC 0x27 0x2F ADD SWAP1 SWAP2 EXP 0xBE 0xBF 0xE0 DUP9 BALANCE 0xEC CALLDATASIZE MLOAD PUSH27 0x992B757564736F6C63430008110033436F6E747261637420696E73 PUSH21 0x616E63652068617320616C72656164792062650000 ",
							"sourceMap": "80:113:6:-:0;;;120:71;;;;;;;;;;887:201:2;;;;;;;;;;;;;-1:-1:-1;;;887:201:2;;;;;;;;;;;;;;;;-1:-1:-1;;;887:201:2;;;443:12:4;;;;;;;;;;;:31;;;-1:-1:-1;1261:4:4;1307:17;1339:7;459:15;443:47;;;-1:-1:-1;479:11:4;;;;478:12;443:47;435:106;;;;-1:-1:-1;;;435:106:4;;216:2:7;435:106:4;;;198:21:7;255:2;235:18;;;228:30;-1:-1:-1;;;;;;;;;;;274:18:7;;;267:62;-1:-1:-1;;;345:18:7;;;338:44;399:19;;435:106:4;;;;;;;;;550:19;573:12;;;;;;572:13;592:83;;;;621:12;:19;;-1:-1:-1;;649:18:4;;;;;592:83;973:26:2::1;:24;:26::i;:::-;1009:5;:17;1017:9:::0;1009:5;:17:::1;:::i;:::-;-1:-1:-1::0;1036:7:2::1;:21;1046:11:::0;1036:7;:21:::1;:::i;:::-;-1:-1:-1::0;1067:9:2::1;:14:::0;;-1:-1:-1;;1067:14:2::1;1079:2;1067:14;::::0;;693:57:4;;;;737:5;722:20;;-1:-1:-1;;722:20:4;;;693:57;428:327;887:201:2;;80:113:6;;389:59:1;443:12:4;;;;;;;;:31;;-1:-1:-1;1261:4:4;1307:17;1339:7;459:15;443:47;;;-1:-1:-1;479:11:4;;;;478:12;443:47;435:106;;;;-1:-1:-1;;;435:106:4;;216:2:7;435:106:4;;;198:21:7;255:2;235:18;;;228:30;-1:-1:-1;;;;;;;;;;;274:18:7;;;267:62;-1:-1:-1;;;345:18:7;;;338:44;399:19;;435:106:4;14:410:7;435:106:4;550:19;573:12;;;;;;572:13;592:83;;;;621:12;:19;;-1:-1:-1;;649:18:4;;;;;592:83;697:14;693:57;;;737:5;722:20;;-1:-1:-1;;722:20:4;;;693:57;428:327;389:59:1:o;429:127:7:-;490:10;485:3;481:20;478:1;471:31;521:4;518:1;511:15;545:4;542:1;535:15;561:380;640:1;636:12;;;;683;;;704:61;;758:4;750:6;746:17;736:27;;704:61;811:2;803:6;800:14;780:18;777:38;774:161;;857:10;852:3;848:20;845:1;838:31;892:4;889:1;882:15;920:4;917:1;910:15;774:161;;561:380;;;:::o;1072:545::-;1174:2;1169:3;1166:11;1163:448;;;1210:1;1235:5;1231:2;1224:17;1280:4;1276:2;1266:19;1350:2;1338:10;1334:19;1331:1;1327:27;1321:4;1317:38;1386:4;1374:10;1371:20;1368:47;;;-1:-1:-1;1409:4:7;1368:47;1464:2;1459:3;1455:12;1452:1;1448:20;1442:4;1438:31;1428:41;;1519:82;1537:2;1530:5;1527:13;1519:82;;;1582:17;;;1563:1;1552:13;1519:82;;;1523:3;;;1163:448;1072:545;;;:::o;1793:1352::-;1913:10;;-1:-1:-1;;;;;1935:30:7;;1932:56;;;1968:18;;:::i;:::-;1997:97;2087:6;2047:38;2079:4;2073:11;2047:38;:::i;:::-;2041:4;1997:97;:::i;:::-;2149:4;;2213:2;2202:14;;2230:1;2225:663;;;;2932:1;2949:6;2946:89;;;-1:-1:-1;3001:19:7;;;2995:26;2946:89;-1:-1:-1;;1750:1:7;1746:11;;;1742:24;1738:29;1728:40;1774:1;1770:11;;;1725:57;3048:81;;2195:944;;2225:663;1019:1;1012:14;;;1056:4;1043:18;;-1:-1:-1;;2261:20:7;;;2379:236;2393:7;2390:1;2387:14;2379:236;;;2482:19;;;2476:26;2461:42;;2574:27;;;;2542:1;2530:14;;;;2409:19;;2379:236;;;2383:3;2643:6;2634:7;2631:19;2628:201;;;2704:19;;;2698:26;-1:-1:-1;;2787:1:7;2783:14;;;2799:3;2779:24;2775:37;2771:42;2756:58;2741:74;;2628:201;-1:-1:-1;;;;;2875:1:7;2859:14;;;2855:22;2842:36;;-1:-1:-1;1793:1352:7:o;:::-;80:113:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_601": {
									"entryPoint": 895,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_623": {
									"entryPoint": null,
									"id": 623,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_94": {
									"entryPoint": null,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_445": {
									"entryPoint": 1193,
									"id": 445,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_807": {
									"entryPoint": 1641,
									"id": 807,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_263": {
									"entryPoint": null,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_284": {
									"entryPoint": 606,
									"id": 284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_379": {
									"entryPoint": 803,
									"id": 379,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_350": {
									"entryPoint": 734,
									"id": 350,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_182": {
									"entryPoint": 460,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_852": {
									"entryPoint": 1583,
									"id": 852,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_191": {
									"entryPoint": 788,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_210": {
									"entryPoint": null,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_322": {
									"entryPoint": 629,
									"id": 322,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_245": {
									"entryPoint": 882,
									"id": 245,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2087,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5107:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:548:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:7"
															},
															"nodeType": "YulIf",
															"src": "664:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:7",
														"type": ""
													}
												],
												"src": "567:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:7"
															},
															"nodeType": "YulIf",
															"src": "842:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:7",
														"type": ""
													}
												],
												"src": "745:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:7",
														"type": ""
													}
												],
												"src": "1004:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:7",
														"type": ""
													}
												],
												"src": "1196:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:7"
															},
															"nodeType": "YulIf",
															"src": "1492:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:7",
														"type": ""
													}
												],
												"src": "1378:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:7",
														"type": ""
													}
												],
												"src": "1711:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:7"
															},
															"nodeType": "YulIf",
															"src": "1980:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:7",
														"type": ""
													}
												],
												"src": "1900:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:7"
															},
															"nodeType": "YulIf",
															"src": "2188:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:7",
														"type": ""
													}
												],
												"src": "2091:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:7"
															},
															"nodeType": "YulIf",
															"src": "2499:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:7"
															},
															"nodeType": "YulIf",
															"src": "2569:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:7",
														"type": ""
													}
												],
												"src": "2356:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2915:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2925:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2925:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2925:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2966:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2962:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2962:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3021:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3076:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3087:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3072:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3092:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3108:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3120:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3131:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3116:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3108:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2892:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2906:4:7",
														"type": ""
													}
												],
												"src": "2741:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3320:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3337:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3348:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3330:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3330:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3371:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3382:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3360:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3410:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3421:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3406:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3426:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3399:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3399:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3481:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3492:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3477:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3477:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3497:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3470:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3470:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3470:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3511:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3523:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3534:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3519:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3519:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3511:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3297:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3311:4:7",
														"type": ""
													}
												],
												"src": "3146:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3723:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3740:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3751:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3733:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3733:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3733:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3774:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3785:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3790:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3763:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3763:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3813:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3824:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3829:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3802:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3802:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3884:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3895:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3880:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3880:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3900:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3873:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3873:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3917:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3929:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3925:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3925:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3917:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3700:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3714:4:7",
														"type": ""
													}
												],
												"src": "3549:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4129:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4146:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4157:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4139:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4139:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4139:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4180:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4191:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4176:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4196:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4169:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4169:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4169:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4219:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4230:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4215:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4215:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4235:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4208:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4290:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4301:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4306:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4279:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4279:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4279:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4321:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4333:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4344:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4329:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4329:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4321:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4106:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4120:4:7",
														"type": ""
													}
												],
												"src": "3955:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4391:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4408:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4415:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4420:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4411:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4411:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4401:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4401:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4451:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4441:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4441:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4441:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4472:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4465:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4359:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4540:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4550:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4562:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4565:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4550:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4591:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4593:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4593:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4593:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4582:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4588:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4579:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4579:11:7"
															},
															"nodeType": "YulIf",
															"src": "4576:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4522:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4525:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4531:4:7",
														"type": ""
													}
												],
												"src": "4491:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4672:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4682:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4693:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4696:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4689:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4689:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4682:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4721:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4723:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4723:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4723:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4713:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4716:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4710:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4710:10:7"
															},
															"nodeType": "YulIf",
															"src": "4707:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4655:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4658:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4664:3:7",
														"type": ""
													}
												],
												"src": "4624:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4928:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4945:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4956:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4938:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4938:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4979:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4990:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4975:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4995:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4968:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5018:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5029:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5014:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5014:18:7"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5034:29:7",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5007:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5007:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5007:57:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5073:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5085:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5096:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5081:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5073:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4905:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4919:4:7",
														"type": ""
													}
												],
												"src": "4754:351:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b4114610165578063a457c2d71461016d578063a9059cbb14610180578063dd62ed3e1461019357600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101cc565b6040516100c391906106cf565b60405180910390f35b6100df6100da366004610739565b61025e565b60405190151581526020016100c3565b6067545b6040519081526020016100c3565b6100df61010f366004610763565b610275565b606a5460405160ff90911681526020016100c3565b6100df610137366004610739565b6102de565b6100f361014a36600461079f565b6001600160a01b031660009081526065602052604090205490565b6100b6610314565b6100df61017b366004610739565b610323565b6100df61018e366004610739565b610372565b6100f36101a13660046107ba565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6060606880546101db906107ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610207906107ed565b80156102545780601f1061022957610100808354040283529160200191610254565b820191906000526020600020905b81548152906001019060200180831161023757829003601f168201915b5050505050905090565b600061026b33848461037f565b5060015b92915050565b60006102828484846104a9565b6102d484336102cf8560405180606001604052806028815260200161088a602891396001600160a01b038a166000908152606660209081526040808320338452909152902054919061062f565b61037f565b5060019392505050565b3360008181526066602090815260408083206001600160a01b0387168452909152812054909161026b9185906102cf9086610669565b6060606980546101db906107ed565b600061026b33846102cf856040518060600160405280602581526020016108b2602591393360009081526066602090815260408083206001600160a01b038d168452909152902054919061062f565b600061026b3384846104a9565b6001600160a01b0383166103e65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166104475760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661050d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b03821661056f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6105ac81604051806060016040528060268152602001610864602691396001600160a01b038616600090815260656020526040902054919061062f565b6001600160a01b0380851660009081526065602052604080822093909355908416815220546105db9082610669565b6001600160a01b0380841660008181526065602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061049c9085815260200190565b600081848411156106535760405162461bcd60e51b81526004016103dd91906106cf565b506000610660848661083d565b95945050505050565b6000806106768385610850565b9050838110156106c85760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103dd565b9392505050565b600060208083528351808285015260005b818110156106fc578581018301518582016040015282016106e0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461073457600080fd5b919050565b6000806040838503121561074c57600080fd5b6107558361071d565b946020939093013593505050565b60008060006060848603121561077857600080fd5b6107818461071d565b925061078f6020850161071d565b9150604084013590509250925092565b6000602082840312156107b157600080fd5b6106c88261071d565b600080604083850312156107cd57600080fd5b6107d68361071d565b91506107e46020840161071d565b90509250929050565b600181811c9082168061080157607f821691505b60208210810361082157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561026f5761026f610827565b8082018082111561026f5761026f61082756fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122065e368b1cd24e42148eaf117cc272f0190910abebfe08831ec36517a992b757564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x67 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x314 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x68 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x207 SWAP1 PUSH2 0x7ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x254 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x229 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x254 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x237 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 DUP5 PUSH2 0x37F JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282 DUP5 DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x2D4 DUP5 CALLER PUSH2 0x2CF DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x88A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x26B SWAP2 DUP6 SWAP1 PUSH2 0x2CF SWAP1 DUP7 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x69 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 PUSH2 0x2CF DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B2 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B CALLER DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x5AC DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x864 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5DB SWAP1 DUP3 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x49C SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x6CF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x660 DUP5 DUP7 PUSH2 0x83D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x676 DUP4 DUP6 PUSH2 0x850 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6FC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x755 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x781 DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP3 POP PUSH2 0x78F PUSH1 0x20 DUP6 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C8 DUP3 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D6 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH2 0x7E4 PUSH1 0x20 DUP5 ADD PUSH2 0x71D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x801 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x821 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x26F JUMPI PUSH2 0x26F PUSH2 0x827 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26F JUMPI PUSH2 0x26F PUSH2 0x827 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122065E3 PUSH9 0xB1CD24E42148EAF117 0xCC 0x27 0x2F ADD SWAP1 SWAP2 EXP 0xBE 0xBF 0xE0 DUP9 BALANCE 0xEC CALLDATASIZE MLOAD PUSH27 0x992B757564736F6C63430008110033000000000000000000000000 ",
							"sourceMap": "80:113:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:81:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3269:202;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:7;;1162:22;1144:41;;1132:2;1117:18;3269:202:2;1004:187:7;2196:98:2;2275:12;;2196:98;;;1342:25:7;;;1330:2;1315:18;2196:98:2;1196:177:7;3931:439:2;;;;;;:::i;:::-;;:::i;2055:81::-;2120:9;;2055:81;;2120:9;;;;1853:36:7;;1841:2;1826:18;2055:81:2;1711:184:7;4765:289:2;;;;;;:::i;:::-;;:::i;2352:117::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2444:18:2;2418:7;2444:18;;;:9;:18;;;;;;;2352:117;1347:85;;;:::i;5541:386::-;;;;;;:::i;:::-;;:::i;2672:208::-;;;;;;:::i;:::-;;:::i;2938:193::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3097:18:2;;;3067:7;3097:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2938:193;1153:81;1190:13;1222:5;1215:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:81;:::o;3269:202::-;3384:4;3404:39;549:10:1;3427:7:2;3436:6;3404:8;:39::i;:::-;-1:-1:-1;3460:4:2;3269:202;;;;;:::o;3931:439::-;4067:4;4083:36;4093:6;4101:9;4112:6;4083:9;:36::i;:::-;4129:213;4151:6;549:10:1;4197:135:2;4252:6;4197:135;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4197:19:2;;;;;;:11;:19;;;;;;;;549:10:1;4197:33:2;;;;;;;;;;:37;:135::i;:::-;4129:8;:213::i;:::-;-1:-1:-1;4359:4:2;3931:439;;;;;:::o;4765:289::-;549:10:1;4877:4:2;4966:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4966:34:2;;;;;;;;;;4877:4;;4897:129;;4945:7;;4966:50;;5005:10;4966:38;:50::i;1347:85::-;1386:13;1418:7;1411:14;;;;;:::i;5541:386::-;5658:4;5678:221;549:10:1;5726:7:2;5747:142;5803:15;5747:142;;;;;;;;;;;;;;;;;549:10:1;5747:25:2;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5747:34:2;;;;;;;;;;;;:38;:142::i;2672:208::-;2790:4;2810:42;549:10:1;2834:9:2;2845:6;2810:9;:42::i;8823:370::-;-1:-1:-1;;;;;8954:19:2;;8946:68;;;;-1:-1:-1;;;8946:68:2;;2943:2:7;8946:68:2;;;2925:21:7;2982:2;2962:18;;;2955:30;3021:34;3001:18;;;2994:62;-1:-1:-1;;;3072:18:7;;;3065:34;3116:19;;8946:68:2;;;;;;;;;-1:-1:-1;;;;;9032:21:2;;9024:68;;;;-1:-1:-1;;;9024:68:2;;3348:2:7;9024:68:2;;;3330:21:7;3387:2;3367:18;;;3360:30;3426:34;3406:18;;;3399:62;-1:-1:-1;;;3477:18:7;;;3470:32;3519:19;;9024:68:2;3146:398:7;9024:68:2;-1:-1:-1;;;;;9103:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9154:32;;1342:25:7;;;9154:32:2;;1315:18:7;9154:32:2;;;;;;;;8823:370;;;:::o;6401:594::-;-1:-1:-1;;;;;6536:20:2;;6528:70;;;;-1:-1:-1;;;6528:70:2;;3751:2:7;6528:70:2;;;3733:21:7;3790:2;3770:18;;;3763:30;3829:34;3809:18;;;3802:62;-1:-1:-1;;;3880:18:7;;;3873:35;3925:19;;6528:70:2;3549:401:7;6528:70:2;-1:-1:-1;;;;;6616:23:2;;6608:71;;;;-1:-1:-1;;;6608:71:2;;4157:2:7;6608:71:2;;;4139:21:7;4196:2;4176:18;;;4169:30;4235:34;4215:18;;;4208:62;-1:-1:-1;;;4286:18:7;;;4279:33;4329:19;;6608:71:2;3955:399:7;6608:71:2;6768:105;6803:6;6768:105;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6768:17:2;;;;;;:9;:17;;;;;;;:105;:21;:105::i;:::-;-1:-1:-1;;;;;6748:17:2;;;;;;;:9;:17;;;;;;:125;;;;6906:20;;;;;;;:32;;6931:6;6906:24;:32::i;:::-;-1:-1:-1;;;;;6883:20:2;;;;;;;:9;:20;;;;;;;:55;;;;6953:35;;;;;;;;;;6981:6;1342:25:7;;1330:2;1315:18;;1196:177;1202:192:5;1288:7;1324:12;1316:6;;;;1308:29;;;;-1:-1:-1;;;1308:29:5;;;;;;;;:::i;:::-;-1:-1:-1;1348:9:5;1360:5;1364:1;1360;:5;:::i;:::-;1348:17;1202:192;-1:-1:-1;;;;;1202:192:5:o;315:181::-;373:7;;405:5;409:1;405;:5;:::i;:::-;393:17;;434:1;429;:6;;421:46;;;;-1:-1:-1;;;421:46:5;;4956:2:7;421:46:5;;;4938:21:7;4995:2;4975:18;;;4968:30;5034:29;5014:18;;;5007:57;5081:18;;421:46:5;4754:351:7;421:46:5;487:1;315:181;-1:-1:-1;;;315:181:5:o;14:548:7:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:7;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:7:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;4359:127::-;4420:10;4415:3;4411:20;4408:1;4401:31;4451:4;4448:1;4441:15;4475:4;4472:1;4465:15;4491:128;4558:9;;;4579:11;;;4576:37;;;4593:18;;:::i;4624:125::-;4689:9;;;4710:10;;;4707:36;;;4723:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "463200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24621",
								"balanceOf(address)": "2559",
								"decimals()": "2378",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 80,
									"end": 193,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 80,
									"end": 193,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 80,
									"end": 193,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 120,
									"end": 191,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 120,
									"end": 191,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 120,
									"end": 191,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 120,
									"end": 191,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 120,
									"end": 191,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 120,
									"end": 191,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 191,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 120,
									"end": 191,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 120,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 120,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 120,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2AA9A21026B7B7B73630B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5553444D31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 443,
									"end": 474,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 443,
									"end": 474,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1324,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1346,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 459,
									"end": 474,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 459,
									"end": 474,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 443,
									"end": 490,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 479,
									"end": 490,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 490,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 479,
									"end": 490,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 479,
									"end": 490,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 478,
									"end": 490,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 443,
									"end": 490,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 435,
									"end": 541,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 7,
									"value": "2E"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "DC12AE8220C8DE7014142805A332AE4E2E45DFFFA340E9D79B20C86951735405"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 267,
									"end": 329,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "195B881A5B9A5D1A585B1A5E9959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "92"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 338,
									"end": 382,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 399,
									"end": 418,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 399,
									"end": 418,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 435,
									"end": 541,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 550,
									"end": 569,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 572,
									"end": 585,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 592,
									"end": 675,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 621,
									"end": 633,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 621,
									"end": 640,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 649,
									"end": 667,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "PUSH",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 649,
									"end": 667,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 592,
									"end": 675,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 973,
									"end": 999,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 973,
									"end": 997,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 973,
									"end": 999,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 973,
									"end": 999,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 973,
									"end": 999,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1009,
									"end": 1014,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 1009,
									"end": 1026,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1017,
									"end": 1026,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1009,
									"end": 1014,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1009,
									"end": 1026,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1009,
									"end": 1026,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1009,
									"end": 1026,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1009,
									"end": 1026,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1036,
									"end": 1043,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 1036,
									"end": 1057,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1057,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1036,
									"end": 1057,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1057,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1036,
									"end": 1057,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1067,
									"end": 1076,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "6A"
								},
								{
									"begin": 1067,
									"end": 1081,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1067,
									"end": 1081,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1067,
									"end": 1081,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1079,
									"end": 1081,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1067,
									"end": 1081,
									"modifierDepth": 1,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1067,
									"end": 1081,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1067,
									"end": 1081,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 693,
									"end": 750,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 693,
									"end": 750,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 737,
									"end": 742,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 742,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 742,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 693,
									"end": 750,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 428,
									"end": 755,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 887,
									"end": 1088,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 80,
									"end": 193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 80,
									"end": 193,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 389,
									"end": 448,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 389,
									"end": 448,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 443,
									"end": 455,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 443,
									"end": 474,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1324,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1346,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 459,
									"end": 474,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 459,
									"end": 474,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 443,
									"end": 490,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 479,
									"end": 490,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 490,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 479,
									"end": 490,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 479,
									"end": 490,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 478,
									"end": 490,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 443,
									"end": 490,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 443,
									"end": 490,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 435,
									"end": 541,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 435,
									"end": 541,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 7,
									"value": "2E"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "DC12AE8220C8DE7014142805A332AE4E2E45DFFFA340E9D79B20C86951735405"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 267,
									"end": 329,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "195B881A5B9A5D1A585B1A5E9959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "92"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 338,
									"end": 382,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 399,
									"end": 418,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 399,
									"end": 418,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 435,
									"end": 541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 424,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 435,
									"end": 541,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 435,
									"end": 541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 550,
									"end": 569,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 573,
									"end": 585,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 573,
									"end": 585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 572,
									"end": 585,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 592,
									"end": 675,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 621,
									"end": 633,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 621,
									"end": 640,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 649,
									"end": 667,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "PUSH",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 649,
									"end": 667,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 649,
									"end": 667,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 592,
									"end": 675,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 592,
									"end": 675,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 697,
									"end": 711,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 693,
									"end": 750,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 737,
									"end": 742,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 742,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 742,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 742,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 693,
									"end": 750,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 693,
									"end": 750,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 428,
									"end": 755,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 389,
									"end": 448,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 429,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 429,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 500,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 485,
									"end": 488,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 481,
									"end": 501,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 478,
									"end": 479,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 502,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 521,
									"end": 525,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 518,
									"end": 519,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 511,
									"end": 526,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 545,
									"end": 549,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 542,
									"end": 543,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 535,
									"end": 550,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 561,
									"end": 941,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 561,
									"end": 941,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 640,
									"end": 641,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 636,
									"end": 648,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 636,
									"end": 648,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 636,
									"end": 648,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 636,
									"end": 648,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 683,
									"end": 695,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 683,
									"end": 695,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 683,
									"end": 695,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 704,
									"end": 765,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 704,
									"end": 765,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 758,
									"end": 762,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 750,
									"end": 756,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 746,
									"end": 763,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 736,
									"end": 763,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 736,
									"end": 763,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 704,
									"end": 765,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 704,
									"end": 765,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 811,
									"end": 813,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 803,
									"end": 809,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 800,
									"end": 814,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 780,
									"end": 798,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 777,
									"end": 815,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 774,
									"end": 935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 774,
									"end": 935,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 857,
									"end": 867,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 852,
									"end": 855,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 848,
									"end": 868,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 845,
									"end": 846,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 838,
									"end": 869,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 892,
									"end": 896,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 889,
									"end": 890,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 882,
									"end": 897,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 920,
									"end": 924,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 917,
									"end": 918,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 910,
									"end": 925,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 774,
									"end": 935,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 774,
									"end": 935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 774,
									"end": 935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 561,
									"end": 941,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 561,
									"end": 941,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 561,
									"end": 941,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 561,
									"end": 941,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1617,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1072,
									"end": 1617,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1169,
									"end": 1172,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1166,
									"end": 1177,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1163,
									"end": 1611,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1163,
									"end": 1611,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1163,
									"end": 1611,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1210,
									"end": 1211,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 1240,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1280,
									"end": 1284,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1276,
									"end": 1278,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1266,
									"end": 1285,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1352,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1338,
									"end": 1348,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 1353,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1327,
									"end": 1354,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 1325,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1317,
									"end": 1355,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1390,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1374,
									"end": 1384,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1371,
									"end": 1391,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1415,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1368,
									"end": 1415,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1409,
									"end": 1413,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1415,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1368,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1464,
									"end": 1466,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1459,
									"end": 1462,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1467,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1453,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1448,
									"end": 1468,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1442,
									"end": 1446,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1469,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1469,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1469,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1601,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1519,
									"end": 1601,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1537,
									"end": 1539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1530,
									"end": 1535,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1527,
									"end": 1540,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1601,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1601,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1519,
									"end": 1601,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1599,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1599,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1599,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1564,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1565,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1601,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1519,
									"end": 1601,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1601,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1519,
									"end": 1601,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1523,
									"end": 1526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1523,
									"end": 1526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1523,
									"end": 1526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1163,
									"end": 1611,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1163,
									"end": 1611,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1617,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1617,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1617,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1617,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 3145,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1793,
									"end": 3145,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1913,
									"end": 1923,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1913,
									"end": 1923,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1935,
									"end": 1965,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1935,
									"end": 1965,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1932,
									"end": 1988,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1932,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1932,
									"end": 1988,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 1986,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1968,
									"end": 1986,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1968,
									"end": 1986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 1986,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1968,
									"end": 1986,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2087,
									"end": 2093,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2047,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2079,
									"end": 2083,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2084,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2047,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2047,
									"end": 2085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2047,
									"end": 2085,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2047,
									"end": 2085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2045,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1997,
									"end": 2094,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2094,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1997,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2153,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2149,
									"end": 2153,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2215,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2202,
									"end": 2216,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2202,
									"end": 2216,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2230,
									"end": 2231,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2225,
									"end": 2888,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2225,
									"end": 2888,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2225,
									"end": 2888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2225,
									"end": 2888,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2932,
									"end": 2933,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2946,
									"end": 3035,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2946,
									"end": 3035,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2946,
									"end": 3035,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3001,
									"end": 3020,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3001,
									"end": 3020,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3001,
									"end": 3020,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2995,
									"end": 3021,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2946,
									"end": 3035,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2946,
									"end": 3035,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1750,
									"end": 1751,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1746,
									"end": 1757,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1757,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1757,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1742,
									"end": 1766,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1738,
									"end": 1767,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1728,
									"end": 1768,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1774,
									"end": 1775,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1770,
									"end": 1781,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1770,
									"end": 1781,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1770,
									"end": 1781,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1782,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3048,
									"end": 3129,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3048,
									"end": 3129,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 3139,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2195,
									"end": 3139,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2225,
									"end": 2888,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2225,
									"end": 2888,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1019,
									"end": 1020,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1012,
									"end": 1026,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1026,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1026,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1060,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1043,
									"end": 1061,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1043,
									"end": 1061,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2261,
									"end": 2281,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2261,
									"end": 2281,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2261,
									"end": 2281,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2379,
									"end": 2615,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2379,
									"end": 2615,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2393,
									"end": 2400,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2390,
									"end": 2391,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2387,
									"end": 2401,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2379,
									"end": 2615,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2379,
									"end": 2615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2379,
									"end": 2615,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2482,
									"end": 2501,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2482,
									"end": 2501,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2482,
									"end": 2501,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2476,
									"end": 2502,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2503,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2503,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2574,
									"end": 2601,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2574,
									"end": 2601,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2574,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2574,
									"end": 2601,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2542,
									"end": 2543,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2530,
									"end": 2544,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2530,
									"end": 2544,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2530,
									"end": 2544,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2530,
									"end": 2544,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2428,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2428,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2379,
									"end": 2615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2379,
									"end": 2615,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2379,
									"end": 2615,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2379,
									"end": 2615,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2383,
									"end": 2386,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2643,
									"end": 2649,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2634,
									"end": 2641,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2631,
									"end": 2650,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2628,
									"end": 2829,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2628,
									"end": 2829,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2628,
									"end": 2829,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2704,
									"end": 2723,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2704,
									"end": 2723,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2704,
									"end": 2723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2698,
									"end": 2724,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2787,
									"end": 2788,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2783,
									"end": 2797,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2783,
									"end": 2797,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2783,
									"end": 2797,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2799,
									"end": 2802,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 2779,
									"end": 2803,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 2812,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2771,
									"end": 2813,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2756,
									"end": 2814,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2815,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2815,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2628,
									"end": 2829,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2628,
									"end": 2829,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2875,
									"end": 2876,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2859,
									"end": 2873,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2859,
									"end": 2873,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2859,
									"end": 2873,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2842,
									"end": 2878,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2842,
									"end": 2878,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1793,
									"end": 3145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 3145,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1793,
									"end": 3145,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 80,
									"end": 193,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80,
									"end": 193,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 193,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80,
									"end": 193,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 193,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 80,
									"end": 193,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 193,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065e368b1cd24e42148eaf117cc272f0190910abebfe08831ec36517a992b757564736f6c63430008110033",
									".code": [
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "A457C2D7"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 80,
											"end": 193,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1153,
											"end": 1234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1153,
											"end": 1234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3269,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3269,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3931,
											"end": 4370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3931,
											"end": 4370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2136,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2055,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "6A"
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4765,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4765,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2352,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2469,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1347,
											"end": 1432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5541,
											"end": 5927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5541,
											"end": 5927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2672,
											"end": 2880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2672,
											"end": 2880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2938,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3067,
											"end": 3074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3108,
											"name": "PUSH",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3131,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1215,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1215,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3427,
											"end": 3434,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3404,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3443,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3404,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3460,
											"end": 3464,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4101,
											"end": 4110,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4083,
											"end": 4119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4083,
											"end": 4119,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4083,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4252,
											"end": 4258,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH data",
											"source": 2,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4208,
											"name": "PUSH",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4197,
											"end": 4332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4197,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4129,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4342,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4129,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 4370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4765,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4977,
											"name": "PUSH",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4991,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 4881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 4881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4897,
											"end": 5026,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4945,
											"end": 4952,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4945,
											"end": 4952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4966,
											"end": 5016,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5005,
											"end": 5015,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4966,
											"end": 5016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1347,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1399,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1418,
											"end": 1425,
											"name": "PUSH",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1411,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5541,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5733,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH data",
											"source": 2,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5889,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5747,
											"end": 5889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2672,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2851,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2810,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 9193,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 8823,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8954,
											"end": 8973,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8954,
											"end": 8973,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 2946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2984,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3135,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3116,
											"end": 3135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9032,
											"end": 9053,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9032,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3350,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3351,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3367,
											"end": 3385,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3367,
											"end": 3385,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3367,
											"end": 3385,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3460,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3461,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3495,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3477,
											"end": 3495,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3495,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3502,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3146,
											"end": 3544,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 9024,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9114,
											"name": "PUSH",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9130,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9139,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9139,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 9193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 9193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 9193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 9193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6995,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6401,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6536,
											"end": 6556,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6556,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3753,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3792,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3863,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3908,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3944,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3925,
											"end": 3944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3549,
											"end": 3950,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6528,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6616,
											"end": 6639,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6616,
											"end": 6639,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4157,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4176,
											"end": 4194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4176,
											"end": 4194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4169,
											"end": 4199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4269,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4270,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4312,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4348,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4329,
											"end": 4348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3955,
											"end": 4354,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6608,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6803,
											"end": 6809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH data",
											"source": 2,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6768,
											"end": 6873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6768,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6757,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6765,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6873,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6873,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6873,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6926,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6906,
											"end": 6938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6892,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6903,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6938,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6938,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6938,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6981,
											"end": 6987,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1394,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1202,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1308,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1308,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1360,
											"end": 1365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1365,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1394,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 315,
											"end": 496,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 315,
											"end": 496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 405,
											"end": 406,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 405,
											"end": 410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 405,
											"end": 410,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 393,
											"end": 410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 393,
											"end": 410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 434,
											"end": 435,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 429,
											"end": 430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 435,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 429,
											"end": 435,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 421,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 421,
											"end": 467,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 421,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 421,
											"end": 467,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4958,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 421,
											"end": 467,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 4959,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 4997,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 4998,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5063,
											"name": "PUSH",
											"source": 7,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 5014,
											"end": 5032,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5014,
											"end": 5032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5007,
											"end": 5064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5099,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5081,
											"end": 5099,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 421,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4754,
											"end": 5105,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 421,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 421,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 488,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 315,
											"end": 496,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 315,
											"end": 496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4359,
											"end": 4486,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4359,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4420,
											"end": 4430,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4415,
											"end": 4418,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4455,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4448,
											"end": 4449,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4441,
											"end": 4456,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4475,
											"end": 4479,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4472,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4619,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4491,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4576,
											"end": 4613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4576,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4576,
											"end": 4613,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4593,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4593,
											"end": 4611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 4749,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4624,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4698,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4710,
											"end": 4720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4710,
											"end": 4720,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4710,
											"end": 4720,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4743,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4707,
											"end": 4743,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4723,
											"end": 4741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									],
									".data": {
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								},
								"DC12AE8220C8DE7014142805A332AE4E2E45DFFFA340E9D79B20C86951735405": "436f6e747261637420696e7374616e63652068617320616c7265616479206265"
							},
							"sourceList": [
								"contracts/Address.sol",
								"contracts/Context.sol",
								"contracts/ERC20.sol",
								"contracts/IERC20.sol",
								"contracts/Initializable.sol",
								"contracts/SafeMath.sol",
								"contracts/USDM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDM.sol\":\"USDM\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xf0079f7d951de77767005886e2fadacaf9192688e06090325f004a4346d49383\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bece5b11a4e62e1846173386ecf480910a10af6b019a86ab2a59e1b660aef2f8\",\"dweb:/ipfs/QmbstfaSgJ2Q46YcFudkZ5SFUAtHXoiCxDiZnN8FWXzHqX\"]},\"contracts/Context.sol\":{\"keccak256\":\"0x406fa0cfc58f5baf9f8a910d28bfb8ac4615d29369df677c833cfe511a293480\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3766fa5419c9e50c0ee79841b5d3404910851005c2a41c86bb2879beb291d147\",\"dweb:/ipfs/Qmb1bvvnFPijJD1oocq34eK3yM8RGGU8GzhgRxAzAXY4a4\"]},\"contracts/ERC20.sol\":{\"keccak256\":\"0x8165d16059d99a3b514ee131900d7a2e7caf0d05af7ef1a06a2680e2a522ff16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db8ae4347b67aeb309ee9fe25c6d1f051d5be1d6f0fecc6e192c57071756ceba\",\"dweb:/ipfs/QmVkwu5KNXyozFywMgXA38hzmbAyqbokBwjMCDNf3pVdks\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x4439427b57900ab539f5045ddaf003705222f59471aa0d6c8a068778672605ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e093160c78c1c21cdf32cc7099aa2ff08f1c2658107a3870497f1a2311d26f82\",\"dweb:/ipfs/QmXSRBTqm8UrBADZEPmPBZ37YPuM77kpgQyPYMvZTVQdNX\"]},\"contracts/Initializable.sol\":{\"keccak256\":\"0x7baf0ed980d789497ecea609b7459e3c7c8045772aa3805bab4e9730cf2c1ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40ba8fc2453da882540d1a31a02c3ef9796e1a8bbfaa349d407bc6045d7efa6d\",\"dweb:/ipfs/QmVw28aviekGV9NifK2PzWrBtCxM2rbq8CLhNsrH6LYVNQ\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0xc3410fa5d48057da2b67aa8e84828bb0efd96c3ec79b3fdf1adda3752b39d9b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef432098b5ae79ceefe86d0ae8c4f2751354e6d98d22d38cf54f8c3314dee4dd\",\"dweb:/ipfs/QmQ4eR4fBSemx97LP1VabXt2bpGcPJ7g3i4r4NLs5Xa4VF\"]},\"contracts/USDM.sol\":{\"keccak256\":\"0xa4ff5422347f4625f9f75a882f657fd06f80a16b0ba7c2e08ec8002bb2572fd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2211eec7865aa777414df58357b613b40b79a81238a6468270cf513203183d87\",\"dweb:/ipfs/QmQwEHV7w3BKSjhVEHMYgpQ5iNBgVUXfX4doZJ8DYAcKnC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 710,
								"contract": "contracts/USDM.sol:USDM",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 713,
								"contract": "contracts/USDM.sol:USDM",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 778,
								"contract": "contracts/USDM.sol:USDM",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 109,
								"contract": "contracts/USDM.sol:USDM",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 133,
								"contract": "contracts/USDM.sol:USDM",
								"label": "_balances",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "contracts/USDM.sol:USDM",
								"label": "_allowances",
								"offset": 0,
								"slot": "102",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "contracts/USDM.sol:USDM",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "103",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/USDM.sol:USDM",
								"label": "_name",
								"offset": 0,
								"slot": "104",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "contracts/USDM.sol:USDM",
								"label": "_symbol",
								"offset": 0,
								"slot": "105",
								"type": "t_string_storage"
							},
							{
								"astId": 147,
								"contract": "contracts/USDM.sol:USDM",
								"label": "_decimals",
								"offset": 0,
								"slot": "106",
								"type": "t_uint8"
							},
							{
								"astId": 627,
								"contract": "contracts/USDM.sol:USDM",
								"label": "__gap",
								"offset": 0,
								"slot": "107",
								"type": "t_array(t_uint256)44_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)44_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[44]",
								"numberOfBytes": "1408"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Address.sol": {
				"ast": {
					"absolutePath": "contracts/Address.sol",
					"exportedSymbols": {
						"Address": [
							62
						]
					},
					"id": 63,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "Address",
							"nameLocation": "68:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "736:553:0",
										"statements": [
											{
												"assignments": [
													10
												],
												"declarations": [
													{
														"constant": false,
														"id": 10,
														"mutability": "mutable",
														"name": "codehash",
														"nameLocation": "1000:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "992:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 9,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "992:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"nodeType": "VariableDeclarationStatement",
												"src": "992:16:0"
											},
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "accountHash",
														"nameLocation": "1027:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "1019:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 12,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1019:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": {
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1041:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1019:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1184:36:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1186:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1210:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1198:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1186:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": false,
														"src": "1210:7:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "1186:8:0",
														"valueSize": 1
													}
												],
												"id": 16,
												"nodeType": "InlineAssembly",
												"src": "1175:45:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 17,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1238:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 18,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1250:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1238:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 20,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1265:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "307830",
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1277:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1265:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1238:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 24,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1237:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 25,
												"nodeType": "Return",
												"src": "1230:51:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "83:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "679:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "698:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "690:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "730:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:6:0"
									},
									"scope": 62,
									"src": "670:619:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "2295:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 38,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2322:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$62",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$62",
																				"typeString": "library Address"
																			}
																		],
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2314:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 36,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2314:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2314:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2328:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2314:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 41,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "2339:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2314:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2347:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2306:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "2306:73:0"
											},
											{
												"assignments": [
													47,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 47,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2476:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 60,
														"src": "2471:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 46,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2471:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 54,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2521:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 48,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "2489:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2499:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2489:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 50,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "2512:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2489:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2489:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2470:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 56,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "2543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2552:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2535:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "2535:78:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1297:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2233:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2259:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2243:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2243:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2278:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2270:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:43:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2295:0:0"
									},
									"scope": 62,
									"src": "2224:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 63,
							"src": "60:2564:0",
							"usedErrors": []
						}
					],
					"src": "33:2593:0"
				},
				"id": 0
			},
			"contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/Context.sol",
					"exportedSymbols": {
						"ContextUpgradeSafe": [
							110
						],
						"Initializable": [
							779
						]
					},
					"id": 111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 64,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "contracts/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 65,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 111,
							"sourceUnit": 780,
							"src": "56:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 66,
										"name": "Initializable",
										"nameLocations": [
											"118:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "118:13:1"
									},
									"id": 67,
									"nodeType": "InheritanceSpecifier",
									"src": "118:13:1"
								}
							],
							"canonicalName": "ContextUpgradeSafe",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 110,
							"linearizedBaseContracts": [
								110,
								779
							],
							"name": "ContextUpgradeSafe",
							"nameLocation": "96:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "340:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 72,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "350:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "350:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "350:26:1"
											}
										]
									},
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 70,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 69,
												"name": "initializer",
												"nameLocations": [
													"328:11:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 752,
												"src": "328:11:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "328:11:1"
										}
									],
									"name": "__Context_init",
									"nameLocation": "302:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:0:1"
									},
									"scope": 110,
									"src": "293:90:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "446:2:1",
										"statements": []
									},
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 79,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 78,
												"name": "initializer",
												"nameLocations": [
													"434:11:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 752,
												"src": "434:11:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "434:11:1"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "398:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "422:2:1"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:0:1"
									},
									"scope": 110,
									"src": "389:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "524:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 89,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "549:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "553:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "549:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "541:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 87,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "541:8:1",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "541:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 86,
												"id": 92,
												"nodeType": "Return",
												"src": "534:26:1"
											}
										]
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "463:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "507:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "507:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "506:17:1"
									},
									"scope": 110,
									"src": "454:113:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "638:165:1",
										"statements": [
											{
												"expression": {
													"id": 99,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "648:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ContextUpgradeSafe_$110",
														"typeString": "contract ContextUpgradeSafe"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "648:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "788:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "792:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "788:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 98,
												"id": 103,
												"nodeType": "Return",
												"src": "781:15:1"
											}
										]
									},
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "582:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:2:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "624:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 96,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "624:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:14:1"
									},
									"scope": 110,
									"src": "573:230:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 109,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "829:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 110,
									"src": "809:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 106,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "809:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 108,
										"length": {
											"hexValue": "3530",
											"id": 107,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "817:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "809:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 111,
							"src": "87:750:1",
							"usedErrors": []
						}
					],
					"src": "32:806:1"
				},
				"id": 1
			},
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"Address": [
							62
						],
						"ContextUpgradeSafe": [
							110
						],
						"ERC20UpgradeSafe": [
							628
						],
						"IERC20": [
							705
						],
						"Initializable": [
							779
						],
						"SafeMath": [
							974
						]
					},
					"id": 629,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 112,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 113,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 629,
							"sourceUnit": 111,
							"src": "57:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 629,
							"sourceUnit": 706,
							"src": "81:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 629,
							"sourceUnit": 975,
							"src": "104:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Address.sol",
							"file": "./Address.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 629,
							"sourceUnit": 63,
							"src": "129:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 629,
							"sourceUnit": 780,
							"src": "153:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 118,
										"name": "Initializable",
										"nameLocations": [
											"213:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "213:13:2"
									},
									"id": 119,
									"nodeType": "InheritanceSpecifier",
									"src": "213:13:2"
								},
								{
									"baseName": {
										"id": 120,
										"name": "ContextUpgradeSafe",
										"nameLocations": [
											"228:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 110,
										"src": "228:18:2"
									},
									"id": 121,
									"nodeType": "InheritanceSpecifier",
									"src": "228:18:2"
								},
								{
									"baseName": {
										"id": 122,
										"name": "IERC20",
										"nameLocations": [
											"248:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 705,
										"src": "248:6:2"
									},
									"id": 123,
									"nodeType": "InheritanceSpecifier",
									"src": "248:6:2"
								}
							],
							"canonicalName": "ERC20UpgradeSafe",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 628,
							"linearizedBaseContracts": [
								628,
								705,
								110,
								779
							],
							"name": "ERC20UpgradeSafe",
							"nameLocation": "193:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 126,
									"libraryName": {
										"id": 124,
										"name": "SafeMath",
										"nameLocations": [
											"267:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 974,
										"src": "267:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "261:27:2",
									"typeName": {
										"id": 125,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "280:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 129,
									"libraryName": {
										"id": 127,
										"name": "Address",
										"nameLocations": [
											"299:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 62,
										"src": "299:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "293:26:2",
									"typeName": {
										"id": 128,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "311:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "361:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "325:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 132,
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "344:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "433:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "377:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 138,
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "385:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "377:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 137,
											"keyType": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "404:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "396:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "415:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "467:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "451:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "501:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "486:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 142,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "486:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "527:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "512:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 144,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "512:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 147,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "554:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "540:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 146,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "540:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "963:125:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "973:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "973:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "973:26:2"
											},
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1009:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1017:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1009:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "1009:17:2"
											},
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1036:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 165,
														"name": "tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "1046:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1036:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "1036:21:2"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 168,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1067:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1079:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "1067:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1067:14:2"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "570:311:2",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 173,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"id": 155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "initializer",
												"nameLocations": [
													"951:11:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 752,
												"src": "951:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "951:11:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "tokenName",
												"nameLocation": "913:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "899:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "899:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "tokenSymbol",
												"nameLocation": "938:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "924:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "924:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:52:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "963:0:2"
									},
									"scope": 628,
									"src": "887:201:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1205:29:2",
										"statements": [
											{
												"expression": {
													"id": 179,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "1222:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "1215:12:2"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "1094:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1162:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:2:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1190:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1190:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:15:2"
									},
									"scope": 628,
									"src": "1153:81:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1401:31:2",
										"statements": [
											{
												"expression": {
													"id": 188,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "1418:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 187,
												"id": 189,
												"nodeType": "Return",
												"src": "1411:14:2"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1240:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1356:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1362:2:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1386:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1386:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:2"
									},
									"scope": 628,
									"src": "1347:85:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2103:33:2",
										"statements": [
											{
												"expression": {
													"id": 197,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 147,
													"src": "2120:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 196,
												"id": 198,
												"nodeType": "Return",
												"src": "2113:16:2"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1438:612:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2064:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:2:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2096:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 194,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2096:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:7:2"
									},
									"scope": 628,
									"src": "2055:81:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										636
									],
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2258:36:2",
										"statements": [
											{
												"expression": {
													"id": 207,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "2275:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 208,
												"nodeType": "Return",
												"src": "2268:19:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2142:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2205:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2231:8:2"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2216:2:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2249:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:2"
									},
									"scope": 628,
									"src": "2196:98:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										644
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2427:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 219,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "2444:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 221,
													"indexExpression": {
														"id": 220,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2454:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2444:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 218,
												"id": 222,
												"nodeType": "Return",
												"src": "2437:25:2"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2300:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2361:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 215,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2400:8:2"
									},
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2379:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2371:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2370:17:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2418:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:9:2"
									},
									"scope": 628,
									"src": "2352:117:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										654
									],
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "2800:80:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 236,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "2820:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2820:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 238,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "2834:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2845:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 235,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2810:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "2810:42:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2869:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 234,
												"id": 243,
												"nodeType": "Return",
												"src": "2862:11:2"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2475:192:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2681:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 231,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2764:8:2"
									},
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2698:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2690:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2717:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2709:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2709:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2689:35:2"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2790:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2790:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2789:6:2"
									},
									"scope": 628,
									"src": "2672:208:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										664
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "3080:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 256,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3097:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 258,
														"indexExpression": {
															"id": 257,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3109:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3097:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 260,
													"indexExpression": {
														"id": 259,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "3116:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3097:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 255,
												"id": 261,
												"nodeType": "Return",
												"src": "3090:34:2"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "2886:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2947:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 252,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3041:8:2"
									},
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2965:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2957:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2972:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:32:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3067:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3067:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3066:9:2"
									},
									"scope": 628,
									"src": "2938:193:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										674
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "3394:77:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 275,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "3413:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3413:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 277,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "3427:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "3436:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 274,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "3404:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3404:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "3404:39:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3460:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 273,
												"id": 282,
												"nodeType": "Return",
												"src": "3453:11:2"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "3137:127:2",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3278:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 270,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3358:8:2"
									},
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3294:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3286:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3311:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3303:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:33:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 628,
									"src": "3269:202:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "4073:297:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4093:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4101:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "4112:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "4083:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "4083:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4151:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 305,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "4171:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4171:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 314,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "4252:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4276:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 307,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "4197:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 309,
																		"indexExpression": {
																			"id": 308,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "4209:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4197:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 312,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 310,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 94,
																			"src": "4217:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4217:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4197:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4231:3:2",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 852,
																"src": "4197:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4197:135:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 303,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "4129:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4129:213:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "4129:213:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4359:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 296,
												"id": 320,
												"nodeType": "Return",
												"src": "4352:11:2"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "3477:449:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3940:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 293,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4049:8:2"
									},
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3970:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "3962:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3962:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3994:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "3986:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4021:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4013:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3952:81:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4067:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4067:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4066:6:2"
									},
									"scope": 628,
									"src": "3931:439:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "4887:167:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 333,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "4919:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4919:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 335,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "4945:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 343,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "5005:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 336,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "4966:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 339,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 337,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 94,
																				"src": "4978:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4978:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4966:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 341,
																	"indexExpression": {
																		"id": 340,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "4992:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4966:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5001:3:2",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 807,
																"src": "4966:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4966:50:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 332,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "4897:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:129:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "4897:129:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5043:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 331,
												"id": 348,
												"nodeType": "Return",
												"src": "5036:11:2"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "4376:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4774:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4800:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4792:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4792:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "4817:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4809:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4809:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:37:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4877:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4877:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:6:2"
									},
									"scope": 628,
									"src": "4765:289:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "5668:259:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 361,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "5700:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5700:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 363,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "5726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 371,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "5803:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5836:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 364,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "5747:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 367,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 365,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 94,
																				"src": "5759:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5759:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5747:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 369,
																	"indexExpression": {
																		"id": 368,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "5773:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5747:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5782:3:2",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 852,
																"src": "5747:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5747:142:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5678:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5678:221:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "5678:221:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5916:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 359,
												"id": 377,
												"nodeType": "Return",
												"src": "5909:11:2"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "5060:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "5550:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5576:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "5568:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "5593:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "5585:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5567:42:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "5658:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5658:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5657:6:2"
									},
									"scope": 628,
									"src": "5541:386:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "6518:477:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 390,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "6536:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6554:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6546:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 391,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6546:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6546:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6536:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6558:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6528:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "6528:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 400,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "6616:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6637:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6629:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 401,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6629:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6629:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6616:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6641:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6608:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6608:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "6608:71:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "6711:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6719:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "6730:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "6690:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6690:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "6690:47:2"
											},
											{
												"expression": {
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 415,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "6748:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 417,
														"indexExpression": {
															"id": 416,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "6758:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6748:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 422,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "6803:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6823:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 418,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "6768:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 420,
																"indexExpression": {
																	"id": 419,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "6778:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6768:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6786:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 852,
															"src": "6768:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6768:105:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6748:125:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "6748:125:2"
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 427,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "6883:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 429,
														"indexExpression": {
															"id": 428,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6893:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6883:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "6931:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 430,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "6906:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 432,
																"indexExpression": {
																	"id": 431,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6916:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6906:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6927:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 807,
															"src": "6906:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6906:32:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6883:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "6883:55:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 439,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "6962:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6970:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "6981:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "6953:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6953:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "EmitStatement",
												"src": "6948:40:2"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "5933:463:2",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6410:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6437:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6429:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6461:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6453:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6488:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6480:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6419:81:2"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6518:0:2"
									},
									"scope": 628,
									"src": "6401:594:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "7330:305:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 454,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "7348:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7367:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7359:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7359:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7359:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7348:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7371:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7340:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7340:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "7340:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7445:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7437:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 464,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7437:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7437:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "7449:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "7458:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 463,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "7416:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7416:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "7416:49:2"
											},
											{
												"expression": {
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 472,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "7476:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 475,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7508:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 473,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "7491:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7504:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 807,
															"src": "7491:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7491:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7476:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "7476:39:2"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 479,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "7525:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 481,
														"indexExpression": {
															"id": 480,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "7535:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7525:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 486,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7569:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 482,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "7546:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 484,
																"indexExpression": {
																	"id": 483,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "7556:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7546:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7565:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 807,
															"src": "7546:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7546:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7525:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7525:51:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7608:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7600:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 491,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7600:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7600:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "7612:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "7621:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "7591:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "EmitStatement",
												"src": "7586:42:2"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7001:259:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7274:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7288:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "7280:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7280:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7305:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "7297:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7297:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7279:33:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7330:0:2"
									},
									"scope": 628,
									"src": "7265:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "8019:379:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 509,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "8037:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8056:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8048:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 510,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8048:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8048:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8037:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8060:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8029:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8029:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "8029:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 519,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "8128:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8145:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8137:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 520,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8137:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8137:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "8149:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 518,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "8107:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8107:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "8107:49:2"
											},
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 527,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "8167:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 529,
														"indexExpression": {
															"id": 528,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "8177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8167:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 534,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "8224:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8244:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 530,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "8188:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 532,
																"indexExpression": {
																	"id": 531,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "8198:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8188:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8207:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 852,
															"src": "8188:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8188:102:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8167:123:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "8167:123:2"
											},
											{
												"expression": {
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 539,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "8300:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 542,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "8332:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 540,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "8315:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8328:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 824,
															"src": "8315:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8315:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8300:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "8300:39:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 547,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "8363:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8380:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8372:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 548,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8372:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8372:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "8384:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 546,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "8354:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8354:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "EmitStatement",
												"src": "8349:42:2"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "7641:308:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7963:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7977:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "7969:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7994:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "7986:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7986:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7968:33:2"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8019:0:2"
									},
									"scope": 628,
									"src": "7954:444:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "8936:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 567,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "8954:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8971:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8963:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8963:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8963:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8954:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8975:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8946:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8946:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "8946:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 577,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "9032:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9051:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9043:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 578,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9043:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9043:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9032:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9055:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9024:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9024:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "9024:68:2"
											},
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 586,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "9103:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 589,
															"indexExpression": {
																"id": 587,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "9115:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9103:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 590,
														"indexExpression": {
															"id": 588,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "9122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9103:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 591,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "9133:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9103:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "9103:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 595,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "9163:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 596,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "9170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 597,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "9179:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 594,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "9154:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9154:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "EmitStatement",
												"src": "9149:37:2"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "8404:414:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8832:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8858:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "8850:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8881:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "8873:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8873:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8906:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "8898:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8840:78:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8936:0:2"
									},
									"scope": 628,
									"src": "8823:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "9566:38:2",
										"statements": [
											{
												"expression": {
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 607,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "9576:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 608,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "9588:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "9576:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "9576:21:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "9199:312:2",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nameLocation": "9525:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "9546:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "9540:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 603,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9540:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9539:17:2"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9566:0:2"
									},
									"scope": 628,
									"src": "9516:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "10310:2:2",
										"statements": []
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "9610:576:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10200:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10238:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "10230:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10230:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10260:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "10252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10280:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "10272:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10272:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10220:72:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10310:0:2"
									},
									"scope": 628,
									"src": "10191:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 627,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "10338:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "10318:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$44_storage",
										"typeString": "uint256[44]"
									},
									"typeName": {
										"baseType": {
											"id": 624,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "10318:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 626,
										"length": {
											"hexValue": "3434",
											"id": 625,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "10326:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_44_by_1",
												"typeString": "int_const 44"
											},
											"value": "44"
										},
										"nodeType": "ArrayTypeName",
										"src": "10318:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$44_storage_ptr",
											"typeString": "uint256[44]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 629,
							"src": "184:10162:2",
							"usedErrors": []
						}
					],
					"src": "32:10315:2"
				},
				"id": 2
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							705
						]
					},
					"id": 706,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 630,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 705,
							"linearizedBaseContracts": [
								705
							],
							"name": "IERC20",
							"nameLocation": "70:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "84:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 636,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "167:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:3"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "204:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:3"
									},
									"scope": 705,
									"src": "158:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "221:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "310:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "328:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "320:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:17:3"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "360:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:9:3"
									},
									"scope": 705,
									"src": "301:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "377:215:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "607:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "624:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "616:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "643:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "635:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:35:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "669:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 651,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:6:3"
									},
									"scope": 705,
									"src": "598:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "683:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "968:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "986:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "978:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1001:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "993:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:32:3"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "1033:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:9:3"
									},
									"scope": 705,
									"src": "959:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "1050:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1720:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1736:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1728:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1753:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1745:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:33:3"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1779:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1779:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:6:3"
									},
									"scope": 705,
									"src": "1711:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "1793:304:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2112:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2133:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2125:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2149:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2141:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2168:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2160:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:51:3"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2194:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 683,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2194:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2193:6:3"
									},
									"scope": 705,
									"src": "2103:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "2208:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 695,
									"name": "Transfer",
									"nameLocation": "2383:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2408:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "2392:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2430:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "2414:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2442:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "2434:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2434:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:57:3"
									},
									"src": "2377:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "2457:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 704,
									"name": "Approval",
									"nameLocation": "2620:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2645:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "2629:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2668:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "2652:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2685:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "2677:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:63:3"
									},
									"src": "2614:78:3"
								}
							],
							"scope": 706,
							"src": "60:2635:3",
							"usedErrors": []
						}
					],
					"src": "33:2662:3"
				},
				"id": 3
			},
			"contracts/Initializable.sol": {
				"ast": {
					"absolutePath": "contracts/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 707,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "Initializable",
							"nameLocation": "69:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "90:71:4",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 710,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "178:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "165:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 709,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "165:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "196:89:4",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 713,
									"mutability": "mutable",
									"name": "initializing",
									"nameLocation": "302:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "289:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 712,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "289:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "428:327:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 717,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "443:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 718,
																		"name": "isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "459:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "459:15:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "443:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "478:12:4",
																"subExpression": {
																	"id": 721,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "479:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "443:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "492:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															},
															"value": "Contract instance has already been initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															}
														],
														"id": 716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "435:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "435:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "435:106:4"
											},
											{
												"assignments": [
													728
												],
												"declarations": [
													{
														"constant": false,
														"id": 728,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "555:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "550:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 727,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "550:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "572:13:4",
													"subExpression": {
														"id": 729,
														"name": "initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "573:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "550:35:4"
											},
											{
												"condition": {
													"id": 732,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 728,
													"src": "596:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "592:83:4",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "612:63:4",
													"statements": [
														{
															"expression": {
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 733,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "621:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "636:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "621:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 736,
															"nodeType": "ExpressionStatement",
															"src": "621:19:4"
														},
														{
															"expression": {
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 737,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "649:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "663:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "649:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "649:18:4"
														}
													]
												}
											},
											{
												"id": 743,
												"nodeType": "PlaceholderStatement",
												"src": "683:1:4"
											},
											{
												"condition": {
													"id": 744,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 728,
													"src": "697:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "693:57:4",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "713:37:4",
													"statements": [
														{
															"expression": {
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 745,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "722:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "737:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "722:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 748,
															"nodeType": "ExpressionStatement",
															"src": "722:20:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "321:80:4",
										"text": " @dev Modifier to use in the initializer function of a contract."
									},
									"id": 752,
									"name": "initializer",
									"nameLocation": "414:11:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "425:2:4"
									},
									"src": "405:350:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "897:455:4",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "self",
														"nameLocation": "1246:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "1238:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 758,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1238:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [
														{
															"id": 762,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$779",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$779",
																"typeString": "contract Initializable"
															}
														],
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1253:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 760,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1253:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1253:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1238:28:4"
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "cs",
														"nameLocation": "1281:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "1273:10:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 765,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"nodeType": "VariableDeclarationStatement",
												"src": "1273:10:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1299:27:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1301:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "1319:4:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1307:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:17:4"
															},
															"variableNames": [
																{
																	"name": "cs",
																	"nodeType": "YulIdentifier",
																	"src": "1301:2:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 766,
														"isOffset": false,
														"isSlot": false,
														"src": "1301:2:4",
														"valueSize": 1
													},
													{
														"declaration": 759,
														"isOffset": false,
														"isSlot": false,
														"src": "1319:4:4",
														"valueSize": 1
													}
												],
												"id": 768,
												"nodeType": "InlineAssembly",
												"src": "1290:36:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 769,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "1339:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1345:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1339:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 772,
												"nodeType": "Return",
												"src": "1332:14:4"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "761:79:4",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isConstructor",
									"nameLocation": "853:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "866:2:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "891:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "891:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:6:4"
									},
									"scope": 779,
									"src": "844:508:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 778,
									"mutability": "mutable",
									"name": "______gap",
									"nameLocation": "1450:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "1430:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 775,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1430:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 777,
										"length": {
											"hexValue": "3530",
											"id": 776,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1438:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1430:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "60:1403:4",
							"usedErrors": []
						}
					],
					"src": "33:1430:4"
				},
				"id": 4
			},
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							974
						]
					},
					"id": 975,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 974,
							"linearizedBaseContracts": [
								974
							],
							"name": "SafeMath",
							"nameLocation": "68:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "382:114:5",
										"statements": [
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "401:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "393:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 791,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "393:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 793,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "405:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 794,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "409:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "405:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "393:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 798,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "429:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 799,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "434:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "429:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "437:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "421:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "421:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "421:46:5"
											},
											{
												"expression": {
													"id": 804,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 792,
													"src": "487:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 790,
												"id": 805,
												"nodeType": "Return",
												"src": "480:8:5"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "84:225:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "324:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "336:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "328:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "347:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "339:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:22:5"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "373:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:9:5"
									},
									"scope": 974,
									"src": "315:181:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "838:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 818,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "860:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 819,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "863:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "866:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 817,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															824,
															852
														],
														"referencedDeclaration": 852,
														"src": "856:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "856:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 816,
												"id": 822,
												"nodeType": "Return",
												"src": "849:50:5"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "504:261:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "780:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "792:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "784:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "803:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "795:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:22:5"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "829:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:9:5"
									},
									"scope": 974,
									"src": "771:136:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "1297:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 837,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1316:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 838,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1321:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1316:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 840,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "1324:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1308:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "1308:29:5"
											},
											{
												"assignments": [
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1356:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "1348:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1348:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 848,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "1360:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 846,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "1364:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1360:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:17:5"
											},
											{
												"expression": {
													"id": 849,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 844,
													"src": "1385:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 835,
												"id": 850,
												"nodeType": "Return",
												"src": "1378:8:5"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "915:281:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1211:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1223:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1215:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1234:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1226:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1251:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1237:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 830,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1237:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:50:5"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1288:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:9:5"
									},
									"scope": 974,
									"src": "1202:192:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "1712:404:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "1948:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1953:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1948:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "1944:47:5",
												"trueBody": {
													"id": 867,
													"nodeType": "Block",
													"src": "1956:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1978:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 861,
															"id": 866,
															"nodeType": "Return",
															"src": "1971:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													870
												],
												"declarations": [
													{
														"constant": false,
														"id": 870,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2011:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 886,
														"src": "2003:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 869,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 871,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "2015:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 872,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2019:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2015:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 876,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "2039:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 877,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "2043:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2039:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 879,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "2048:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2039:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2051:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 875,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2031:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2031:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "2031:56:5"
											},
											{
												"expression": {
													"id": 884,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 870,
													"src": "2107:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 861,
												"id": 885,
												"nodeType": "Return",
												"src": "2100:8:5"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1402:237:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1654:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1666:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1658:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1677:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1669:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1657:22:5"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1703:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:9:5"
									},
									"scope": 974,
									"src": "1645:471:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "2651:65:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 898,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "2673:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 899,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "2676:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2679:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 897,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															904,
															932
														],
														"referencedDeclaration": 932,
														"src": "2669:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2669:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 896,
												"id": 902,
												"nodeType": "Return",
												"src": "2662:46:5"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "2124:454:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2593:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2605:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "2597:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2616:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "2608:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2596:22:5"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "2642:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2642:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2641:9:5"
									},
									"scope": 974,
									"src": "2584:132:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "3299:250:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 917,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "3385:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3389:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3385:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 920,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "3392:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 916,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3377:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3377:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "3377:28:5"
											},
											{
												"assignments": [
													924
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3424:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "3416:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 923,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3416:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 928,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "3428:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 926,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "3432:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3428:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3416:17:5"
											},
											{
												"expression": {
													"id": 929,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 924,
													"src": "3540:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 915,
												"id": 930,
												"nodeType": "Return",
												"src": "3533:8:5"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "2724:474:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3213:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3225:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3217:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3217:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3236:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3228:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3228:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3253:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3239:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 910,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3239:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3216:50:5"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3290:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3290:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3289:9:5"
									},
									"scope": 974,
									"src": "3204:345:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "4073:63:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 943,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "4095:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 944,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "4098:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4101:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 942,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															949,
															973
														],
														"referencedDeclaration": 973,
														"src": "4091:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 941,
												"id": 947,
												"nodeType": "Return",
												"src": "4084:44:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "3557:443:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4015:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4027:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "4019:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4038:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "4030:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4030:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4018:22:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "4064:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4064:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4063:9:5"
									},
									"scope": 974,
									"src": "4006:130:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "4708:71:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 962,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "4727:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4732:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4727:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 965,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "4735:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4719:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4719:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "4719:29:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 968,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "4766:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 969,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "4770:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4766:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 960,
												"id": 971,
												"nodeType": "Return",
												"src": "4759:12:5"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "4144:463:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4622:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4634:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4626:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4626:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4645:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4637:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4637:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4662:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4648:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4648:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4625:50:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4699:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4699:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4698:9:5"
									},
									"scope": 974,
									"src": "4613:166:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 975,
							"src": "60:4722:5",
							"usedErrors": []
						}
					],
					"src": "33:4751:5"
				},
				"id": 5
			},
			"contracts/USDM.sol": {
				"ast": {
					"absolutePath": "contracts/USDM.sol",
					"exportedSymbols": {
						"Address": [
							62
						],
						"ContextUpgradeSafe": [
							110
						],
						"ERC20UpgradeSafe": [
							628
						],
						"IERC20": [
							705
						],
						"Initializable": [
							779
						],
						"SafeMath": [
							974
						],
						"USDM": [
							988
						]
					},
					"id": 989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 976,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "contracts/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 977,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 989,
							"sourceUnit": 629,
							"src": "57:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 978,
										"name": "ERC20UpgradeSafe",
										"nameLocations": [
											"97:16:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 628,
										"src": "97:16:6"
									},
									"id": 979,
									"nodeType": "InheritanceSpecifier",
									"src": "97:16:6"
								}
							],
							"canonicalName": "USDM",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 988,
							"linearizedBaseContracts": [
								988,
								628,
								705,
								110,
								779
							],
							"name": "USDM",
							"nameLocation": "89:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "175:16:6",
										"statements": []
									},
									"id": 987,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "555344204d6f6f6e6c6162",
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "151:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a72bc5e8cf6a7453b7d5e49ceb8fa35ea213b076e27e44590bc53cbc1de005c9",
														"typeString": "literal_string \"USD Moonlab\""
													},
													"value": "USD Moonlab"
												},
												{
													"hexValue": "5553444d31",
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "166:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_80a6e5396984990a18122caf139e92bdd2f26b8be2d647d80ac4cebb537e53e7",
														"typeString": "literal_string \"USDM1\""
													},
													"value": "USDM1"
												}
											],
											"id": 984,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 981,
												"name": "ERC20UpgradeSafe",
												"nameLocations": [
													"134:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 628,
												"src": "134:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "134:40:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "131:2:6"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:0:6"
									},
									"scope": 988,
									"src": "120:71:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 989,
							"src": "80:113:6",
							"usedErrors": []
						}
					],
					"src": "32:162:6"
				},
				"id": 6
			}
		}
	}
}