{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"decimals()": {
					"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/USDM.sol": "USDM"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Address.sol": {
			"keccak256": "0xf0079f7d951de77767005886e2fadacaf9192688e06090325f004a4346d49383",
			"license": "MIT",
			"urls": [
				"bzz-raw://bece5b11a4e62e1846173386ecf480910a10af6b019a86ab2a59e1b660aef2f8",
				"dweb:/ipfs/QmbstfaSgJ2Q46YcFudkZ5SFUAtHXoiCxDiZnN8FWXzHqX"
			]
		},
		"contracts/Context.sol": {
			"keccak256": "0x406fa0cfc58f5baf9f8a910d28bfb8ac4615d29369df677c833cfe511a293480",
			"license": "MIT",
			"urls": [
				"bzz-raw://3766fa5419c9e50c0ee79841b5d3404910851005c2a41c86bb2879beb291d147",
				"dweb:/ipfs/Qmb1bvvnFPijJD1oocq34eK3yM8RGGU8GzhgRxAzAXY4a4"
			]
		},
		"contracts/ERC20.sol": {
			"keccak256": "0x8165d16059d99a3b514ee131900d7a2e7caf0d05af7ef1a06a2680e2a522ff16",
			"license": "MIT",
			"urls": [
				"bzz-raw://db8ae4347b67aeb309ee9fe25c6d1f051d5be1d6f0fecc6e192c57071756ceba",
				"dweb:/ipfs/QmVkwu5KNXyozFywMgXA38hzmbAyqbokBwjMCDNf3pVdks"
			]
		},
		"contracts/IERC20.sol": {
			"keccak256": "0x4439427b57900ab539f5045ddaf003705222f59471aa0d6c8a068778672605ed",
			"license": "MIT",
			"urls": [
				"bzz-raw://e093160c78c1c21cdf32cc7099aa2ff08f1c2658107a3870497f1a2311d26f82",
				"dweb:/ipfs/QmXSRBTqm8UrBADZEPmPBZ37YPuM77kpgQyPYMvZTVQdNX"
			]
		},
		"contracts/Initializable.sol": {
			"keccak256": "0x7baf0ed980d789497ecea609b7459e3c7c8045772aa3805bab4e9730cf2c1ba5",
			"license": "MIT",
			"urls": [
				"bzz-raw://40ba8fc2453da882540d1a31a02c3ef9796e1a8bbfaa349d407bc6045d7efa6d",
				"dweb:/ipfs/QmVw28aviekGV9NifK2PzWrBtCxM2rbq8CLhNsrH6LYVNQ"
			]
		},
		"contracts/SafeMath.sol": {
			"keccak256": "0xc3410fa5d48057da2b67aa8e84828bb0efd96c3ec79b3fdf1adda3752b39d9b6",
			"license": "MIT",
			"urls": [
				"bzz-raw://ef432098b5ae79ceefe86d0ae8c4f2751354e6d98d22d38cf54f8c3314dee4dd",
				"dweb:/ipfs/QmQ4eR4fBSemx97LP1VabXt2bpGcPJ7g3i4r4NLs5Xa4VF"
			]
		},
		"contracts/USDM.sol": {
			"keccak256": "0xa4ff5422347f4625f9f75a882f657fd06f80a16b0ba7c2e08ec8002bb2572fd1",
			"license": "MIT",
			"urls": [
				"bzz-raw://2211eec7865aa777414df58357b613b40b79a81238a6468270cf513203183d87",
				"dweb:/ipfs/QmQwEHV7w3BKSjhVEHMYgpQ5iNBgVUXfX4doZJ8DYAcKnC"
			]
		}
	},
	"version": 1
}